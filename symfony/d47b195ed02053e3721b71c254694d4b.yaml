```yaml
category: HTTP
questions:
  - question: "Which HTTP method is typically used to retrieve a resource from the server?"
    answers:
      - { value: "POST", correct: false }
      - { value: "GET", correct: true }
      - { value: "PUT", correct: false }
      - { value: "DELETE", correct: false }
    help: |
      "https://symfony.com/doc/current/introduction/http_fundamentals"
  - question: "What is the purpose of the HTTP DELETE method?"
    answers:
      - { value: "To create a resource on the server.", correct: false }
      - { value: "To retrieve a resource from the server.", correct: false }
      - { value: "To delete the resource from the server.", correct: true }
      - { value: "To update a resource on the server.", correct: false }
    help: |
      "https://symfony.com/doc/current/introduction/http_fundamentals"
  - question: "Which HTTP status code indicates a successful request?"
    answers:
      - { value: "404 Not Found", correct: false }
      - { value: "500 Internal Server Error", correct: false }
      - { value: "200 OK", correct: true }
      - { value: "301 Moved Permanently", correct: false }
    help: |
      "https://symfony.com/doc/current/introduction/http_fundamentals"
  - question: "How can you access GET parameters in a Symfony `Request` object?"
    answers:
      - { value: "$request->post->get('param');", correct: false }
      - { value: "$request->query->get('param');", correct: true }
      - { value: "$request->get('param');", correct: false }
      - { value: "$request->attributes->get('param');", correct: false }
    help: |
      "https://symfony.com/doc/current/introduction/http_fundamentals"
  - question: "Which method is used to retrieve HTTP request headers from a Symfony `Request` object?"
    answers:
      - { value: "$request->getHeaders();", correct: false }
      - { value: "$request->headers->get('Host');", correct: true }
      - { value: "$request->server->get('HTTP_HOST');", correct: false }
      - { value: "$request->header('Host');", correct: false }
    help: |
      "https://symfony.com/doc/current/introduction/http_fundamentals"
  - question: "What is the correct way to set the content of a Symfony `Response` object?"
    answers:
      - { value: "$response->content = 'Hello';", correct: false }
      - { value: "$response->setContent('Hello');", correct: true }
      - { value: "$response->body('Hello');", correct: false }
      - { value: "$response->addContent('Hello');", correct: false }
    help: |
      "https://symfony.com/doc/current/components/http_foundation"
  - question: "How do you send a Symfony `Response` object to the client?"
    answers:
      - { value: "$response->print();", correct: false }
      - { value: "$response->output();", correct: false }
      - { value: "$response->send();", correct: true }
      - { value: "echo $response;", correct: false }
    help: |
      "https://symfony.com/doc/current/components/http_foundation"
  - question: "Which Symfony component provides the `Request` and `Response` classes?"
    answers:
      - { value: "HttpKernel", correct: false }
      - { value: "HttpFoundation", correct: true }
      - { value: "HttpClient", correct: false }
      - { value: "Routing", correct: false }
    help: |
      "https://symfony.com/doc/current/components/http_foundation"
  - question: "What is the purpose of the `Cache-Control: public, max-age=600` header?"
    answers:
      - { value: "To prevent caching of the response.", correct: false }
      - { value: "To indicate that the response can be cached by any cache and is fresh for 600 seconds.", correct: true }
      - { value: "To force revalidation of the cache after 600 seconds.", correct: false }
      - { value: "To specify that the response is private and can only be cached by the client's browser.", correct: false }
    help: |
      "https://symfony.com/doc/current/http_cache/expiration"
  - question: "Which HTTP header is used to indicate that a cached response should vary based on specific request headers?"
    answers:
      - { value: "Cache-Control", correct: false }
      - { value: "Expires", correct: false }
      - { value: "Vary", correct: true }
      - { value: "ETag", correct: false }
    help: |
      "https://symfony.com/doc/current/http_cache/cache_vary"
  - question: "How can you enable Symfony's built-in HTTP cache (reverse proxy) in the `prod` environment using YAML configuration?"
    answers:
      - { value: "framework: http_cache: false", correct: false }
      - { value: "when@dev: framework: http_cache: true", correct: false }
      - { value: "when@prod: framework: http_cache: true", correct: true }
      - { value: "framework: cache: http: true", correct: false }
    help: |
      "https://symfony.com/doc/current/book/http_cache"
  - question: "Which class is used to make HTTP requests in Symfony applications?"
    answers:
      - { value: "Symfony\\Component\\HttpFoundation\\Request", correct: false }
      - { value: "Symfony\\Component\\HttpClient\\HttpClient", correct: true }
      - { value: "GuzzleHttp\\Client", correct: false }
      - { value: "Symfony\\Component\\HttpKernel\\HttpKernel", correct: false }
    help: |
      "https://symfony.com/doc/current/http_client"
  - question: "How do you send a POST request with JSON content using Symfony's HttpClient?"
    answers:
      - { value: "$client->request('POST', '/api', ['form_params' => ['key' => 'value']]);", correct: false }
      - { value: "$client->request('POST', '/api', ['json' => ['key' => 'value']]);", correct: true }
      - { value: "$client->post('/api', ['body' => json_encode(['key' => 'value'])]);", correct: false }
      - { value: "$client->request('POST', '/api', ['body' => 'key=value']);", correct: false }
    help: |
      "https://symfony.com/doc/current/http_client"
  - question: "What is the purpose of `HttpClientInterface` in Symfony?"
    answers:
      - { value: "To handle incoming HTTP requests.", correct: false }
      - { value: "To define a contract for making HTTP requests.", correct: true }
      - { value: "To manage HTTP sessions.", correct: false }
      - { value: "To parse HTTP response bodies.", correct: false }
    help: |
      "https://symfony.com/doc/current/http_client"
  - question: "How can you retrieve the HTTP status code from a `ResponseInterface` object returned by Symfony's HttpClient?"
    answers:
      - { value: "$response->status();", correct: false }
      - { value: "$response->getStatusCode();", correct: true }
      - { value: "$response->getHttpCode();", correct: false }
      - { value: "$response->info('http_code');", correct: false }
    help: |
      "https://symfony.com/doc/current/http_client"
  - question: "Which method on `ResponseInterface` allows you to get the response body as a PHP array (assuming it's JSON)?"
    answers:
      - { value: "$response->json();", correct: false }
      - { value: "$response->toArray();", correct: true }
      - { value: "$response->getContentAsArray();", correct: false }
      - { value: "$response->decodeJson();", correct: false }
    help: |
      "https://symfony.com/doc/current/http_client"
  - question: "What happens if you call `getContent()` on a `ResponseInterface` object when the HTTP status code is 404 by default?"
    answers:
      - { value: "It returns an empty string.", correct: false }
      - { value: "It returns the 404 content.", correct: false }
      - { value: "It throws an `HttpExceptionInterface`.", correct: true }
      - { value: "It logs a warning but continues execution.", correct: false }
    help: |
      "https://symfony.com/doc/current/http_client"
  - question: "How can you prevent `HttpClientInterface` from throwing an exception for 3xx-5xx status codes when calling `getContent()`?"
    answers:
      - { value: "$response->getContent(false);", correct: true }
      - { value: "$response->getContent()->suppressExceptions();", correct: false }
      - { value: "Catch the exception in a try-catch block.", correct: false }
      - { value: "Configure the client with `throw_exceptions: false`.", correct: false }
    help: |
      "https://symfony.com/doc/current/http_client"
  - question: "Which of the following are valid ways to configure HTTP/2 support for Symfony's HttpClient?"
    answers:
      - { value: "Setting `http_version: '2.0'` in `default_options`.", correct: true }
      - { value: "Using `HttpClient::create(['http_version' => '2.0']);`.", correct: true }
      - { value: "It's enabled automatically for all HTTP requests.", correct: false }
      - { value: "Setting a `HTTP2_ENABLED` environment variable.", correct: false }
    help: |
      "https://symfony.com/doc/current/http_client"
  - question: "What is the primary benefit of using `stream()` with Symfony's HttpClient for multiple requests?"
    answers:
      - { value: "It guarantees requests are processed in a specific order.", correct: false }
      - { value: "It allows for synchronous processing of responses.", correct: false }
      - { value: "It enables asynchronous processing of responses as they arrive.", correct: true }
      - { value: "It automatically retries failed requests.", correct: false }
    help: |
      "https://symfony.com/doc/current/http_client"
  - question: "Which method on the `Request` object returns the URI being requested, excluding query parameters?"
    answers:
      - { value: "$request->getUri();", correct: false }
      - { value: "$request->getPathInfo();", correct: true }
      - { value: "$request->getRequestUri();", correct: false }
      - { value: "$request->getBaseUrl();", correct: false }
    help: |
      "https://symfony.com/doc/current/components/http_foundation"
  - question: "How do you access POST parameters from a Symfony `Request` object?"
    answers:
      - { value: "$request->query->get('param');", correct: false }
      - { value: "$request->request->get('param');", correct: false }
      - { value: "$request->getPayload()->get('param');", correct: true }
      - { value: "$request->post->get('param');", correct: false }
    help: |
      "https://symfony.com/doc/current/create_framework/http_foundation"
  - question: "Which `Request` object property allows access to `$_SERVER` variables?"
    answers:
      - { value: "$request->globals", correct: false }
      - { value: "$request->server", correct: true }
      - { value: "$request->env", correct: false }
      - { value: "$request->attributes", correct: false }
    help: |
      "https://symfony.com/doc/current/components/http_foundation"
  - question: "To retrieve an uploaded file from a Symfony `Request` object, which property and method would you use?"
    answers:
      - { value: "$request->files->get('attachment');", correct: true }
      - { value: "$request->getUploadedFile('attachment');", correct: false }
      - { value: "$request->file('attachment');", correct: false }
      - { value: "$request->attachments->get('attachment');", correct: false }
    help: |
      "https://symfony.com/doc/current/components/http_foundation"
  - question: "What is the purpose of `Request::createFromGlobals()`?"
    answers:
      - { value: "To create a new, empty Request object.", correct: false }
      - { value: "To create a Request object from the current PHP global variables (`$_GET`, `$_POST`, etc.).", correct: true }
      - { value: "To create a Request object from a given URI string.", correct: false }
      - { value: "To clone an existing Request object.", correct: false }
    help: |
      "https://symfony.com/doc/current/components/http_foundation"
  - question: "Which HTTP status code indicates that the requested resource has been permanently moved to a new URI?"
    answers:
      - { value: "200 OK", correct: false }
      - { value: "301 Moved Permanently", correct: true }
      - { value: "302 Found", correct: false }
      - { value: "410 Gone", correct: false }
    help: |
      "https://symfony.com/doc/current/introduction/http_fundamentals"
  - question: "What does a 403 Forbidden HTTP status code signify?"
    answers:
      - { value: "The server cannot find the requested resource.", correct: false }
      - { value: "The client is not authenticated.", correct: false }
      - { value: "The server understood the request but refuses to authorize it.", correct: true }
      - { value: "The request method is not supported for the requested resource.", correct: false }
    help: |
      "https://symfony.com/doc/current/introduction/http_fundamentals"
  - question: "Which HTTP method is idempotent and typically used for updating an existing resource completely?"
    answers:
      - { value: "POST", correct: false }
      - { value: "PATCH", correct: false }
      - { value: "PUT", correct: true }
      - { value: "GET", correct: false }
    help: |
      "https://symfony.com/doc/current/introduction/http_fundamentals"
  - question: "What is the difference between PUT and PATCH HTTP methods?"
    answers:
      - { value: "PUT is for creating resources, PATCH is for updating.", correct: false }
      - { value: "PUT replaces the entire resource, PATCH applies partial modifications.", correct: true }
      - { value: "PATCH is idempotent, PUT is not.", correct: false }
      - { value: "There is no functional difference; they are interchangeable.", correct: false }
    help: |
      "https://symfony.com/doc/current/introduction/http_fundamentals"
  - question: "How can you access a cookie value from a Symfony `Request` object?"
    answers:
      - { value: "$request->cookies->get('PHPSESSID');", correct: true }
      - { value: "$request->getCookie('PHPSESSID');", correct: false }
      - { value: "$request->session->get('PHPSESSID');", correct: false }
      - { value: "$_COOKIE['PHPSESSID'];", correct: false }
    help: |
      "https://symfony.com/doc/current/components/http_foundation"
  - question: "Which class is responsible for managing HTTP headers in a Symfony `Response` object?"
    answers:
      - { value: "ParameterBag", correct: false }
      - { value: "HeaderBag", correct: true }
      - { value: "ResponseHeaderBag", correct: false }
      - { value: "AttributeBag", correct: false }
    help: |
      "https://symfony.com/doc/current/components/http_foundation"
  - question: "What is the purpose of the `Expires` HTTP header in caching?"
    answers:
      - { value: "To specify the maximum age a resource can be cached.", correct: false }
      - { value: "To indicate the exact date and time after which the cached response is considered stale.", correct: true }
      - { value: "To force revalidation of the cache.", correct: false }
      - { value: "To prevent the resource from being cached.", correct: false }
    help: |
      "https://symfony.com/doc/current/http_cache/expiration"
  - question: "Which of the following are valid ways to configure HTTP Basic authentication for a Symfony HttpClient scoped client in YAML?"
    answers:
      - { value: "auth_basic: 'username:password'", correct: true }
      - { value: "basic_auth: { user: 'username', pass: 'password' }", correct: false }
      - { value: "auth: { type: 'basic', user: 'username', pass: 'password' }", correct: false }
      - { value: "auth_basic: ['username', 'password']", correct: true }
    help: |
      "https://symfony.com/doc/current/http_client"
  - question: "How can you configure a Bearer token for a Symfony HttpClient scoped client in PHP configuration?"
    answers:
      - { value: "$framework->httpClient()->scopedClient('my_api')->authBearer('my-token');", correct: true }
      - { value: "$framework->httpClient()->scopedClient('my_api')->setBearerToken('my-token');", correct: false }
      - { value: "$framework->httpClient()->scopedClient('my_api')->addHeader('Authorization', 'Bearer my-token');", correct: false }
      - { value: "$framework->httpClient()->scopedClient('my_api')->token('my-token');", correct: false }
    help: |
      "https://symfony.com/doc/current/http_client"
  - question: "What is the primary use case for `MockHttpClient` in Symfony?"
    answers:
      - { value: "To make real HTTP requests to external APIs.", correct: false }
      - { value: "To simulate HTTP responses for testing purposes.", correct: true }
      - { value: "To monitor HTTP traffic in a production environment.", correct: false }
      - { value: "To optimize HTTP request performance.", correct: false }
    help: |
      "https://symfony.com/doc/current/http_client"
  - question: "When using `MockHttpClient`, how can you simulate a 500 Internal Server Error response?"
    answers:
      - { value: "new MockResponse('', ['status' => 500]);", correct: false }
      - { value: "new MockResponse('', ['http_code' => 500]);", correct: true }
      - { value: "new MockResponse('', ['statusCode' => 500]);", correct: false }
      - { value: "new MockResponse('', ['error' => true]);", correct: false }
    help: |
      "https://symfony.com/doc/current/http_client"
  - question: "Which interface defines the `handle` method for processing an HTTP `Request` and returning a `Response` in Symfony's HttpKernel component?"
    answers:
      - { value: "ControllerInterface", correct: false }
      - { value: "HttpKernelInterface", correct: true }
      - { value: "RequestProcessorInterface", correct: false }
      - { value: "ResponseHandlerInterface", correct: false }
    help: |
      "https://symfony.com/doc/current/components/http_kernel"
  - question: "What is the purpose of the `kernel.view` event in Symfony?"
    answers:
      - { value: "To handle exceptions during request processing.", correct: false }
      - { value: "To convert a controller's return value (e.g., a string) into a `Response` object.", correct: true }
      - { value: "To render a Twig template.", correct: false }
      - { value: "To dispatch the main request.", correct: false }
    help: |
      "https://symfony.com/doc/current/create_framework/http_kernel_httpkernel_class"
  - question: "Which listener ensures that `Response::prepare()` is called to make the response HTTP compliant before sending?"
    answers:
      - { value: "StreamedResponseListener", correct: false }
      - { value: "ResponseListener", correct: true }
      - { value: "HttpCacheListener", correct: false }
      - { value: "ContentEncodingListener", correct: false }
    help: |
      "https://symfony.com/doc/current/create_framework/http_kernel_httpkernel_class"
  - question: "How can you add query string parameters to a GET request using Symfony's HttpClient?"
    answers:
      - { value: "$client->request('GET', '/api?param=value');", correct: false }
      - { value: "$client->request('GET', '/api', ['query' => ['param' => 'value']]);", correct: true }
      - { value: "$client->get('/api', ['params' => ['param' => 'value']]);", correct: false }
      - { value: "$client->request('GET', '/api', ['url_params' => ['param' => 'value']]);", correct: false }
    help: |
      "https://symfony.com/doc/current/http_client"
  - question: "What is the default value for `max_redirects` in Symfony's HttpClient?"
    answers:
      - { value: "0", correct: false }
      - { value: "5", correct: false }
      - { value: "7", correct: true }
      - { value: "10", correct: false }
    help: |
      "https://symfony.com/doc/current/http_client"
  - question: "Which of the following are valid ways to configure the default `max_redirects` for Symfony's HttpClient?"
    answers:
      - { value: "In `framework.yaml` under `http_client.default_options.max_redirects`.", correct: true }
      - { value: "Directly in `HttpClient::create(['max_redirects' => 7])`.", correct: true }
      - { value: "Using an environment variable `HTTP_CLIENT_MAX_REDIRECTS`.", correct: false }
      - { value: "In `services.yaml` as a service argument.", correct: false }
    help: |
      "https://symfony.com/doc/current/http_client"
  - question: "What is the purpose of `UriTemplateHttpClient`?"
    answers:
      - { value: "To validate URIs against a predefined template.", correct: false }
      - { value: "To simplify the use of URI templates (RFC 6570) by expanding variables into the request URL.", correct: true }
      - { value: "To generate random URIs for testing.", correct: false }
      - { value: "To encode URI components.", correct: false }
    help: |
      "https://symfony.com/doc/current/http_client"
  - question: "How can you dynamically adjust options for a specific HTTP client request without affecting the base client instance?"
    answers:
      - { value: "By creating a new `HttpClient` instance for each request.", correct: false }
      - { value: "By passing options as the third argument to the `request()` method.", correct: true }
      - { value: "By modifying the global client options before each request.", correct: false }
      - { value: "By using a separate `RequestOptions` object.", correct: false }
    help: |
      "https://symfony.com/doc/current/http_client"
  - question: "Which method on `HttpClientInterface` allows you to create a new client instance with modified default options?"
    answers:
      - { value: "withOptions()", correct: true }
      - { value: "setOptions()", correct: false }
      - { value: "configure()", correct: false }
      - { value: "cloneWithOptions()", correct: false }
    help: |
      "https://symfony.com/doc/current/http_client"
  - question: "What is the role of `ScopingHttpClient`?"
    answers:
      - { value: "To limit the scope of HTTP requests to a specific domain.", correct: false }
      - { value: "To apply different options to requests based on URL patterns or base URIs.", correct: true }
      - { value: "To restrict the number of concurrent HTTP requests.", correct: false }
      - { value: "To prevent requests from being sent to external URLs.", correct: false }
    help: |
      "https://symfony.com/doc/current/http_client"
  - question: "Which of the following are valid `Accept-*` header methods on the `Request` object that return lists ordered by descending quality?"
    answers:
      - { value: "getAcceptableContentTypes()", correct: true }
      - { value: "getLanguages()", correct: true }
      - { value: "getPreferredEncoding()", correct: false }
      - { value: "getCharsets()", correct: true }
    help: |
      "https://symfony.com/doc/current/components/http_foundation"
  - question: "What is the purpose of `RequestMatcher` classes in Symfony?"
    answers:
      - { value: "To generate HTTP requests based on specific criteria.", correct: false }
      - { value: "To validate incoming HTTP requests against defined criteria (e.g., scheme, host, path).", correct: true }
      - { value: "To match routes to incoming requests.", correct: false }
      - { value: "To filter HTTP responses.", correct: false }
    help: |
      "https://symfony.com/doc/current/components/http_foundation"
  - question: "Which `RequestMatcher` would you use to match requests based on both the host and the path?"
    answers:
      - { value: "HostPathRequestMatcher", correct: false }
      - { value: "CombinedRequestMatcher", correct: false }
      - { value: "ChainRequestMatcher", correct: true }
      - { value: "MultiRequestMatcher", correct: false }
    help: |
      "https://symfony.com/doc/current/components/http_foundation"
  - question: "What is the default HTTP port configured in Symfony's router?"
    answers:
      - { value: "80", correct: true }
      - { value: "443", correct: false }
      - { value: "8000", correct: false }
      - { value: "8080", correct: false }
    help: |
      "https://symfony.com/doc/current/reference/configuration/framework"
  - question: "Which Composer command is used to install the Symfony HTTP Client component?"
    answers:
      - { value: "composer require symfony/http-foundation", correct: false }
      - { value: "composer install symfony/http-client", correct: false }
      - { value: "composer require symfony/http-client", correct: true }
      - { value: "composer update symfony/http-client", correct: false }
    help: |
      "https://symfony.com/doc/current/http_client"
  - question: "What is the primary benefit of using `HarFileResponseFactory` with `MockHttpClient`?"
    answers:
      - { value: "To record live HTTP traffic.", correct: false }
      - { value: "To generate HAR files from test cases.", correct: false }
      - { value: "To simulate complex HTTP request/response scenarios based on pre-recorded HAR files for testing.", correct: true }
      - { value: "To optimize HAR file parsing.", correct: false }
    help: |
      "https://symfony.com/doc/current/http_client"
  - question: "Which exception interface is the base for all HttpClient exceptions in Symfony?"
    answers:
      - { value: "RuntimeException", correct: false }
      - { value: "ExceptionInterface", correct: true }
      - { value: "ClientExceptionInterface", correct: false }
      - { value: "ServerExceptionInterface", correct: false }
    help: |
      "https://symfony.com/doc/current/http_client"
  - question: "When does `HttpExceptionInterface` typically get thrown by Symfony's HttpClient?"
    answers:
      - { value: "When a network error occurs.", correct: false }
      - { value: "When the response content cannot be decoded.", correct: false }
      - { value: "When the code does not explicitly handle 300-599 HTTP status codes.", correct: true }
      - { value: "When the request times out.", correct: false }
    help: |
      "https://symfony.com/doc/current/http_client"
  - question: "What is the purpose of the `pause_handler` info item returned by `getInfo('debug')` on a `ResponseInterface`?"
    answers:
      - { value: "To pause the entire application execution.", correct: false }
      - { value: "To delay the request for a given number of seconds, useful for retries or throttling.", correct: true }
      - { value: "To halt the response processing indefinitely.", correct: false }
      - { value: "To suspend the HTTP client's internal operations.", correct: false }
    help: |
      "https://symfony.com/doc/current/http_client"
  - question: "Which HTTP method is typically used to create a new resource on the server, often when submitting a form?"
    answers:
      - { value: "GET", correct: false }
      - { value: "PUT", correct: false }
      - { value: "POST", correct: true }
      - { value: "PATCH", correct: false }
    help: |
      "https://symfony.com/doc/current/introduction/http_fundamentals"
  - question: "What is the purpose of the `User-Agent` HTTP request header?"
    answers:
      - { value: "To specify the preferred language of the client.", correct: false }
      - { value: "To indicate the type of content the client can accept.", correct: false }
      - { value: "To identify the client's software (e.g., browser, operating system).", correct: true }
      - { value: "To specify the host and port of the server.", correct: false }
    help: |
      "https://symfony.com/doc/current/introduction/http_fundamentals"
  - question: "Which HTTP status code indicates that the server successfully processed the request, but there is no content to send back?"
    answers:
      - { value: "200 OK", correct: false }
      - { value: "201 Created", correct: false }
      - { value: "204 No Content", correct: true }
      - { value: "202 Accepted", correct: false }
    help: |
      "https://symfony.com/doc/current/introduction/http_fundamentals"
  - question: "What is the primary function of the `Accept` HTTP request header?"
    answers:
      - { value: "To specify the character sets the client prefers.", correct: false }
      - { value: "To indicate the media types (e.g., `text/html`, `application/json`) that the client can process.", correct: true }
      - { value: "To specify the encoding methods the client understands.", correct: false }
      - { value: "To indicate the languages the client prefers.", correct: false }
    help: |
      "https://symfony.com/doc/current/introduction/http_fundamentals"
  - question: "Which HTTP status code indicates that the requested resource could not be found on the server?"
    answers:
      - { value: "400 Bad Request", correct: false }
      - { value: "401 Unauthorized", correct: false }
      - { value: "404 Not Found", correct: true }
      - { value: "403 Forbidden", correct: false }
    help: |
      "https://symfony.com/doc/current/introduction/http_fundamentals"
  - question: "What is the purpose of the `Content-Type` HTTP response header?"
    answers:
      - { value: "To specify the language of the content.", correct: false }
      - { value: "To indicate the size of the content.", correct: false }
      - { value: "To describe the media type of the resource returned to the client.", correct: true }
      - { value: "To specify the character encoding of the content.", correct: false }
    help: |
      "https://symfony.com/doc/current/introduction/http_fundamentals"
  - question: "Which of the following is a valid way to create a `Response` object with a 200 OK status and HTML content in Symfony?"
    answers:
      - { value: "new Response('<h1>Hello</h1>', 200, ['Content-Type' => 'text/html']);", correct: true }
      - { value: "new Response('<h1>Hello</h1>')->setStatusCode(Response::HTTP_OK)->setContentType('text/html');", correct: false }
      - { value: "Response::create('<h1>Hello</h1>', 200, 'text/html');", correct: false }
      - { value: "new Response('<h1>Hello</h1>', Response::HTTP_OK, ['content-type' => 'text/html']);", correct: true }
    help: |
      "https://symfony.com/doc/current/components/http_foundation"
  - question: "How can you get the raw request body content from a Symfony `Request` object?"
    answers:
      - { value: "$request->getRawBody();", correct: false }
      - { value: "$request->getContent();", correct: true }
      - { value: "$request->body();", correct: false }
      - { value: "$request->getPayload()->all();", correct: false }
    help: |
      "https://symfony.com/doc/current/components/http_foundation"
  - question: "Which of the following are valid transports for Symfony's HttpClient?"
    answers:
      - { value: "NativeHttpClient (uses PHP streams)", correct: true }
      - { value: "GuzzleHttpClient (uses Guzzle library)", correct: false }
      - { value: "CurlHttpClient (uses cURL PHP extension)", correct: true }
      - { value: "AmpHttpClient (uses amphp/http-client)", correct: true }
    help: |
      "https://symfony.com/doc/current/http_client"
  - question: "What is the purpose of `psr/http-client` and `nyholm/psr7` when working with Symfony's HttpClient?"
    answers:
      - { value: "They are required for synchronous HTTP requests.", correct: false }
      - { value: "They provide PSR-18 `ClientInterface` and an efficient PSR-7 implementation for request/response factories, respectively.", correct: true }
      - { value: "They are alternative HTTP client libraries to Symfony's HttpClient.", correct: false }
      - { value: "They are used for HTTP/2 support.", correct: false }
    help: |
      "https://symfony.com/doc/current/http_client"
  - question: "How can you simulate an HTTP request programmatically for testing purposes using `Symfony\\Component\\HttpFoundation\\Request`?"
    answers:
      - { value: "Request::createFromGlobals();", correct: false }
      - { value: "Request::create('/path?param=value');", correct: true }
      - { value: "new Request('/path', 'GET');", correct: false }
      - { value: "Request::simulate('/path');", correct: false }
    help: |
      "https://symfony.com/doc/current/create_framework/http_foundation"
  - question: "What is the role of `HttpBrowser` in Symfony's BrowserKit component?"
    answers:
      - { value: "To render web pages in a browser.", correct: false }
      - { value: "To simulate a web browser's behavior for making HTTP requests and interacting with web pages.", correct: true }
      - { value: "To inspect HTTP headers and content.", correct: false }
      - { value: "To manage browser sessions.", correct: false }
    help: |
      "https://symfony.com/doc/current/components/browser_kit"
  - question: "When using `HttpBrowser`, how do you retrieve the last received HTTP response object?"
    answers:
      - { value: "$browser->getLastResponse();", correct: false }
      - { value: "$browser->getResponse();", correct: true }
      - { value: "$browser->getCurrentResponse();", correct: false }
      - { value: "$browser->response;", correct: false }
    help: |
      "https://symfony.com/doc/current/components/browser_kit"
  - question: "Which of the following HTTP status codes indicate a client error?"
    answers:
      - { value: "200 OK", correct: false }
      - { value: "301 Moved Permanently", correct: false }
      - { value: "400 Bad Request", correct: true }
      - { value: "500 Internal Server Error", correct: false }
    help: |
      "https://symfony.com/doc/current/introduction/http_fundamentals"
  - question: "Which HTTP status code indicates that the request requires user authentication?"
    answers:
      - { value: "401 Unauthorized", correct: true }
      - { value: "403 Forbidden", correct: false }
      - { value: "407 Proxy Authentication Required", correct: false }
      - { value: "405 Method Not Allowed", correct: false }
    help: |
      "https://symfony.com/doc/current/introduction/http_fundamentals"
  - question: "What is the purpose of the `Accept-Language` HTTP request header?"
    answers:
      - { value: "To specify the preferred character encoding.", correct: false }
      - { value: "To indicate the human languages that the client prefers.", correct: true }
      - { value: "To specify the content types the client can accept.", correct: false }
      - { value: "To indicate the server's default language.", correct: false }
    help: |
      "https://symfony.com/doc/current/introduction/http_fundamentals"
  - question: "Which method on the `Request` object returns an array of languages the client accepts, ordered by quality?"
    answers:
      - { value: "$request->getPreferredLanguage();", correct: false }
      - { value: "$request->getLanguages();", correct: true }
      - { value: "$request->getAcceptLanguage();", correct: false }
      - { value: "$request->getLocale();", correct: false }
    help: |
      "https://symfony.com/doc/current/components/http_foundation"
  - question: "What is content negotiation in HTTP?"
    answers:
      - { value: "The process of negotiating a secure connection between client and server.", correct: false }
      - { value: "The process by which the server selects the best representation for a given response when there are multiple available representations.", correct: true }
      - { value: "The process of compressing HTTP content for faster transfer.", correct: false }
      - { value: "The process of agreeing on the HTTP protocol version to use.", correct: false }
    help: |
      "https://symfony.com/doc/current/components/http_foundation"
  - question: "Which HTTP header is primarily used for content negotiation based on media type?"
    answers:
      - { value: "Content-Type", correct: false }
      - { value: "Accept", correct: true }
      - { value: "Content-Encoding", correct: false }
      - { value: "Accept-Charset", correct: false }
    help: |
      "https://symfony.com/doc/current/components/http_foundation"
  - question: "What is the purpose of the `Accept-Encoding` HTTP request header?"
    answers:
      - { value: "To specify the character encoding of the content.", correct: false }
      - { value: "To indicate the compression algorithms (e.g., gzip, deflate) that the client can understand.", correct: true }
      - { value: "To specify the language of the content.", correct: false }
      - { value: "To indicate the media types the client accepts.", correct: false }
    help: |
      "https://symfony.com/doc/current/introduction/http_fundamentals"
  - question: "Which HTTP status code indicates that the request has been accepted for processing, but the processing has not been completed?"
    answers:
      - { value: "200 OK", correct: false }
      - { value: "201 Created", correct: false }
      - { value: "202 Accepted", correct: true }
      - { value: "204 No Content", correct: false }
    help: |
      "https://symfony.com/doc/current/introduction/http_fundamentals"
  - question: "What is the primary purpose of HTTP cookies?"
    answers:
      - { value: "To encrypt HTTP traffic.", correct: false }
      - { value: "To store small pieces of data on the client-side to maintain state or track user activity.", correct: true }
      - { value: "To speed up content delivery through caching.", correct: false }
      - { value: "To authenticate users against a server.", correct: false }
    help: |
      "https://symfony.com/doc/current/components/http_foundation"
  - question: "How can you set a cookie in a Symfony `Response` object?"
    answers:
      - { value: "$response->headers->setCookie(new Cookie('name', 'value'));", correct: true }
      - { value: "$response->setCookie('name', 'value');", correct: false }
      - { value: "$response->cookies->add('name', 'value');", correct: false }
      - { value: "setcookie('name', 'value');", correct: false }
    help: |
      "https://symfony.com/doc/current/components/http_foundation"
  - question: "Which HTTP status code indicates that the server is acting as a gateway or proxy and received an invalid response from an upstream server?"
    answers:
      - { value: "500 Internal Server Error", correct: false }
      - { value: "502 Bad Gateway", correct: true }
      - { value: "503 Service Unavailable", correct: false }
      - { value: "504 Gateway Timeout", correct: false }
    help: |
      "https://symfony.com/doc/current/introduction/http_fundamentals"
  - question: "What is the purpose of the `ETag` HTTP header in caching?"
    answers:
      - { value: "To specify the expiration date of the cached resource.", correct: false }
      - { value: "To provide a unique identifier for a specific version of a resource, used for conditional requests.", correct: true }
      - { value: "To indicate whether the resource is publicly cacheable.", correct: false }
      - { value: "To specify the maximum age of the cached resource.", correct: false }
    help: |
      "https://symfony.com/doc/current/http_cache/validation"
  - question: "Which HTTP status code indicates that the resource has been successfully created on the server?"
    answers:
      - { value: "200 OK", correct: false }
      - { value: "201 Created", correct: true }
      - { value: "202 Accepted", correct: false }
      - { value: "204 No Content", correct: false }
    help: |
      "https://symfony.com/doc/current/introduction/http_fundamentals"
  - question: "What is the purpose of the `If-None-Match` HTTP request header?"
    answers:
      - { value: "To check if a resource has been modified since a specified date.", correct: false }
      - { value: "To make a conditional request, only retrieving the resource if its ETag does not match any of the listed ETags.", correct: true }
      - { value: "To specify the preferred content encoding.", correct: false }
      - { value: "To indicate that the client is willing to accept a cached response.", correct: false }
    help: |
      "https://symfony.com/doc/current/http_cache/validation"
  - question: "Which HTTP status code is returned when a conditional GET request with `If-None-Match` or `If-Modified-Since` indicates the resource has not been modified?"
    answers:
      - { value: "200 OK", correct: false }
      - { value: "304 Not Modified", correct: true }
      - { value: "412 Precondition Failed", correct: false }
      - { value: "203 Non-Authoritative Information", correct: false }
    help: |
      "https://symfony.com/doc/current/http_cache/validation"
  - question: "What is a 'stale' cached response?"
    answers:
      - { value: "A response that is no longer valid and must be revalidated with the origin server.", correct: true }
      - { value: "A response that has been corrupted during transfer.", correct: false }
      - { value: "A response that is too old to be useful.", correct: false }
      - { value: "A response that was never fresh to begin with.", correct: false }
    help: |
      "https://symfony.com/doc/current/http_cache/expiration"
  - question: "Which of the following HTTP headers are related to cache expiration?"
    answers:
      - { value: "Cache-Control", correct: true }
      - { value: "Expires", correct: true }
      - { value: "Last-Modified", correct: false }
      - { value: "ETag", correct: false }
    help: |
      "https://symfony.com/doc/current/http_cache/expiration"
  - question: "What is the purpose of the `Last-Modified` HTTP header in caching?"
    answers:
      - { value: "To specify the date and time the resource was last modified, used for conditional requests.", correct: true }
      - { value: "To indicate the expiration date of the resource.", correct: false }
      - { value: "To provide a unique identifier for the resource.", correct: false }
      - { value: "To control how long the resource can be cached.", correct: false }
    help: |
      "https://symfony.com/doc/current/http_cache/validation"
  - question: "Which HTTP status code indicates that the server understands the content type of the request entity, but was unable to process the contained entities?"
    answers:
      - { value: "400 Bad Request", correct: false }
      - { value: "422 Unprocessable Entity", correct: true }
      - { value: "406 Not Acceptable", correct: false }
      - { value: "415 Unsupported Media Type", correct: false }
    help: |
      "https://symfony.com/doc/current/introduction/http_fundamentals"
  - question: "What is the primary difference between a 'main request' and a 'sub-request' in Symfony's HttpKernel?"
    answers:
      - { value: "A main request is always a GET request, while sub-requests can be any method.", correct: false }
      - { value: "A main request is initiated by the client, while a sub-request is an internal request made by the application.", correct: true }
      - { value: "Sub-requests are always cached, main requests are not.", correct: false }
      - { value: "Main requests have access to all services, sub-requests do not.", correct: false }
    help: |
      "https://symfony.com/doc/current/components/http_kernel"
  - question: "Which constant is used to identify a main request when calling `HttpKernelInterface::handle()`?"
    answers:
      - { value: "HttpKernelInterface::SUB_REQUEST", correct: false }
      - { value: "HttpKernelInterface::MAIN_REQUEST", correct: true }
      - { value: "HttpKernelInterface::MASTER_REQUEST", correct: false }
      - { value: "HttpKernelInterface::PRIMARY_REQUEST", correct: false }
    help: |
      "https://symfony.com/doc/current/components/http_kernel"
  - question: "What is the purpose of the `catch` parameter in `HttpKernelInterface::handle()`?"
    answers:
      - { value: "To catch all incoming HTTP requests.", correct: false }
      - { value: "To catch exceptions thrown during request handling.", correct: true }
      - { value: "To catch specific HTTP methods.", correct: false }
      - { value: "To catch and log all HTTP responses.", correct: false }
    help: |
      "https://symfony.com/doc/current/components/http_kernel"
  - question: "Which HTTP status code indicates that the server is temporarily unable to handle the request due to maintenance or overload?"
    answers:
      - { value: "500 Internal Server Error", correct: false }
      - { value: "503 Service Unavailable", correct: true }
      - { value: "504 Gateway Timeout", correct: false }
      - { value: "429 Too Many Requests", correct: false }
    help: |
      "https://symfony.com/doc/current/introduction/http_fundamentals"
  - question: "What is the purpose of the `Retry-After` HTTP header?"
    answers:
      - { value: "To specify the maximum number of retries for a request.", correct: false }
      - { value: "To indicate how long the client should wait before making a new request.", correct: true }
      - { value: "To specify the delay between retries.", correct: false }
      - { value: "To inform the client about the retry strategy.", correct: false }
    help: |
      "https://symfony.com/doc/current/http_client"
  - question: "Which of the following are common options for configuring retry behavior in Symfony's HttpClient?"
    answers:
      - { value: "max_retries", correct: true }
      - { value: "delay", correct: true }
      - { value: "retry_codes", correct: false }
      - { value: "http_codes", correct: true }
    help: |
      "https://symfony.com/doc/current/reference/configuration/framework"
  - question: "What does `jitter` refer to in the context of HttpClient retry configuration?"
    answers:
      - { value: "The maximum delay between retries.", correct: false }
      - { value: "A random factor applied to the retry delay to prevent thundering herd problems.", correct: true }
      - { value: "The number of concurrent retries allowed.", correct: false }
      - { value: "The minimum delay before the first retry.", correct: false }
    help: |
      "https://symfony.com/doc/current/reference/configuration/framework"
  - question: "Which HTTP status code indicates that the request was well-formed but was unable to be followed due to semantic errors?"
    answers:
      - { value: "400 Bad Request", correct: false }
      - { value: "422 Unprocessable Entity", correct: true }
      - { value: "406 Not Acceptable", correct: false }
      - { value: "415 Unsupported Media Type", correct: false }
    help: |
      "https://symfony.com/doc/current/introduction/http_fundamentals"
  - question: "What is the purpose of the `Host` HTTP request header?"
    answers:
      - { value: "To specify the client's IP address.", correct: false }
      - { value: "To indicate the domain name of the server (for virtual hosting).", correct: true }
      - { value: "To specify the port number of the server.", correct: false }
      - { value: "To identify the client's operating system.", correct: false }
    help: |
      "https://symfony.com/doc/current/introduction/http_fundamentals"
  - question: "Which HTTP status code indicates that the request method is not supported for the requested resource?"
    answers:
      - { value: "400 Bad Request", correct: false }
      - { value: "405 Method Not Allowed", correct: true }
      - { value: "403 Forbidden", correct: false }
      - { value: "404 Not Found", correct: false }
    help: |
      "https://symfony.com/doc/current/introduction/http_fundamentals"
  - question: "What is the purpose of the `Location` HTTP response header?"
    answers:
      - { value: "To specify the physical location of the server.", correct: false }
      - { value: "To indicate the URL to which the client should be redirected.", correct: true }
      - { value: "To specify the geographical location of the client.", correct: false }
      - { value: "To provide the absolute path of the requested resource.", correct: false }
    help: |
      "https://symfony.com/doc/current/introduction/http_fundamentals"
  - question: "Which HTTP status code indicates that the server successfully processed the request and is returning partial content?"
    answers:
      - { value: "200 OK", correct: false }
      - { value: "206 Partial Content", correct: true }
      - { value: "203 Non-Authoritative Information", correct: false }
      - { value: "205 Reset Content", correct: false }
    help: |
      "https://symfony.com/doc/current/introduction/http_fundamentals"
  - question: "What is the primary benefit of using asynchronous HTTP requests with Symfony's HttpClient?"
    answers:
      - { value: "It simplifies error handling.", correct: false }
      - { value: "It allows multiple requests to be sent and processed concurrently without blocking.", correct: true }
      - { value: "It guarantees faster response times for individual requests.", correct: false }
      - { value: "It reduces the amount of data transferred over the network.", correct: false }
    help: |
      "https://symfony.com/doc/current/http_client"
  - question: "Which method is used to send asynchronous requests with `HttplugClient`?"
    answers:
      - { value: "sendRequest()", correct: false }
      - { value: "sendAsyncRequest()", correct: true }
      - { value: "requestAsync()", correct: false }
      - { value: "dispatchRequest()", correct: false }
    help: |
      "https://symfony.com/doc/current/http_client"
  - question: "What is a 'promise' in the context of asynchronous HTTP requests?"
    answers:
      - { value: "A guarantee that the request will succeed.", correct: false }
      - { value: "An object representing the eventual completion (or failure) of an asynchronous operation and its resulting value.", correct: true }
      - { value: "A callback function that executes after the request is sent.", correct: false }
      - { value: "A mechanism for retrying failed requests.", correct: false }
    help: |
      "https://symfony.com/doc/current/http_client"
  - question: "How do you wait for a specific promise to resolve while monitoring all pending promises with `HttplugClient`?"
    answers:
      - { value: "$promise->wait();", correct: true }
      - { value: "$httpClient->wait($promise);", correct: false }
      - { value: "$promise->resolve();", correct: false }
      - { value: "$httpClient->await($promise);", correct: false }
    help: |
      "https://symfony.com/doc/current/http_client"
  - question: "What is the purpose of the `Transfer-Encoding: chunked` HTTP header?"
    answers:
      - { value: "To indicate that the message body is compressed.", correct: false }
      - { value: "To specify that the message body is sent in a series of chunks, allowing streaming.", correct: true }
      - { value: "To indicate the total length of the message body.", correct: false }
      - { value: "To specify the character encoding of the message body.", correct: false }
    help: |
      "https://symfony.com/doc/current/introduction/http_fundamentals"
  - question: "Which HTTP status code indicates that the server understands the request but refuses to fulfill it, and authorization will not help?"
    answers:
      - { value: "401 Unauthorized", correct: false }
      - { value: "403 Forbidden", correct: true }
      - { value: "407 Proxy Authentication Required", correct: false }
      - { value: "404 Not Found", correct: false }
    help: |
      "https://symfony.com/doc/current/introduction/http_fundamentals"
  - question: "What is the purpose of the `Connection: close` HTTP header?"
    answers:
      - { value: "To indicate that the client wants to keep the connection alive.", correct: false }
      - { value: "To signal that the server should close the connection after completing the response.", correct: true }
      - { value: "To close the client's browser window.", correct: false }
      - { value: "To indicate a network error.", correct: false }
    help: |
      "https://symfony.com/doc/current/introduction/http_fundamentals"
  - question: "Which HTTP status code indicates that the server has an internal error or misconfiguration?"
    answers:
      - { value: "400 Bad Request", correct: false }
      - { value: "404 Not Found", correct: false }
      - { value: "500 Internal Server Error", correct: true }
      - { value: "503 Service Unavailable", correct: false }
    help: |
      "https://symfony.com/doc/current/introduction/http_fundamentals"
  - question: "What is the purpose of the `If-Modified-Since` HTTP request header?"
    answers:
      - { value: "To specify the date the resource was last modified.", correct: false }
      - { value: "To make a conditional request, only retrieving the resource if it has been modified since the specified date.", correct: true }
      - { value: "To indicate the preferred date format.", correct: false }
      - { value: "To set the modification date of a resource.", correct: false }
    help: |
      "https://symfony.com/doc/current/http_cache/validation"
  - question: "Which HTTP status code indicates that the client should continue with the request or ignore the response if the request is already complete?"
    answers:
      - { value: "100 Continue", correct: true }
      - { value: "101 Switching Protocols", correct: false }
      - { value: "200 OK", correct: false }
      - { value: "204 No Content", correct: false }
    help: |
      "https://symfony.com/doc/current/introduction/http_fundamentals"
  - question: "What is the purpose of the `WWW-Authenticate` HTTP response header?"
    answers:
      - { value: "To provide authentication credentials to the server.", correct: false }
      - { value: "To define the authentication method that should be used to gain access to a resource.", correct: true }
      - { value: "To indicate that the client is already authenticated.", correct: false }
      - { value: "To specify the authentication realm.", correct: false }
    help: |
      "https://symfony.com/doc/current/introduction/http_fundamentals"
  - question: "Which HTTP status code indicates that the server is currently unable to handle the request due to a temporary overload or scheduled maintenance, which will likely be alleviated after some delay?"
    answers:
      - { value: "500 Internal Server Error", correct: false }
      - { value: "502 Bad Gateway", correct: false }
      - { value: "503 Service Unavailable", correct: true }
      - { value: "504 Gateway Timeout", correct: false }
    help: |
      "https://symfony.com/doc/current/introduction/http_fundamentals"
  - question: "What is the purpose of the `Content-Length` HTTP header?"
    answers:
      - { value: "To specify the maximum length of the content the server can send.", correct: false }
      - { value: "To indicate the size of the entity-body, in octets, sent to the recipient.", correct: true }
      - { value: "To specify the minimum length of the content.", correct: false }
      - { value: "To indicate the number of characters in the content.", correct: false }
    help: |
      "https://symfony.com/doc/current/introduction/http_fundamentals"
  - question: "Which HTTP status code indicates that the server successfully processed the request, but the returned meta-information is from a cached copy rather than the origin server?"
    answers:
      - { value: "200 OK", correct: false }
      - { value: "203 Non-Authoritative Information", correct: true }
      - { value: "204 No Content", correct: false }
      - { value: "205 Reset Content", correct: false }
    help: |
      "https://symfony.com/doc/current/introduction/http_fundamentals"
  - question: "What is the purpose of the `If-Match` HTTP request header?"
    answers:
      - { value: "To check if a resource has been modified since a specific date.", correct: false }
      - { value: "To make a conditional request, only performing the action if the ETag of the resource matches one of the listed ETags.", correct: true }
      - { value: "To specify the preferred content type.", correct: false }
      - { value: "To indicate that the client is willing to accept any ETag.", correct: false }
    help: |
      "https://symfony.com/doc/current/http_cache/validation"
  - question: "Which HTTP status code indicates that the server does not support the media type of the request body?"
    answers:
      - { value: "400 Bad Request", correct: false }
      - { value: "406 Not Acceptable", correct: false }
      - { value: "415 Unsupported Media Type", correct: true }
      - { value: "422 Unprocessable Entity", correct: false }
    help: |
      "https://symfony.com/doc/current/introduction/http_fundamentals"
  - question: "What is the purpose of the `Range` HTTP request header?"
    answers:
      - { value: "To specify a range of acceptable status codes.", correct: false }
      - { value: "To request only part of a resource from the server.", correct: true }
      - { value: "To indicate the maximum size of the response body.", correct: false }
      - { value: "To specify a range of IP addresses.", correct: false }
    help: |
      "https://symfony.com/doc/current/introduction/http_fundamentals"
  - question: "Which HTTP status code indicates that the client should switch to a different protocol?"
    answers:
      - { value: "100 Continue", correct: false }
      - { value: "101 Switching Protocols", correct: true }
      - { value: "200 OK", correct: false }
      - { value: "300 Multiple Choices", correct: false }
    help: |
      "https://symfony.com/doc/current/introduction/http_fundamentals"
  - question: "What is the purpose of the `Content-Disposition` HTTP header?"
    answers:
      - { value: "To specify how the content should be displayed (e.g., inline, attachment) and optionally the filename.", correct: true }
      - { value: "To indicate the content's language.", correct: false }
      - { value: "To specify the content's character set.", correct: false }
      - { value: "To describe the content's encoding.", correct: false }
    help: |
      "https://symfony.com/doc/current/introduction/http_fundamentals"
  - question: "Which HTTP status code indicates that the server has received too many requests in a given amount of time?"
    answers:
      - { value: "403 Forbidden", correct: false }
      - { value: "429 Too Many Requests", correct: true }
      - { value: "503 Service Unavailable", correct: false }
      - { value: "509 Bandwidth Limit Exceeded", correct: false }
    help: |
      "https://symfony.com/doc/current/introduction/http_fundamentals"
  - question: "What is the purpose of the `X-Forwarded-For` HTTP header?"
    answers:
      - { value: "To indicate the original IP address of the client when the request passes through a proxy.", correct: true }
      - { value: "To specify the proxy server's IP address.", correct: false }
      - { value: "To forward the request to another server.", correct: false }
      - { value: "To indicate the client's preferred language.", correct: false }
    help: |
      "https://symfony.com/doc/current/components/http_foundation"
  - question: "Which HTTP status code indicates that the server successfully processed the request, but the client should reset the document view?"
    answers:
      - { value: "200 OK", correct: false }
      - { value: "204 No Content", correct: false }
      - { value: "205 Reset Content", correct: true }
      - { value: "206 Partial Content", correct: false }
    help: |
      "https://symfony.com/doc/current/introduction/http_fundamentals"
  - question: "What is the purpose of the `Strict-Transport-Security` (HSTS) HTTP header?"
    answers:
      - { value: "To force the client to use HTTP/2.", correct: false }
      - { value: "To instruct browsers to only interact with the site using HTTPS for a specified duration.", correct: true }
      - { value: "To enforce strict content security policies.", correct: false }
      - { value: "To prevent cross-site scripting attacks.", correct: false }
    help: |
      "https://symfony.com/doc/current/introduction/http_fundamentals"
  - question: "Which HTTP status code indicates that the server cannot or will not process the request due to something that is perceived to be a client error (e.g., malformed request syntax)?"
    answers:
      - { value: "400 Bad Request", correct: true }
      - { value: "401 Unauthorized", correct: false }
      - { value: "403 Forbidden", correct: false }
      - { value: "404 Not Found", correct: false }
    help: |
      "https://symfony.com/doc/current/introduction/http_fundamentals"
  - question: "What is the purpose of the `Referer` (sic) HTTP request header?"
    answers:
      - { value: "To indicate the URL of the page that linked to the current request.", correct: true }
      - { value: "To specify the preferred language of the client.", correct: false }
      - { value: "To indicate the client's IP address.", correct: false }
      - { value: "To specify the host of the requested resource.", correct: false }
    help: |
      "https://symfony.com/doc/current/introduction/http_fundamentals"
  - question: "Which HTTP status code indicates that the requested resource has multiple possible representations, and the client should choose one?"
    answers:
      - { value: "200 OK", correct: false }
      - { value: "300 Multiple Choices", correct: true }
      - { value: "301 Moved Permanently", correct: false }
      - { value: "302 Found", correct: false }
    help: |
      "https://symfony.com/doc/current/introduction/http_fundamentals"
  - question: "What is the purpose of the `Set-Cookie` HTTP response header?"
    answers:
      - { value: "To retrieve a cookie from the client.", correct: false }
      - { value: "To send a cookie from the server to the client's browser.", correct: true }
      - { value: "To delete a cookie from the client.", correct: false }
      - { value: "To update an existing cookie on the client.", correct: false }
    help: |
      "https://symfony.com/doc/current/components/http_foundation"
  - question: "Which HTTP status code indicates that the server is a gateway or proxy and did not receive a response from the upstream server within the allowed time?"
    answers:
      - { value: "502 Bad Gateway", correct: false }
      - { value: "503 Service Unavailable", correct: false }
      - { value: "504 Gateway Timeout", correct: true }
      - { value: "408 Request Timeout", correct: false }
    help: |
      "https://symfony.com/doc/current/introduction/http_fundamentals"
  - question: "What is the purpose of the `Upgrade-Insecure-Requests` HTTP request header?"
    answers:
      - { value: "To request that the server upgrade to a more secure protocol (e.g., HTTP/2).", correct: false }
      - { value: "To signal to the server that the client prefers a secure (HTTPS) version of the resource.", correct: true }
      - { value: "To indicate that the client is willing to accept insecure connections.", correct: false }
      - { value: "To upgrade the client's browser to a newer version.", correct: false }
    help: |
      "https://symfony.com/doc/current/introduction/http_fundamentals"
  - question: "Which HTTP status code indicates that the server does not recognize the request method?"
    answers:
      - { value: "400 Bad Request", correct: false }
      - { value: "405 Method Not Allowed", correct: false }
      - { value: "501 Not Implemented", correct: true }
      - { value: "404 Not Found", correct: false }
    help: |
      "https://symfony.com/doc/current/introduction/http_fundamentals"
  - question: "What is the purpose of the `X-Requested-With` HTTP header, commonly used in AJAX requests?"
    answers:
      - { value: "To indicate that the request is an XMLHttpRequest (AJAX).", correct: true }
      - { value: "To specify the client's preferred language.", correct: false }
      - { value: "To indicate the type of content the client expects.", correct: false }
      - { value: "To prevent cross-site request forgery (CSRF) attacks.", correct: false }
    help: |
      "https://symfony.com/doc/current/components/http_foundation"
  - question: "Which HTTP status code indicates that the server needs to fulfill the request through a proxy?"
    answers:
      - { value: "305 Use Proxy", correct: true }
      - { value: "307 Temporary Redirect", correct: false }
      - { value: "407 Proxy Authentication Required", correct: false }
      - { value: "502 Bad Gateway", correct: false }
    help: |
      "https://symfony.com/doc/current/introduction/http_fundamentals"
  - question: "What is the purpose of the `If-Unmodified-Since` HTTP request header?"
    answers:
      - { value: "To make a conditional request, only performing the action if the resource has NOT been modified since the specified date.", correct: true }
      - { value: "To check if a resource has been modified since a specific date.", correct: false }
      - { value: "To specify the preferred date format.", correct: false }
      - { value: "To set the modification date of a resource.", correct: false }
    help: |
      "https://symfony.com/doc/current/http_cache/validation"
  - question: "Which HTTP status code indicates that the request could not be understood by the server due to malformed syntax?"
    answers:
      - { value: "400 Bad Request", correct: true }
      - { value: "401 Unauthorized", correct: false }
      - { value: "403 Forbidden", correct: false }
      - { value: "404 Not Found", correct: false }
    help: |
      "https://symfony.com/doc/current/introduction/http_fundamentals"
  - question: "What is the purpose of the `Authorization` HTTP request header?"
    answers:
      - { value: "To specify the client's preferred language.", correct: false }
      - { value: "To carry credentials (e.g., Basic, Bearer) to authenticate a user agent with a server.", correct: true }
      - { value: "To indicate the type of content the client accepts.", correct: false }
      - { value: "To specify the host and port of the server.", correct: false }
    help: |
      "https://symfony.com/doc/current/introduction/http_fundamentals"
  - question: "Which HTTP status code indicates that the request has been received and understood, but the client is not authorized to access the requested resource?"
    answers:
      - { value: "401 Unauthorized", correct: true }
      - { value: "403 Forbidden", correct: false }
      - { value: "407 Proxy Authentication Required", correct: false }
      - { value: "405 Method Not Allowed", correct: false }
    help: |
      "https://symfony.com/doc/current/introduction/http_fundamentals"
  - question: "What is the purpose of the `Content-Encoding` HTTP header?"
    answers:
      - { value: "To specify the character encoding of the content.", correct: false }
      - { value: "To indicate the encoding (e.g., gzip, deflate) applied to the message body.", correct: true }
      - { value: "To specify the language of the content.", correct: false }
      - { value: "To indicate the media type of the content.", correct: false }
    help: |
      "https://symfony.com/doc/current/introduction/http_fundamentals"
  - question: "Which HTTP status code indicates that the server successfully processed the request, but the client should follow a temporary redirect?"
    answers:
      - { value: "301 Moved Permanently", correct: false }
      - { value: "302 Found", correct: true }
      - { value: "303 See Other", correct: false }
      - { value: "307 Temporary Redirect", correct: true }
    help: |
      "https://symfony.com/doc/current/introduction/http_fundamentals"
  - question: "What is the purpose of the `User-Agent` HTTP request header?"
    answers:
      - { value: "To specify the preferred language of the client.", correct: false }
      - { value: "To identify the client's software (e.g., browser, operating system) and version.", correct: true }
      - { value: "To indicate the type of content the client can accept.", correct: false }
      - { value: "To specify the host and port of the server.", correct: false }
    help: |
      "https://symfony.com/doc/current/introduction/http_fundamentals"
  - question: "Which HTTP status code indicates that the server is refusing to process a request because the request entity is larger than the server is willing or able to process?"
    answers:
      - { value: "400 Bad Request", correct: false }
      - { value: "413 Payload Too Large", correct: true }
      - { value: "414 URI Too Long", correct: false }
      - { value: "415 Unsupported Media Type", correct: false }
    help: |
      "https://symfony.com/doc/current/introduction/http_fundamentals"
  - question: "What is the purpose of the `Content-Language` HTTP header?"
    answers:
      - { value: "To specify the character encoding of the content.", correct: false }
      - { value: "To indicate the language(s) that the intended audience of the enclosed content is primarily intended for.", correct: true }
      - { value: "To specify the media type of the content.", correct: false }
      - { value: "To indicate the content's length.", correct: false }
    help: |
      "https://symfony.com/doc/current/introduction/http_fundamentals"
  - question: "Which HTTP status code indicates that the server has fulfilled the request and there is no content to send back, but the client should reset the document view?"
    answers:
      - { value: "200 OK", correct: false }
      - { value: "204 No Content", correct: false }
      - { value: "205 Reset Content", correct: true }
      - { value: "206 Partial Content", correct: false }
    help: |
      "https://symfony.com/doc/current/introduction/http_fundamentals"
  - question: "What is the purpose of the `X-Frame-Options` HTTP header?"
    answers:
      - { value: "To prevent cross-site scripting (XSS) attacks.", correct: false }
      - { value: "To indicate whether a browser should be allowed to render a page in a `<frame>`, `<iframe>`, `<embed>` or `<object>` tag.", correct: true }
      - { value: "To specify the preferred frame rate for video content.", correct: false }
      - { value: "To control caching of framed content.", correct: false }
    help: |
      "https://symfony.com/doc/current/introduction/http_fundamentals"
  - question: "Which HTTP status code indicates that the server is unwilling to process the request because its header fields are too large?"
    answers:
      - { value: "400 Bad Request", correct: false }
      - { value: "413 Payload Too Large", correct: false }
      - { value: "431 Request Header Fields Too Large", correct: true }
      - { value: "414 URI Too Long", correct: false }
    help: |
      "https://symfony.com/doc/current/introduction/http_fundamentals"
  - question: "What is the purpose of the `Access-Control-Allow-Origin` HTTP response header in CORS?"
    answers:
      - { value: "To specify which HTTP methods are allowed for a resource.", correct: false }
      - { value: "To indicate which origins are permitted to access the resource via a cross-origin request.", correct: true }
      - { value: "To specify which headers can be used in a cross-origin request.", correct: false }
      - { value: "To indicate the maximum age for preflight request results.", correct: false }
    help: |
      "https://symfony.com/doc/current/introduction/http_fundamentals"
  - question: "Which HTTP status code indicates that the server understands the request but cannot fulfill it due to a conflict with the current state of the resource?"
    answers:
      - { value: "400 Bad Request", correct: false }
      - { value: "409 Conflict", correct: true }
      - { value: "412 Precondition Failed", correct: false }
      - { value: "422 Unprocessable Entity", correct: false }
    help: |
      "https://symfony.com/doc/current/introduction/http_fundamentals"
  - question: "What is the purpose of the `Pragma: no-cache` HTTP header?"
    answers:
      - { value: "To indicate that the response should be cached for a short period.", correct: false }
      - { value: "To prevent caching of the response by any cache.", correct: true }
      - { value: "To force revalidation of the cache.", correct: false }
      - { value: "To specify the maximum age of the cached resource.", correct: false }
    help: |
      "https://symfony.com/doc/current/http_cache/expiration"
  - question: "Which HTTP status code indicates that the server has received the request but is refusing to process it because the request URI is too long?"
    answers:
      - { value: "400 Bad Request", correct: false }
      - { value: "413 Payload Too Large", correct: false }
      - { value: "414 URI Too Long", correct: true }
      - { value: "431 Request Header Fields Too Large", correct: false }
    help: |
      "https://symfony.com/doc/current/introduction/http_fundamentals"
  - question: "What is the purpose of the `Content-Security-Policy` (CSP) HTTP header?"
    answers:
      - { value: "To prevent cross-site scripting (XSS) and other code injection attacks by specifying allowed content sources.", correct: true }
      - { value: "To enforce strict transport security.", correct: false }
      - { value: "To control caching of web content.", correct: false }
      - { value: "To specify the preferred language of the content.", correct: false }
    help: |
      "https://symfony.com/doc/current/introduction/http_fundamentals"
  - question: "Which HTTP status code indicates that the server is unable to fulfill the request because the client has not met certain preconditions?"
    answers:
      - { value: "400 Bad Request", correct: false }
      - { value: "409 Conflict", correct: false }
      - { value: "412 Precondition Failed", correct: true }
      - { value: "422 Unprocessable Entity", correct: false }
    help: |
      "https://symfony.com/doc/current/introduction/http_fundamentals"
  - question: "What is the purpose of the `X-Content-Type-Options: nosniff` HTTP header?"
    answers:
      - { value: "To prevent browsers from MIME-sniffing a response away from the declared `Content-Type`.", correct: true }
      - { value: "To disable content negotiation.", correct: false }
      - { value: "To force the browser to display content as plain text.", correct: false }
      - { value: "To prevent cross-site scripting attacks.", correct: false }
    help: |
      "https://symfony.com/doc/current/introduction/http_fundamentals"
  - question: "Which HTTP status code indicates that the server is refusing to process the request because the request's protocol version is not supported?"
    answers:
      - { value: "400 Bad Request", correct: false }
      - { value: "426 Upgrade Required", correct: false }
      - { value: "505 HTTP Version Not Supported", correct: true }
      - { value: "501 Not Implemented", correct: false }
    help: |
      "https://symfony.com/doc/current/introduction/http_fundamentals"
  - question: "What is the purpose of the `DNT` (Do Not Track) HTTP request header?"
    answers:
      - { value: "To request that the server not track the user's online activities.", correct: true }
      - { value: "To disable tracking cookies.", correct: false }
      - { value: "To indicate that the client does not support tracking.", correct: false }
      - { value: "To specify the preferred tracking method.", correct: false }
    help: |
      "https://symfony.com/doc/current/introduction/http_fundamentals"
  - question: "Which HTTP status code indicates that the server cannot find anything matching the Request-URI and the client should not repeat the request without modification?"
    answers:
      - { value: "400 Bad Request", correct: false }
      - { value: "404 Not Found", correct: true }
      - { value: "410 Gone", correct: false }
      - { value: "405 Method Not Allowed", correct: false }
    help: |
      "https://symfony.com/doc/current/introduction/http_fundamentals"
  - question: "What is the purpose of the `X-XSS-Protection` HTTP header?"
    answers:
      - { value: "To prevent cross-site scripting (XSS) attacks by enabling browser-side XSS filters.", correct: true }
      - { value: "To protect against cross-site request forgery (CSRF) attacks.", correct: false }
      - { value: "To enforce strict content security policies.", correct: false }
      - { value: "To disable browser's built-in security features.", correct: false }
    help: |
      "https://symfony.com/doc/current/introduction/http_fundamentals"
  - question: "Which HTTP status code indicates that the server has received the request headers and the client should proceed to send the request body?"
    answers:
      - { value: "100 Continue", correct: true }
      - { value: "200 OK", correct: false }
      - { value: "202 Accepted", correct: false }
      - { value: "204 No Content", correct: false }
    help: |
      "https://symfony.com/doc/current/introduction/http_fundamentals"
  - question: "What is the purpose of the `Upgrade` HTTP header?"
    answers:
      - { value: "To request that the server upgrade to a newer version of the HTTP protocol.", correct: false }
      - { value: "To invite the client to switch to a different protocol (e.g., WebSocket).", correct: true }
      - { value: "To indicate that the client supports protocol upgrades.", correct: false }
      - { value: "To upgrade the client's software.", correct: false }
    help: |
      "https://symfony.com/doc/current/introduction/http_fundamentals"
  - question: "Which HTTP status code indicates that the server has successfully processed the request and is returning information about the request, but not the resource itself?"
    answers:
      - { value: "200 OK", correct: false }
      - { value: "203 Non-Authoritative Information", correct: false }
      - { value: "204 No Content", correct: false }
      - { value: "200 OK (with empty body)", correct: false }
    help: |
      "https://symfony.com/doc/current/introduction/http_fundamentals"
  - question: "What is the purpose of the `Via` HTTP header?"
    answers:
      - { value: "To indicate the path taken by the request or response through proxies.", correct: true }
      - { value: "To specify the preferred route for the request.", correct: false }
      - { value: "To indicate the client's IP address.", correct: false }
      - { value: "To specify the server's location.", correct: false }
    help: |
      "https://symfony.com/doc/current/introduction/http_fundamentals"
  - question: "Which HTTP status code indicates that the server has received the request and is processing it, but no response is available yet?"
    answers:
      - { value: "100 Continue", correct: false }
      - { value: "102 Processing", correct: true }
      - { value: "202 Accepted", correct: false }
      - { value: "204 No Content", correct: false }
    help: |
      "https://symfony.com/doc/current/introduction/http_fundamentals"
  - question: "What is the purpose of the `Warning` HTTP header?"
    answers:
      - { value: "To indicate a critical error in the HTTP transaction.", correct: false }
      - { value: "To convey additional information about the status or transformation of a message that might not be reflected in the status code.", correct: true }
      - { value: "To warn the client about potential security risks.", correct: false }
      - { value: "To indicate a deprecated feature.", correct: false }
    help: |
      "https://symfony.com/doc/current/introduction/http_fundamentals"
  - question: "Which HTTP status code indicates that the server is refusing to fulfill the request because the target resource is configured to require a TLS/SSL connection?"
    answers:
      - { value: "401 Unauthorized", correct: false }
      - { value: "403 Forbidden", correct: false }
      - { value: "426 Upgrade Required", correct: false }
      - { value: "421 Misdirected Request", correct: false }
    help: |
      "https://symfony.com/doc/current/introduction/http_fundamentals"
  - question: "What is the purpose of the `Age` HTTP response header?"
    answers:
      - { value: "To indicate the age of the client's browser.", correct: false }
      - { value: "To specify the time in seconds that the object has been in a proxy cache.", correct: true }
      - { value: "To indicate the expiration time of the resource.", correct: false }
      - { value: "To specify the maximum age of the cached resource.", correct: false }
    help: |
      "https://symfony.com/doc/current/http_cache/expiration"
  - question: "Which HTTP status code indicates that the server is refusing to fulfill the request because the request entity's media type is not supported by the server?"
    answers:
      - { value: "400 Bad Request", correct: false }
      - { value: "406 Not Acceptable", correct: false }
      - { value: "415 Unsupported Media Type", correct: true }
      - { value: "422 Unprocessable Entity", correct: false }
    help: |
      "https://symfony.com/doc/current/introduction/http_fundamentals"
  - question: "What is the purpose of the `Proxy-Authenticate` HTTP response header?"
    answers:
      - { value: "To provide authentication credentials to a proxy server.", correct: false }
      - { value: "To define the authentication method that should be used to gain access to a resource via a proxy.", correct: true }
      - { value: "To indicate that the client is already authenticated with the proxy.", correct: false }
      - { value: "To specify the proxy server's address.", correct: false }
    help: |
      "https://symfony.com/doc/current/introduction/http_fundamentals"
  - question: "Which HTTP status code indicates that the client must first authenticate itself with the proxy?"
    answers:
      - { value: "401 Unauthorized", correct: false }
      - { value: "403 Forbidden", correct: false }
      - { value: "407 Proxy Authentication Required", correct: true }
      - { value: "405 Method Not Allowed", correct: false }
    help: |
      "https://symfony.com/doc/current/introduction/http_fundamentals"
  - question: "What is the purpose of the `TE` (Transfer-Encoding) HTTP request header?"
    answers:
      - { value: "To specify the preferred transfer encoding for the response.", correct: true }
      - { value: "To indicate the content encoding of the request body.", correct: false }
      - { value: "To specify the character set of the request body.", correct: false }
      - { value: "To indicate the length of the request body.", correct: false }
    help: |
      "https://symfony.com/doc/current/introduction/http_fundamentals"
  - question: "Which HTTP status code indicates that the server has received the request, but it has not been processed and is likely to be processed at a later time?"
    answers:
      - { value: "200 OK", correct: false }
      - { value: "202 Accepted", correct: true }
      - { value: "204 No Content", correct: false }
      - { value: "102 Processing", correct: false }
    help: |
      "https://symfony.com/doc/current/introduction/http_fundamentals"
  - question: "What is the purpose of the `X-Powered-By` HTTP header?"
    answers:
      - { value: "To indicate the server software and possibly its version.", correct: true }
      - { value: "To specify the client's operating system.", correct: false }
      - { value: "To indicate the programming language used to generate the response.", correct: false }
      - { value: "To specify the power consumption of the server.", correct: false }
    help: |
      "https://symfony.com/doc/current/introduction/http_fundamentals"
  - question: "Which HTTP status code indicates that the server is refusing to fulfill the request because the request entity is too large?"
    answers:
      - { value: "400 Bad Request", correct: false }
      - { value: "413 Payload Too Large", correct: true }
      - { value: "414 URI Too Long", correct: false }
      - { value: "431 Request Header Fields Too Large", correct: false }
    help: |
      "https://symfony.com/doc/current/introduction/http_fundamentals"
  - question: "What is the purpose of the `Accept-Charset` HTTP request header?"
    answers:
      - { value: "To specify the preferred character sets for the response.", correct: true }
      - { value: "To indicate the content encoding the client can accept.", correct: false }
      - { value: "To specify the language of the content.", correct: false }
      - { value: "To indicate the media types the client accepts.", correct: false }
    help: |
      "https://symfony.com/doc/current/components/http_foundation"
  - question: "Which HTTP status code indicates that the server is refusing to fulfill the request because the client's IP address is blacklisted?"
    answers:
      - { value: "403 Forbidden", correct: false }
      - { value: "401 Unauthorized", correct: false }
      - { value: "406 Not Acceptable", correct: false }
      - { value: "No specific HTTP status code for IP blacklisting; typically 403 or custom.", correct: true }
    help: |
      "https://symfony.com/doc/current/introduction/http_fundamentals"
  - question: "What is the purpose of the `X-HTTP-Method-Override` HTTP header?"
    answers:
      - { value: "To override the HTTP method in a request, typically used when a client cannot send PUT or DELETE requests directly.", correct: true }
      - { value: "To specify a custom HTTP method.", correct: false }
      - { value: "To indicate the original HTTP method of a redirected request.", correct: false }
      - { value: "To prevent method spoofing.", correct: false }
    help: |
      "https://symfony.com/doc/current/introduction/http_fundamentals"
  - question: "Which HTTP status code indicates that the server cannot fulfill the request because the request includes a range that cannot be satisfied?"
    answers:
      - { value: "400 Bad Request", correct: false }
      - { value: "416 Range Not Satisfiable", correct: true }
      - { value: "413 Payload Too Large", correct: false }
      - { value: "415 Unsupported Media Type", correct: false }
    help: |
      "https://symfony.com/doc/current/introduction/http_fundamentals"
  - question: "What is the purpose of the `Proxy-Connection` HTTP header?"
    answers:
      - { value: "To specify the connection type between the client and the proxy.", correct: true }
      - { value: "To indicate the connection type between the proxy and the origin server.", correct: false }
      - { value: "To manage persistent connections through a proxy.", correct: false }
      - { value: "To specify the proxy server's address.", correct: false }
    help: |
      "https://symfony.com/doc/current/introduction/http_fundamentals"
  - question: "Which HTTP status code indicates that the server has received the request, but the client should follow another URI and continue with the original request method?"
    answers:
      - { value: "301 Moved Permanently", correct: false }
      - { value: "302 Found", correct: false }
      - { value: "307 Temporary Redirect", correct: true }
      - { value: "303 See Other", correct: false }
    help: |
      "https://symfony.com/doc/current/introduction/http_fundamentals"
  - question: "What is the purpose of the `Cache-Control: no-store` HTTP header?"
    answers:
      - { value: "To indicate that the response should not be stored by any cache.", correct: true }
      - { value: "To prevent caching of the response by public caches only.", correct: false }
      - { value: "To force revalidation of the cache.", correct: false }
      - { value: "To specify the maximum age of the cached resource.", correct: false }
    help: |
      "https://symfony.com/doc/current/http_cache/expiration"
  - question: "Which HTTP status code indicates that the server requires a specific protocol version to fulfill the request?"
    answers:
      - { value: "400 Bad Request", correct: false }
      - { value: "426 Upgrade Required", correct: true }
      - { value: "505 HTTP Version Not Supported", correct: false }
      - { value: "415 Unsupported Media Type", correct: false }
    help: |
      "https://symfony.com/doc/current/introduction/http_fundamentals"
  - question: "What is the purpose of the `X-CSRF-Token` HTTP header?"
    answers:
      - { value: "To prevent cross-site scripting (XSS) attacks.", correct: false }
      - { value: "To protect against cross-site request forgery (CSRF) attacks.", correct: true }
      - { value: "To specify the preferred content type.", correct: false }
      - { value: "To indicate the client's IP address.", correct: false }
    help: |
      "https://symfony.com/doc/current/introduction/http_fundamentals"
  - question: "Which HTTP status code indicates that the server is refusing to fulfill the request because the request's method is not allowed for the resource?"
    answers:
      - { value: "400 Bad Request", correct: false }
      - { value: "405 Method Not Allowed", correct: true }
      - { value: "403 Forbidden", correct: false }
      - { value: "404 Not Found", correct: false }
    help: |
      "https://symfony.com/doc/current/introduction/http_fundamentals"
  - question: "What is the purpose of the `If-Range` HTTP request header?"
    answers:
      - { value: "To make a conditional request for a range of a resource, only if the resource has not changed.", correct: true }
      - { value: "To specify a range of acceptable status codes.", correct: false }
      - { value: "To indicate the maximum size of the response body.", correct: false }
      - { value: "To specify a range of IP addresses.", correct: false }
    help: |
      "https://symfony.com/doc/current/http_cache/validation"
  - question: "Which HTTP status code indicates that the server is refusing to fulfill the request because the client has made too many requests in a given amount of time?"
    answers:
      - { value: "403 Forbidden", correct: false }
      - { value: "429 Too Many Requests", correct: true }
      - { value: "503 Service Unavailable", correct: false }
      - { value: "509 Bandwidth Limit Exceeded", correct: false }
    help: |
      "https://symfony.com/doc/current/introduction/http_fundamentals"
  - question: "What is the purpose of the `Content-Location` HTTP header?"
    answers:
      - { value: "To specify the physical location of the content.", correct: false }
      - { value: "To provide an alternative location for the content, typically a more specific URI.", correct: true }
      - { value: "To indicate the geographical location of the content.", correct: false }
      - { value: "To specify the content's language.", correct: false }
    help: |
      "https://symfony.com/doc/current/introduction/http_fundamentals"
  - question: "Which HTTP status code indicates that the server successfully processed the request, but the client should follow a permanent redirect?"
    answers:
      - { value: "301 Moved Permanently", correct: true }
      - { value: "302 Found", correct: false }
      - { value: "303 See Other", correct: false }
      - { value: "307 Temporary Redirect", correct: false }
    help: |
      "https://symfony.com/doc/current/introduction/http_fundamentals"
  - question: "What is the purpose of the `Accept-Datetime` HTTP request header?"
    answers:
      - { value: "To specify the preferred date format.", correct: false }
      - { value: "To indicate the client's preferred date and time for a resource, used for content negotiation based on time.", correct: true }
      - { value: "To specify the modification date of a resource.", correct: false }
      - { value: "To indicate the expiration date of a resource.", correct: false }
    help: |
      "https://symfony.com/doc/current/introduction/http_fundamentals"
  - question: "Which HTTP status code indicates that the server is refusing to fulfill the request because the request's URI is too long?"
    answers:
      - { value: "400 Bad Request", correct: false }
      - { value: "413 Payload Too Large", correct: false }
      - { value: "414 URI Too Long", correct: true }
      - { value: "431 Request Header Fields Too Large", correct: false }
    help: |
      "https://symfony.com/doc/current/introduction/http_fundamentals"
  - question: "What is the purpose of the `X-Forwarded-Proto` HTTP header?"
    answers:
      - { value: "To indicate the original protocol (HTTP or HTTPS) of the client's request when it passes through a proxy.", correct: true }
      - { value: "To specify the proxy server's protocol.", correct: false }
      - { value: "To forward the request to another protocol.", correct: false }
      - { value: "To indicate the client's preferred protocol.", correct: false }
    help: |
      "https://symfony.com/doc/current/components/http_foundation"
  - question: "Which HTTP status code indicates that the server is refusing to fulfill the request because the request's method is not allowed for the resource?"
    answers:
      - { value: "400 Bad Request", correct: false }
      - { value: "405 Method Not Allowed", correct: true }
      - { value: "403 Forbidden", correct: false }
      - { value: "404 Not Found", correct: false }
    help: |
      "https://symfony.com/doc/current/introduction/http_fundamentals"
  - question: "What is the purpose of the `If-Modified-Since` HTTP request header?"
    answers:
      - { value: "To specify the date the resource was last modified.", correct: false }
      - { value: "To make a conditional request, only retrieving the resource if it has been modified since the specified date.", correct: true }
      - { value: "To indicate the preferred date format.", correct: false }
      - { value: "To set the modification date of a resource.", correct: false }
    help: |
      "https://symfony.com/doc/current/http_cache/validation"
  - question: "Which HTTP status code indicates that the server is refusing to fulfill the request because the target resource is configured to require a TLS/SSL connection?"
    answers:
      - { value: "401 Unauthorized", correct: false }
      - { value: "403 Forbidden", correct: false }
      - { value: "426 Upgrade Required", correct: false }
      - { value: "421 Misdirected Request", correct: false }
    help: |
      "https://symfony.com/doc/current/introduction/http_fundamentals"
  - question: "What is the purpose of the `X-Forwarded-Host` HTTP header?"
    answers:
      - { value: "To indicate the original host requested by the client when the request passes through a proxy.", correct: true }
      - { value: "To specify the proxy server's host.", correct: false }
      - { value: "To forward the request to another host.", correct: false }
      - { value: "To indicate the client's preferred host.", correct: false }
    help: |
      "https://symfony.com/doc/current/components/http_foundation"
  - question: "Which HTTP status code indicates that the server is refusing to fulfill the request because the client has made too many requests in a given amount of time?"
    answers:
      - { value: "403 Forbidden", correct: false }
      - { value: "429 Too Many Requests", correct: true }
      - { value: "503 Service Unavailable", correct: false }
      - { value: "509 Bandwidth Limit Exceeded", correct: false }
    help: |
      "https://symfony.com/doc/current/introduction/http_fundamentals"
  - question: "What is the purpose of the `Content-Range` HTTP header?"
    answers:
      - { value: "To specify the total length of the content.", correct: false }
      - { value: "To indicate the range of bytes included in the partial response.", correct: true }
      - { value: "To specify the maximum range of content the server can send.", correct: false }
      - { value: "To indicate the number of parts in a multi-part response.", correct: false }
    help: |
      "https://symfony.com/doc/current/introduction/http_fundamentals"
  - question: "Which HTTP status code indicates that the server is refusing to fulfill the request because the target resource is configured to require a TLS/SSL connection?"
    answers:
      - { value: "401 Unauthorized", correct: false }
      - { value: "403 Forbidden", correct: false }
      - { value: "426 Upgrade Required", correct: false }
      - { value: "421 Misdirected Request", correct: false }
    help: |
      "https://symfony.com/doc/current/introduction/http_fundamentals"
  - question: "What is the purpose of the `X-Content-Type-Options: nosniff` HTTP header?"
    answers:
      - { value: "To prevent browsers from MIME-sniffing a response away from the declared `Content-Type`.", correct: true }
      - { value: "To disable content negotiation.", correct: false }
      - { value: "To force the browser to display content as plain text.", correct: false }
      - { value: "To prevent cross-site scripting attacks.", correct: false }
    help: |
      "https://symfony.com/doc/current/introduction/http_fundamentals"
  - question: "Which HTTP status code indicates that the server is refusing to fulfill the request because the request's protocol version is not supported?"
    answers:
      - { value: "400 Bad Request", correct: false }
      - { value: "426 Upgrade Required", correct: false }
      - { value: "505 HTTP Version Not Supported", correct: true }
      - { value: "501 Not Implemented", correct: false }
    help: |
      "https://symfony.com/doc/current/introduction/http_fundamentals"
  - question: "What is the purpose of the `DNT` (Do Not Track) HTTP request header?"
    answers:
      - { value: "To request that the server not track the user's online activities.", correct: true }
      - { value: "To disable tracking cookies.", correct: false }
      - { value: "To indicate that the client does not support tracking.", correct: false }
      - { value: "To specify the preferred tracking method.", correct: false }
    help: |
      "https://symfony.com/doc/current/introduction/http_fundamentals"
  - question: "Which HTTP status code indicates that the server cannot find anything matching the Request-URI and the client should not repeat the request without modification?"
    answers:
      - { value: "400 Bad Request", correct: false }
      - { value: "404 Not Found", correct: true }
      - { value: "410 Gone", correct: false }
      - { value: "405 Method Not Allowed", correct: false }
    help: |
      "https://symfony.com/doc/current/introduction/http_fundamentals"
  - question: "What is the purpose of the `X-XSS-Protection` HTTP header?"
    answers:
      - { value: "To prevent cross-site scripting (XSS) attacks by enabling browser-side XSS filters.", correct: true }
      - { value: "To protect against cross-site request forgery (CSRF) attacks.", correct: false }
      - { value: "To enforce strict content security policies.", correct: false }
      - { value: "To disable browser's built-in security features.", correct: false }
    help: |
      "https://symfony.com/doc/current/introduction/http_fundamentals"
  - question: "Which HTTP status code indicates that the server has received the request headers and the client should proceed to send the request body?"
    answers:
      - { value: "100 Continue", correct: true }
      - { value: "200 OK", correct: false }
      - { value: "202 Accepted", correct: false }
      - { value: "204 No Content", correct: false }
    help: |
      "https://symfony.com/doc/current/introduction/http_fundamentals"
  - question: "What is the purpose of the `Upgrade` HTTP header?"
    answers:
      - { value: "To request that the server upgrade to a newer version of the HTTP protocol.", correct: false }
      - { value: "To invite the client to switch to a different protocol (e.g., WebSocket).", correct: true }
      - { value: "To indicate that the client supports protocol upgrades.", correct: false }
      - { value: "To upgrade the client's software.", correct: false }
    help: |
      "https://symfony.com/doc/current/introduction/http_fundamentals"
  - question: "Which HTTP status code indicates that the server has successfully processed the request and is returning information about the request, but not the resource itself?"
    answers:
      - { value: "200 OK", correct: false }
      - { value: "203 Non-Authoritative Information", correct: true }
      - { value: "204 No Content", correct: false }
      - { value: "200 OK (with empty body)", correct: false }
    help: |
      "https://symfony.com/doc/current/introduction/http_fundamentals"
  - question: "What is the purpose of the `Via` HTTP header?"
    answers:
      - { value: "To indicate the path taken by the request or response through proxies.", correct: true }
      - { value: "To specify the preferred route for the request.", correct: false }
      - { value: "To indicate the client's IP address.", correct: false }
      - { value: "To specify the server's location.", correct: false }
    help: |
      "https://symfony.com/doc/current/introduction/http_fundamentals"
  - question: "Which HTTP status code indicates that the server has received the request and is processing it, but no response is available yet?"
    answers:
      - { value: "100 Continue", correct: false }
      - { value: "102 Processing", correct: true }
      - { value: "202 Accepted", correct: false }
      - { value: "204 No Content", correct: false }
    help: |
      "https://symfony.com/doc/current/introduction/http_fundamentals"
  - question: "What is the purpose of the `Warning` HTTP header?"
    answers:
      - { value: "To indicate a critical error in the HTTP transaction.", correct: false }
      - { value: "To convey additional information about the status or transformation of a message that might not be reflected in the status code.", correct: true }
      - { value: "To warn the client about potential security risks.", correct: false }
      - { value: "To indicate a deprecated feature.", correct: false }
    help: |
      "https://symfony.com/doc/current/introduction/http_fundamentals"
  - question: "Which HTTP status code indicates that the server is refusing to fulfill the request because the target resource is configured to require a TLS/SSL connection?"
    answers:
      - { value: "401 Unauthorized", correct: false }
      - { value: "403 Forbidden", correct: false }
      - { value: "426 Upgrade Required", correct: false }
      - { value: "421 Misdirected Request", correct: false }
    help: |
      "https://symfony.com/doc/current/introduction/http_fundamentals"
  - question: "What is the purpose of the `Age` HTTP response header?"
    answers:
      - { value: "To indicate the age of the client's browser.", correct: false }
      - { value: "To specify the time in seconds that the object has been in a proxy cache.", correct: true }
      - { value: "To indicate the expiration time of the resource.", correct: false }
      - { value: "To specify the maximum age of the cached resource.", correct: false }
    help: |
      "https://symfony.com/doc/current/http_cache/expiration"
  - question: "Which HTTP status code indicates that the server is refusing to fulfill the request because the request entity's media type is not supported by the server?"
    answers:
      - { value: "400 Bad Request", correct: false }
      - { value: "406 Not Acceptable", correct: false }
      - { value: "415 Unsupported Media Type", correct: true }
      - { value: "422 Unprocessable Entity", correct: false }
    help: |
      "https://symfony.com/doc/current/introduction/http_fundamentals"
  - question: "What is the purpose of the `Proxy-Authenticate` HTTP response header?"
    answers:
      - { value: "To provide authentication credentials to a proxy server.", correct: false }
      - { value: "To define the authentication method that should be used to gain access to a resource via a proxy.", correct: true }
      - { value: "To indicate that the client is already authenticated with the proxy.", correct: false }
      - { value: "To specify the proxy server's address.", correct: false }
    help: |
      "https://symfony.com/doc/current/introduction/http_fundamentals"
  - question: "Which HTTP status code indicates that the client must first authenticate itself with the proxy?"
    answers:
      - { value: "401 Unauthorized", correct: false }
      - { value: "403 Forbidden", correct: false }
      - { value: "407 Proxy Authentication Required", correct: true }
      - { value: "405 Method Not Allowed", correct: false }
    help: |
      "https://symfony.com/doc/current/introduction/http_fundamentals"
  - question: "What is the purpose of the `TE` (Transfer-Encoding) HTTP request header?"
    answers:
      - { value: "To specify the preferred transfer encoding for the response.", correct: true }
      - { value: "To indicate the content encoding of the request body.", correct: false }
      - { value: "To specify the character set of the request body.", correct: false }
      - { value: "To indicate the length of the request body.", correct: false }
    help: |
      "https://symfony.com/doc/current/introduction/http_fundamentals"
  - question: "Which HTTP status code indicates that the server has received the request, but it has not been processed and is likely to be processed at a later time?"
    answers:
      - { value: "200 OK", correct: false }
      - { value: "202 Accepted", correct: true }
      - { value: "204 No Content", correct: false }
      - { value: "102 Processing", correct: false }
    help: |
      "https://symfony.com/doc/current/introduction/http_fundamentals"
  - question: "What is the purpose of the `X-Powered-By` HTTP header?"
    answers:
      - { value: "To indicate the server software and possibly its version.", correct: true }
      - { value: "To specify the client's operating system.", correct: false }
      - { value: "To indicate the programming language used to generate the response.", correct: false }
      - { value: "To specify the power consumption of the server.", correct: false }
    help: |
      "https://symfony.com/doc/current/introduction/http_fundamentals"
  - question: "Which HTTP status code indicates that the server is refusing to fulfill the request because the request entity is too large?"
    answers:
      - { value: "400 Bad Request", correct: false }
      - { value: "413 Payload Too Large", correct: true }
      - { value: "414 URI Too Long", correct: false }
      - { value: "431 Request Header Fields Too Large", correct: false }
    help: |
      "https://symfony.com/doc/current/introduction/http_fundamentals"
  - question: "What is the purpose of the `Accept-Charset` HTTP request header?"
    answers:
      - { value: "To specify the preferred character sets for the response.", correct: true }
      - { value: "To indicate the content encoding the client can accept.", correct: false }
      - { value: "To specify the language of the content.", correct: false }
      - { value: "To indicate the media types the client accepts.", correct: false }
    help: |
      "https://symfony.com/doc/current/components/http_foundation"
  - question: "Which HTTP status code indicates that the server is refusing to fulfill the request because the client's IP address is blacklisted?"
    answers:
      - { value: "403 Forbidden", correct: false }
      - { value: "401 Unauthorized", correct: false }
      - { value: "406 Not Acceptable", correct: false }
      - { value: "No specific HTTP status code for IP blacklisting; typically 403 or custom.", correct: true }
    help: |
      "https://symfony.com/doc/current/introduction/http_fundamentals"
  - question: "What is the purpose of the `X-HTTP-Method-Override` HTTP header?"
    answers:
      - { value: "To override the HTTP method in a request, typically used when a client cannot send PUT or DELETE requests directly.", correct: true }
      - { value: "To specify a custom HTTP method.", correct: false }
      - { value: "To indicate the original HTTP method of a redirected request.", correct: false }
      - { value: "To prevent method spoofing.", correct: false }
    help: |
      "https://symfony.com/doc/current/introduction/http_fundamentals"
  - question: "Which HTTP status code indicates that the server cannot fulfill the request because the request includes a range that cannot be satisfied?"
    answers:
      - { value: "400 Bad Request", correct: false }
      - { value: "416 Range Not Satisfiable", correct: true }
      - { value: "413 Payload Too Large", correct: false }
      - { value: "415 Unsupported Media Type", correct: false }
    help: |
      "https://symfony.com/doc/current/introduction/http_fundamentals"
  - question: "What is the purpose of the `Proxy-Connection` HTTP header?"
    answers:
      - { value: "To specify the connection type between the client and the proxy.", correct: true }
      - { value: "To indicate the connection type between the proxy and the origin server.", correct: false }
      - { value: "To manage persistent connections through a proxy.", correct: false }
      - { value: "To specify the proxy server's address.", correct: false }
    help: |
      "https://symfony.com/doc/current/introduction/http_fundamentals"
  - question: "Which HTTP status code indicates that the server has received the request, but the client should follow another URI and continue with the original request method?"
    answers:
      - { value: "301 Moved Permanently", correct: false }
      - { value: "302 Found", correct: false }
      - { value: "307 Temporary Redirect", correct: true }
      - { value: "303 See Other", correct: false }
    help: |
      "https://symfony.com/doc/current/introduction/http_fundamentals"
  - question: "What is the purpose of the `Cache-Control: no-store` HTTP header?"
    answers:
      - { value: "To indicate that the response should not be stored by any cache.", correct: true }
      - { value: "To prevent caching of the response by public caches only.", correct: false }
      - { value: "To force revalidation of the cache.", correct: false }
      - { value: "To specify the maximum age of the cached resource.", correct: false }
    help: |
      "https://symfony.com/doc/current/http_cache/expiration"
  - question: "Which HTTP status code indicates that the server requires a specific protocol version to fulfill the request?"
    answers:
      - { value: "400 Bad Request", correct: false }
      - { value: "426 Upgrade Required", correct: true }
      - { value: "505 HTTP Version Not Supported", correct: false }
      - { value: "415 Unsupported Media Type", correct: false }
    help: |
      "https://symfony.com/doc/current/introduction/http_fundamentals"
  - question: "What is the purpose of the `X-CSRF-Token` HTTP header?"
    answers:
      - { value: "To prevent cross-site scripting (XSS) attacks.", correct: false }
      - { value: "To protect against cross-site request forgery (CSRF) attacks.", correct: true }
      - { value: "To specify the preferred content type.", correct: false }
      - { value: "To indicate the client's IP address.", correct: false }
    help: |
      "https://symfony.com/doc/current/introduction/http_fundamentals"
  - question: "Which HTTP status code indicates that the server is refusing to fulfill the request because the request's method is not allowed for the resource?"
    answers:
      - { value: "400 Bad Request", correct: false }
      - { value: "405 Method Not Allowed", correct: true }
      - { value: "403 Forbidden", correct: false }
      - { value: "404 Not Found", correct: false }
    help: |
      "https://symfony.com/doc/current/introduction/http_fundamentals"
  - question: "What is the purpose of the `If-Range` HTTP request header?"
    answers:
      - { value: "To make a conditional request for a range of a resource, only if the resource has not changed.", correct: true }
      - { value: "To specify a range of acceptable status codes.", correct: false }
      - { value: "To indicate the maximum size of the response body.", correct: false }
      - { value: "To specify a range of IP addresses.", correct: false }
    help: |
      "https://symfony.com/doc/current/http_cache/validation"
  - question: "Which HTTP status code indicates that the server is refusing to fulfill the request because the client has made too many requests in a given amount of time?"
    answers:
      - { value: "403 Forbidden", correct: false }
      - { value: "429 Too Many Requests", correct: true }
      - { value: "503 Service Unavailable", correct: false }
      - { value: "509 Bandwidth Limit Exceeded", correct: false }
    help: |
      "https://symfony.com/doc/current/introduction/http_fundamentals"
  - question: "What is the purpose of the `Content-Location` HTTP header?"
    answers:
      - { value: "To specify the physical location of the content.", correct: false }
      - { value: "To provide an alternative location for the content, typically a more specific URI.", correct: true }
      - { value: "To indicate the geographical location of the content.", correct: false }
      - { value: "To specify the content's language.", correct: false }
    help: |
      "https://symfony.com/doc/current/introduction/http_fundamentals"
  - question: "Which HTTP status code indicates that the server successfully processed the request, but the client should follow a permanent redirect?"
    answers:
      - { value: "301 Moved Permanently", correct: true }
      - { value: "302 Found", correct: false }
      - { value: "303 See Other", correct: false }
      - { value: "307 Temporary Redirect", correct: false }
    help: |
      "https://symfony.com/doc/current/introduction/http_fundamentals"
  - question: "What is the purpose of the `Accept-Datetime` HTTP request header?"
    answers:
      - { value: "To specify the preferred date format.", correct: false }
      - { value: "To indicate the client's preferred date and time for a resource, used for content negotiation based on time.", correct: true }
      - { value: "To specify the modification date of a resource.", correct: false }
      - { value: "To indicate the expiration date of a resource.", correct: false }
    help: |
      "https://symfony.com/doc/current/introduction/http_fundamentals"
  - question: "Which HTTP status code indicates that the server is refusing to fulfill the request because the request's URI is too long?"
    answers:
      - { value: "400 Bad Request", correct: false }
      - { value: "413 Payload Too Large", correct: false }
      - { value: "414 URI Too Long", correct: true }
      - { value: "431 Request Header Fields Too Large", correct: false }
    help: |
      "https://symfony.com/doc/current/introduction/http_fundamentals"
  - question: "What is the purpose of the `X-Forwarded-Proto` HTTP header?"
    answers:
      - { value: "To indicate the original protocol (HTTP or HTTPS) of the client's request when it passes through a proxy.", correct: true }
      - { value: "To specify the proxy server's protocol.", correct: false }
      - { value: "To forward the request to another protocol.", correct: false }
      - { value: "To indicate the client's preferred protocol.", correct: false }
    help: |
      "https://symfony.com/doc/current/components/http_foundation"
  - question: "Which HTTP status code indicates that the server is refusing to fulfill the request because the request's method is not allowed for the resource?"
    answers:
      - { value: "400 Bad Request", correct: false }
      - { value: "405 Method Not Allowed", correct: true }
      - { value: "403 Forbidden", correct: false }
      - { value: "404 Not Found", correct: false }
    help: |
      "https://symfony.com/doc/current/introduction/http_fundamentals"
  - question: "What is the purpose of the `If-Modified-Since` HTTP request header?"
    answers:
      - { value: "To specify the date the resource was last modified.", correct: false }
      - { value: "To make a conditional request, only retrieving the resource if it has been modified since the specified date.", correct: true }
      - { value: "To indicate the preferred date format.", correct: false }
      - { value: "To set the modification date of a resource.", correct: false }
    help: |
      "https://symfony.com/doc/current/http_cache/validation"
  - question: "Which HTTP status code indicates that the server is refusing to fulfill the request because the target resource is configured to require a TLS/SSL connection?"
    answers:
      - { value: "401 Unauthorized", correct: false }
      - { value: "403 Forbidden", correct: false }
      - { value: "426 Upgrade Required", correct: false }
      - { value: "421 Misdirected Request", correct: false }
    help: |
      "https://symfony.com/doc/current/introduction/http_fundamentals"
  - question: "What is the purpose of the `X-Forwarded-Host` HTTP header?"
    answers:
      - { value: "To indicate the original host requested by the client when the request passes through a proxy.", correct: true }
      - { value: "To specify the proxy server's host.", correct: false }
      - { value: "To forward the request to another host.", correct: false }
      - { value: "To indicate the client's preferred host.", correct: false }
    help: |
      "https://symfony.com/doc/current/components/http_foundation"
  - question: "Which HTTP status code indicates that the server is refusing to fulfill the request because the client has made too many requests in a given amount of time?"
    answers:
      - { value: "403 Forbidden", correct: false }
      - { value: "429 Too Many Requests", correct: true }
      - { value: "503 Service Unavailable", correct: false }
      - { value: "509 Bandwidth Limit Exceeded", correct: false }
    help: |
      "https://symfony.com/doc/current/introduction/http_fundamentals"
  - question: "What is the purpose of the `Content-Range` HTTP header?"
    answers:
      - { value: "To specify the total length of the content.", correct: false }
      - { value: "To indicate the range of bytes included in the partial response.", correct: true }
      - { value: "To specify the maximum range of content the server can send.", correct: false }
      - { value: "To indicate the number of parts in a multi-part response.", correct: false }
    help: |
      "https://symfony.com/doc/current/introduction/http_fundamentals"
```