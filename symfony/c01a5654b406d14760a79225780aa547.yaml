```yaml
category: Console
questions:
  - question: 'Which command is used to list all available Symfony console commands?'
    answers:
      - { value: 'php bin/console list', correct: true }
      - { value: 'php bin/console show', correct: false }
      - { value: 'php bin/console --all', correct: false }
      - { value: 'php bin/console commands', correct: false }
    help: |
      'https://symfony.com/doc/current/console.html'
  - question: 'How do you execute a Symfony console command from the terminal, assuming the command `app:create-user` exists?'
    answers:
      - { value: 'php bin/console app:create-user', correct: true }
      - { value: 'symfony run app:create-user', correct: false }
      - { value: 'console app:create-user', correct: false }
      - { value: 'bin/console app:create-user', correct: false }
    help: |
      'https://symfony.com/doc/current/console.html'
  - question: 'What is the purpose of the `InputInterface` object in a Symfony console command''s `execute` method?'
    answers:
      - { value: 'To write output to the console.', correct: false }
      - { value: 'To retrieve arguments and options passed to the command.', correct: true }
      - { value: 'To define the command''s name and description.', correct: false }
      - { value: 'To interact with the database.', correct: false }
    help: |
      'https://symfony.com/doc/current/console/input.html'
  - question: 'Which method is used to write a new line to the console output in a Symfony command?'
    answers:
      - { value: '$output->writeLine();', correct: false }
      - { value: '$output->newLine();', correct: false }
      - { value: '$output->writeln();', correct: true }
      - { value: '$output->printLine();', correct: false }
    help: |
      'https://symfony.com/doc/current/console.html'
  - question: 'How can you define a required argument for a Symfony console command?'
    answers:
      - { value: '$this->addArgument(''username'', InputArgument::REQUIRED, ''The username.'');', correct: true }
      - { value: '$this->addOption(''username'', null, InputOption::REQUIRED, ''The username.'');', correct: false }
      - { value: '$this->addArgument(''username'', true, ''The username.'');', correct: false }
      - { value: '$this->addArgument(''username'', InputArgument::OPTIONAL, ''The username.'');', correct: false }
    help: |
      'https://symfony.com/doc/current/console.html#handling-input-arguments'
  - question: 'What is the correct way to register a Symfony console command using a PHP attribute?'
    answers:
      - { value: '#[AsCommand(name: ''app:create-user'', description: ''Creates a new user.'')]', correct: true }
      - { value: '@Command(name="app:create-user", description="Creates a new user.")', correct: false }
      - { value: 'public static $defaultName = ''app:create-user'';', correct: false }
      - { value: 'protected static $commandName = ''app:create-user'';', correct: false }
    help: |
      'https://symfony.com/doc/current/console.html#registering-commands'
  - question: 'Which global option can be used to increase the verbosity of a Symfony console command''s output?'
    answers:
      - { value: '--verbose', correct: true }
      - { value: '--debug', correct: false }
      - { value: '--log', correct: false }
      - { value: '--details', correct: false }
    help: |
      'https://symfony.com/doc/current/components/console/usage.html#verbosity-levels'
  - question: 'What is the purpose of the `SymfonyStyle` helper in Symfony Console?'
    answers:
      - { value: 'To manage database connections.', correct: false }
      - { value: 'To simplify and standardize console output and input interactions.', correct: true }
      - { value: 'To handle HTTP requests in console commands.', correct: false }
      - { value: 'To define routing for console commands.', correct: false }
    help: |
      'https://symfony.com/doc/current/console/style.html'
  - question: 'How do you display a success message using `SymfonyStyle`?'
    answers:
      - { value: '$io->success(''Operation completed.'');', correct: true }
      - { value: '$io->info(''Operation completed.'');', correct: false }
      - { value: '$io->ok(''Operation completed.'');', correct: false }
      - { value: '$io->write(''Operation completed.'', true);', correct: false }
    help: |
      'https://symfony.com/doc/current/console/style.html#success-messages'
  - question: 'Which method is used to prompt the user for a hidden input, such as a password, using `SymfonyStyle`?'
    answers:
      - { value: '$io->ask(''Enter password:'', true);', correct: false }
      - { value: '$io->askHidden(''Enter password:'');', correct: true }
      - { value: '$io->promptHidden(''Enter password:'');', correct: false }
      - { value: '$io->secret(''Enter password:'');', correct: false }
    help: |
      'https://symfony.com/doc/current/console/style.html#asking-for-hidden-input'
  - question: 'What is the purpose of `ConsoleEvents::SIGNAL`?'
    answers:
      - { value: 'To dispatch an event when a command finishes execution.', correct: false }
      - { value: 'To handle system signals (e.g., SIGINT, SIGTERM) within a console command.', correct: true }
      - { value: 'To log all console output to a file.', correct: false }
      - { value: 'To prevent a command from being interrupted.', correct: false }
    help: |
      'https://symfony.com/doc/current/components/console/events.html#handling-signals'
  - question: 'How can you suppress all output and interaction, including errors, when running a Symfony console command?'
    answers:
      - { value: 'php bin/console my:command --quiet', correct: false }
      - { value: 'php bin/console my:command --silent', correct: true }
      - { value: 'php bin/console my:command --no-output', correct: false }
      - { value: 'php bin/console my:command > /dev/null 2>&1', correct: false }
    help: |
      'https://symfony.com/doc/current/console/input.html#global-options'
  - question: 'Which helper can be used to display structured data in a tabular format in the console?'
    answers:
      - { value: 'TableHelper', correct: false }
      - { value: 'Table', correct: true }
      - { value: 'GridHelper', correct: false }
      - { value: 'FormatterTable', correct: false }
    help: |
      'https://symfony.com/doc/current/components/console/helpers/table.html'
  - question: 'How do you add a horizontal separator to a Symfony Console table?'
    answers:
      - { value: 'By adding a row with `---`.', correct: false }
      - { value: 'By calling `$table->addSeparator();`.', correct: false }
      - { value: 'By passing an instance of `TableSeparator` as a row.', correct: true }
      - { value: 'By setting a style on the table.', correct: false }
    help: |
      'https://symfony.com/doc/current/components/console/helpers/table.html#adding-a-table-separator'
  - question: 'What is the purpose of `OutputFormatterStyle`?'
    answers:
      - { value: 'To define custom colors and options for console output.', correct: true }
      - { value: 'To format input arguments.', correct: false }
      - { value: 'To create new console commands.', correct: false }
      - { value: 'To manage console events.', correct: false }
    help: |
      'https://symfony.com/doc/current/console/coloring.html#defining-your-own-styles'
  - question: 'Which method is used to display an unordered list of elements using `SymfonyStyle`?'
    answers:
      - { value: '$io->listItems();', correct: false }
      - { value: '$io->bullets();', correct: false }
      - { value: '$io->listing();', correct: true }
      - { value: '$io->items();', correct: false }
    help: |
      'https://symfony.com/doc/current/console/style.html#listing'
  - question: 'How can you display a tree structure in the console using `SymfonyStyle`?'
    answers:
      - { value: '$io->tree();', correct: true }
      - { value: '$io->displayTree();', correct: false }
      - { value: '$io->renderTree();', correct: false }
      - { value: '$io->showTree();', correct: false }
    help: |
      'https://symfony.com/doc/current/console/style.html#tree'
  - question: 'What is the default verbosity level for Symfony console commands?'
    answers:
      - { value: 'VERBOSITY_QUIET', correct: false }
      - { value: 'VERBOSITY_NORMAL', correct: true }
      - { value: 'VERBOSITY_VERBOSE', correct: false }
      - { value: 'VERBOSITY_DEBUG', correct: false }
    help: |
      'https://symfony.com/doc/current/components/console/usage.html#verbosity-levels'
  - question: 'Which global option disables interaction (e.g., prompts for input) in a Symfony console command?'
    answers:
      - { value: '--no-input', correct: false }
      - { value: '--no-interaction', correct: true }
      - { value: '--non-interactive', correct: false }
      - { value: '--force', correct: false }
    help: |
      'https://symfony.com/doc/current/components/console/usage.html#disabling-interaction'
  - question: 'How do you get help for a specific console command, for example, the `list` command?'
    answers:
      - { value: 'php bin/console help list', correct: true }
      - { value: 'php bin/console list --help', correct: true }
      - { value: 'php bin/console ? list', correct: false }
      - { value: 'php bin/console man list', correct: false }
    help: |
      'https://symfony.com/doc/current/components/console/usage.html#getting-help'
  - question: 'Which class is used to interact with the terminal properties like height, width, and color mode?'
    answers:
      - { value: 'Terminal', correct: true }
      - { value: 'Console', correct: false }
      - { value: 'Screen', correct: false }
      - { value: 'Display', correct: false }
    help: |
      'https://symfony.com/doc/current/console.html#interacting-with-the-terminal'
  - question: 'What is the purpose of `progressStart()` in `SymfonyStyle`?'
    answers:
      - { value: 'To display a static progress message.', correct: false }
      - { value: 'To initialize and display a progress bar.', correct: true }
      - { value: 'To start a background process.', correct: false }
      - { value: 'To clear the console output.', correct: false }
    help: |
      'https://symfony.com/doc/current/console/style.html#progress-bar'
  - question: 'How can you dynamically append a single row to an already rendered Symfony Console Table?'
    answers:
      - { value: 'By calling `$table->addRow()` again.', correct: false }
      - { value: 'By using `$table->appendRow()` within a console output section.', correct: true }
      - { value: 'Tables cannot be modified after rendering.', correct: false }
      - { value: 'By re-rendering the entire table.', correct: false }
    help: |
      'https://symfony.com/doc/current/components/console/helpers/table.html#appending-a-single-row'
  - question: 'Which event is dispatched before a console command is executed?'
    answers:
      - { value: 'ConsoleEvents::COMMAND', correct: false }
      - { value: 'ConsoleEvents::PRE_COMMAND', correct: false }
      - { value: 'ConsoleEvents::RUN', correct: false }
      - { value: 'ConsoleEvents::COMMAND', correct: true }
    help: |
      'https://symfony.com/doc/current/components/console/events.html'
  - question: 'How do you define an optional argument with a default value for a console command?'
    answers:
      - { value: '$this->addArgument(''name'', InputArgument::OPTIONAL, ''Description'', ''Default'');', correct: true }
      - { value: '$this->addOption(''name'', null, InputOption::OPTIONAL, ''Description'', ''Default'');', correct: false }
      - { value: '$this->addArgument(''name'', false, ''Description'', ''Default'');', correct: false }
      - { value: '$this->addArgument(''name'', InputArgument::REQUIRED, ''Description'', ''Default'');', correct: false }
    help: |
      'https://symfony.com/doc/current/console/input.html#arguments'
  - question: 'What is the purpose of `InputOption::VALUE_REQUIRED` when defining an option?'
    answers:
      - { value: 'The option must be present, but its value is optional.', correct: false }
      - { value: 'The option must be present and must have a value.', correct: true }
      - { value: 'The option is optional, but if present, it must have a value.', correct: false }
      - { value: 'The option is a boolean flag and does not take a value.', correct: false }
    help: |
      'https://symfony.com/doc/current/components/console/console_arguments.html#defining-options'
  - question: 'Which method in `SymfonyStyle` is used to display a warning message?'
    answers:
      - { value: '$io->alert();', correct: false }
      - { value: '$io->warning();', correct: true }
      - { value: '$io->warn();', correct: false }
      - { value: '$io->danger();', correct: false }
    help: |
      'https://symfony.com/doc/current/console/style.html#warning-messages'
  - question: 'How can you clear the entire console screen using the `Cursor` helper?'
    answers:
      - { value: '$cursor->clear();', correct: false }
      - { value: '$cursor->clearScreen();', correct: true }
      - { value: '$cursor->reset();', correct: false }
      - { value: '$cursor->eraseAll();', correct: false }
    help: |
      'https://symfony.com/doc/current/components/console/helpers/cursor.html#clearing-output'
  - question: 'What is the purpose of `ConsoleOutputInterface` when dealing with output sections?'
    answers:
      - { value: 'It provides methods for basic text output only.', correct: false }
      - { value: 'It allows creating and managing independent output sections that can be cleared or overwritten.', correct: true }
      - { value: 'It is used for logging messages to a file.', correct: false }
      - { value: 'It defines the interface for all console commands.', correct: false }
    help: |
      'https://symfony.com/doc/current/console.html#output-sections'
  - question: 'Which built-in command is used to clear the Symfony cache?'
    answers:
      - { value: 'cache:clear', correct: true }
      - { value: 'clear:cache', correct: false }
      - { value: 'app:cache:clear', correct: false }
      - { value: 'symfony:cache:clear', correct: false }
    help: |
      'https://symfony.com/doc/current/cache.html#cache-pools'
  - question: 'How can you profile the execution of a Symfony console command?'
    answers:
      - { value: 'php bin/console --profile my:command', correct: true }
      - { value: 'php bin/console --debug my:command', correct: false }
      - { value: 'php bin/console --time my:command', correct: false }
      - { value: 'php bin/console my:command --profiler', correct: false }
    help: |
      'https://symfony.com/doc/current/console.html#profiling-commands'
  - question: 'What is the correct way to display a definition list (key-value pairs) using `SymfonyStyle`?'
    answers:
      - { value: '$io->definitionList();', correct: true }
      - { value: '$io->keyValueList();', correct: false }
      - { value: '$io->describeList();', correct: false }
      - { value: '$io->listDefinitions();', correct: false }
    help: |
      'https://symfony.com/doc/current/console/style.html#definition-list'
  - question: 'Which method of `SymfonyStyle` is used to prompt the user for a choice from a list of options?'
    answers:
      - { value: '$io->choice();', correct: true }
      - { value: '$io->select();', correct: false }
      - { value: '$io->options();', correct: false }
      - { value: '$io->choose();', correct: false }
    help: |
      'https://symfony.com/doc/current/components/console/helpers/questionhelper.html#choice-question'
  - question: 'When implementing `SignalableCommandInterface`, which method should return an array of signals the command subscribes to?'
    answers:
      - { value: 'getHandledSignals()', correct: false }
      - { value: 'getSubscribedSignals()', correct: true }
      - { value: 'listSignals()', correct: false }
      - { value: 'onSignal()', correct: false }
    help: |
      'https://symfony.com/doc/current/components/console/events.html#handling-signals'
  - question: 'What is the purpose of the `#[AsCommand]` attribute?'
    answers:
      - { value: 'To define the command''s dependencies.', correct: false }
      - { value: 'To automatically register a console command with the application.', correct: true }
      - { value: 'To specify the command''s input arguments.', correct: false }
      - { value: 'To mark a command as deprecated.', correct: false }
    help: |
      'https://symfony.com/doc/current/console.html#registering-commands'
  - question: 'How can you get the current column and row coordinates of the console cursor?'
    answers:
      - { value: '$cursor->getPosition();', correct: false }
      - { value: '$cursor->getCurrentPosition();', correct: true }
      - { value: '$cursor->getCoordinates();', correct: false }
      - { value: '$cursor->whereAmI();', correct: false }
    help: |
      'https://symfony.com/doc/current/components/console/helpers/cursor.html#getting-the-current-position'
  - question: 'Which built-in command is used to install web assets from bundles into the public directory?'
    answers:
      - { value: 'assets:install', correct: true }
      - { value: 'install:assets', correct: false }
      - { value: 'public:assets', correct: false }
      - { value: 'bundle:assets:install', correct: false }
    help: |
      'https://symfony.com/doc/current/console.html#built-in-commands'
  - question: 'What is the effect of the `--quiet` global option?'
    answers:
      - { value: 'Disables all output and interaction, including errors.', correct: false }
      - { value: 'Disables output and interaction, but errors are still displayed.', correct: true }
      - { value: 'Only displays error messages.', correct: false }
      - { value: 'Increases the verbosity level to show only warnings.', correct: false }
    help: |
      'https://symfony.com/doc/current/components/console/input.html#global-options'
  - question: 'How do you set a maximum height for an output section in Symfony Console?'
    answers:
      - { value: '$section->setHeight(5);', correct: false }
      - { value: '$section->setMaxLines(5);', correct: false }
      - { value: '$section->setMaxHeight(5);', correct: true }
      - { value: '$section->limitHeight(5);', correct: false }
    help: |
      'https://symfony.com/doc/current/console.html#output-sections'
  - question: 'Which method in `SymfonyStyle` is used to display a formatted title for the console command?'
    answers:
      - { value: '$io->header();', correct: false }
      - { value: '$io->title();', correct: true }
      - { value: '$io->headline();', correct: false }
      - { value: '$io->sectionTitle();', correct: false }
    help: |
      'https://symfony.com/doc/current/console/style.html#title'
  - question: 'What is the purpose of `InputOption::VALUE_OPTIONAL`?'
    answers:
      - { value: 'The option must be present, but its value is optional.', correct: false }
      - { value: 'The option is optional, and if present, its value is also optional.', correct: true }
      - { value: 'The option is a boolean flag.', correct: false }
      - { value: 'The option is required and must have a value.', correct: false }
    help: |
      'https://symfony.com/doc/current/components/console/console_arguments.html#defining-options'
  - question: 'How can you write to the standard error output using `SymfonyStyle`?'
    answers:
      - { value: '$io->error(''Error message'');', correct: false }
      - { value: '$io->getErrorOutput()->writeln(''Error message'');', correct: false }
      - { value: '$io->getErrorStyle()->warning(''Debugging information or errors'');', correct: true }
      - { value: '$io->stderr(''Error message'');', correct: false }
    help: |
      'https://symfony.com/doc/current/console/style.html#writing-to-standard-and-error-output'
  - question: 'Which built-in command provides information about the current Symfony project?'
    answers:
      - { value: 'about', correct: true }
      - { value: 'info', correct: false }
      - { value: 'project:info', correct: false }
      - { value: 'status', correct: false }
    help: |
      'https://symfony.com/doc/current/console.html#built-in-commands'
  - question: 'What is the purpose of `progressIterate()` in `SymfonyStyle`?'
    answers:
      - { value: 'To manually advance a progress bar step by step.', correct: false }
      - { value: 'To iterate over a collection and automatically update a progress bar.', correct: true }
      - { value: 'To display a fixed-length progress bar.', correct: false }
      - { value: 'To reset a progress bar to its initial state.', correct: false }
    help: |
      'https://symfony.com/doc/current/console/style.html#progress-bar'
  - question: 'How do you set individual column widths for a Symfony Console table?'
    answers:
      - { value: '$table->setColumnWidth(0, 10);', correct: true }
      - { value: '$table->setColumnWidths([10, 20, 30]);', correct: false }
      - { value: '$table->column(0)->setWidth(10);', correct: false }
      - { value: '$table->width(0, 10);', correct: false }
    help: |
      'https://symfony.com/doc/current/components/console/helpers/table.html#setting-column-widths'
  - question: 'Which event is dispatched after a console command has been executed?'
    answers:
      - { value: 'ConsoleEvents::TERMINATE', correct: false }
      - { value: 'ConsoleEvents::POST_COMMAND', correct: false }
      - { value: 'ConsoleEvents::FINISH', correct: false }
      - { value: 'ConsoleEvents::TERMINATE', correct: true }
    help: |
      'https://symfony.com/doc/current/components/console/events.html'
  - question: 'What is the purpose of `InputOption::VALUE_NONE`?'
    answers:
      - { value: 'The option requires a value, but it can be empty.', correct: false }
      - { value: 'The option is a boolean flag and does not take a value.', correct: true }
      - { value: 'The option is optional and does not have a default value.', correct: false }
      - { value: 'The option is an array of values.', correct: false }
    help: |
      'https://symfony.com/doc/current/components/console/console_arguments.html#defining-options'
  - question: 'How can you clear all output from the current line after the cursor''s current position?'
    answers:
      - { value: '$cursor->clearLine();', correct: false }
      - { value: '$cursor->clearLineAfter();', correct: true }
      - { value: '$cursor->clearToEOL();', correct: false }
      - { value: '$cursor->eraseLineRight();', correct: false }
    help: |
      'https://symfony.com/doc/current/components/console/helpers/cursor.html#clearing-output'
  - question: 'Which method is used to prompt the user for a confirmation (yes/no) using `SymfonyStyle`?'
    answers:
      - { value: '$io->confirm();', correct: true }
      - { value: '$io->askConfirmation();', correct: false }
      - { value: '$io->yesNo();', correct: false }
      - { value: '$io->confirmQuestion();', correct: false }
    help: |
      'https://symfony.com/doc/current/console/style.html#asking-for-confirmation'
  - question: 'What is the purpose of the `help` command in Symfony Console?'
    answers:
      - { value: 'To list all available commands.', correct: false }
      - { value: 'To display detailed help information for a specific command or global options.', correct: true }
      - { value: 'To provide a tutorial on how to use Symfony Console.', correct: false }
      - { value: 'To open the online documentation.', correct: false }
    help: |
      'https://symfony.com/doc/current/components/console/usage.html#getting-help'
  - question: 'How do you configure the Monolog console handler in YAML to disable PSR-3 message processing and exclude specific channels?'
    answers:
      - { value: '''monolog: handlers: console: type: console process_psr_3_messages: false channels: [''!event'', ''!doctrine'', ''!console'']''', correct: true }
      - { value: '''monolog: handlers: console: type: console psr3_messages: false exclude_channels: [event, doctrine, console]''', correct: false }
      - { value: '''monolog: console_handler: enabled: true process_psr3: false filter_channels: [event, doctrine, console]''', correct: false }
      - { value: '''monolog: console: type: console process_psr3_messages: false channels: [event, doctrine, console]''', correct: false }
    help: |
      'https://symfony.com/doc/current/logging/monolog_console.html#configuration'
  - question: 'Which method of `SymfonyStyle` is used to display an informational message?'
    answers:
      - { value: '$io->note();', correct: false }
      - { value: '$io->message();', correct: false }
      - { value: '$io->info();', correct: true }
      - { value: '$io->log();', correct: false }
    help: |
      'https://symfony.com/doc/current/console/style.html#info-messages'
  - question: 'What is the purpose of `ConsoleEvents::ERROR`?'
    answers:
      - { value: 'To catch all PHP errors during command execution.', correct: false }
      - { value: 'To handle exceptions that occur during command execution.', correct: true }
      - { value: 'To log error messages to the console.', correct: false }
      - { value: 'To prevent a command from failing.', correct: false }
    help: |
      'https://symfony.com/doc/current/components/console/events.html'
  - question: 'How can you force coloring the output in a Symfony console command, even if the terminal does not support it?'
    answers:
      - { value: '--ansi', correct: true }
      - { value: '--color', correct: false }
      - { value: '--force-color', correct: false }
      - { value: '--with-colors', correct: false }
    help: |
      'https://symfony.com/doc/current/components/console/input.html#global-options'
  - question: 'Which method is used to display a simple block of text in the console using `SymfonyStyle`?'
    answers:
      - { value: '$io->writeText();', correct: false }
      - { value: '$io->text();', correct: true }
      - { value: '$io->paragraph();', correct: false }
      - { value: '$io->block();', correct: false }
    help: |
      'https://symfony.com/doc/current/console/style.html#text'
  - question: 'What is the purpose of `InputArgument::IS_ARRAY`?'
    answers:
      - { value: 'The argument can be an array of values.', correct: true }
      - { value: 'The argument is an optional array.', correct: false }
      - { value: 'The argument must be a single string.', correct: false }
      - { value: 'The argument is a boolean flag.', correct: false }
    help: |
      'https://symfony.com/doc/current/components/console/console_arguments.html#defining-arguments'
  - question: 'How do you clear a specific number of lines from an output section?'
    answers:
      - { value: '$section->clear(2);', correct: true }
      - { value: '$section->deleteLines(2);', correct: false }
      - { value: '$section->remove(2);', correct: false }
      - { value: '$section->erase(2);', correct: false }
    help: |
      'https://symfony.com/doc/current/console.html#output-sections'
  - question: 'Which built-in command is used to dump the shell completion script?'
    answers:
      - { value: 'completion', correct: true }
      - { value: 'shell:completion', correct: false }
      - { value: 'dump:completion', correct: false }
      - { value: 'autocomplete', correct: false }
    help: |
      'https://symfony.com/doc/current/console.html#built-in-commands'
  - question: 'What is the purpose of `ConsoleEvents::TERMINATE`?'
    answers:
      - { value: 'It is dispatched before the command starts.', correct: false }
      - { value: 'It is dispatched after the command has finished execution, even if an exception occurred.', correct: true }
      - { value: 'It is dispatched only when the command exits successfully.', correct: false }
      - { value: 'It is dispatched when the command is interrupted by a signal.', correct: false }
    help: |
      'https://symfony.com/doc/current/components/console/events.html'
  - question: 'How can you disable coloring the output in a Symfony console command?'
    answers:
      - { value: '--no-ansi', correct: true }
      - { value: '--no-color', correct: false }
      - { value: '--disable-color', correct: false }
      - { value: '--monochrome', correct: false }
    help: |
      'https://symfony.com/doc/current/components/console/input.html#global-options'
  - question: 'Which method of `SymfonyStyle` is used to display an error message?'
    answers:
      - { value: '$io->error();', correct: true }
      - { value: '$io->fail();', correct: false }
      - { value: '$io->exception();', correct: false }
      - { value: '$io->critical();', correct: false }
    help: |
      'https://symfony.com/doc/current/console/style.html#error-messages'
  - question: 'What is the purpose of `InputOption::VALUE_IS_ARRAY`?'
    answers:
      - { value: 'The option can be specified multiple times to accept multiple values.', correct: true }
      - { value: 'The option must be an array of values.', correct: false }
      - { value: 'The option is a boolean flag.', correct: false }
      - { value: 'The option takes a single value, which is an array.', correct: false }
    help: |
      'https://symfony.com/doc/current/components/console/console_arguments.html#defining-options'
  - question: 'How do you move the cursor to a specific (column, row) position from the top-left of the terminal?'
    answers:
      - { value: '$cursor->moveTo(column, row);', correct: false }
      - { value: '$cursor->setPosition(column, row);', correct: false }
      - { value: '$cursor->moveToPosition(column, row);', correct: true }
      - { value: '$cursor->goto(column, row);', correct: false }
    help: |
      'https://symfony.com/doc/current/components/console/helpers/cursor.html#relative-and-absolute-cursor-movement'
  - question: 'Which event is dispatched before the input is validated?'
    answers:
      - { value: 'ConsoleEvents::INPUT', correct: true }
      - { value: 'ConsoleEvents::VALIDATE_INPUT', correct: false }
      - { value: 'ConsoleEvents::PRE_INPUT', correct: false }
      - { value: 'ConsoleEvents::PARSE_INPUT', correct: false }
    help: |
      'https://symfony.com/doc/current/components/console/events.html'
  - question: 'What is the purpose of `InputArgument::OPTIONAL` when defining an argument?'
    answers:
      - { value: 'The argument must be present.', correct: false }
      - { value: 'The argument is optional and can be omitted.', correct: true }
      - { value: 'The argument must have a default value.', correct: false }
      - { value: 'The argument is a boolean flag.', correct: false }
    help: |
      'https://symfony.com/doc/current/console/input.html#arguments'
  - question: 'How can you overwrite all existing content of an output section with new content?'
    answers:
      - { value: '$section->replace(''New content'');', correct: false }
      - { value: '$section->overwrite(''New content'');', correct: true }
      - { value: '$section->update(''New content'');', correct: false }
      - { value: '$section->reset(''New content'');', correct: false }
    help: |
      'https://symfony.com/doc/current/console.html#output-sections'
  - question: 'Which built-in command is used to display information about the current project?'
    answers:
      - { value: 'about', correct: true }
      - { value: 'project:info', correct: false }
      - { value: 'info', correct: false }
      - { value: 'status', correct: false }
    help: |
      'https://symfony.com/doc/current/console.html#built-in-commands'
  - question: 'What is the purpose of `ConsoleEvents::EXCEPTION`?'
    answers:
      - { value: 'It is dispatched when a command throws any exception.', correct: true }
      - { value: 'It is dispatched only for unhandled exceptions.', correct: false }
      - { value: 'It is dispatched before an exception is thrown.', correct: false }
      - { value: 'It is used to suppress exceptions.', correct: false }
    help: |
      'https://symfony.com/doc/current/components/console/events.html'
  - question: 'How do you move the cursor one line up from its current position?'
    answers:
      - { value: '$cursor->up();', correct: false }
      - { value: '$cursor->moveUp();', correct: true }
      - { value: '$cursor->lineUp();', correct: false }
      - { value: '$cursor->upLine();', correct: false }
    help: |
      'https://symfony.com/doc/current/components/console/helpers/cursor.html#relative-and-absolute-cursor-movement'
  - question: 'Which method of `SymfonyStyle` is used to display a compact table?'
    answers:
      - { value: '$io->table();', correct: true }
      - { value: '$io->displayTable();', correct: false }
      - { value: '$io->renderTable();', correct: false }
      - { value: '$io->showTable();', correct: false }
    help: |
      'https://symfony.com/doc/current/console/style.html#table'
  - question: 'What is the purpose of `InputOption::VALUE_REQUIRED` when defining an option?'
    answers:
      - { value: 'The option must be present, but its value is optional.', correct: false }
      - { value: 'The option must be present and must have a value.', correct: true }
      - { value: 'The option is optional, but if present, it must have a value.', correct: false }
      - { value: 'The option is a boolean flag and does not take a value.', correct: false }
    help: |
      'https://symfony.com/doc/current/components/console/console_arguments.html#defining-options'
  - question: 'How do you clear all output from the cursor''s current position to the end of the screen?'
    answers:
      - { value: '$cursor->clearScreenAfter();', correct: false }
      - { value: '$cursor->clearOutput();', correct: true }
      - { value: '$cursor->eraseToEnd();', correct: false }
      - { value: '$cursor->clearBelow();', correct: false }
    help: |
      'https://symfony.com/doc/current/components/console/helpers/cursor.html#clearing-output'
  - question: 'Which global option sets the Kernel configuration environment?'
    answers:
      - { value: '--env', correct: true }
      - { value: '--environment', correct: false }
      - { value: '--mode', correct: false }
      - { value: '--config', correct: false }
    help: |
      'https://symfony.com/doc/current/console/input.html#global-options'
  - question: 'What is the purpose of `InputArgument::REQUIRED` when defining an argument?'
    answers:
      - { value: 'The argument is optional.', correct: false }
      - { value: 'The argument must be present when the command is executed.', correct: true }
      - { value: 'The argument must have a default value.', correct: false }
      - { value: 'The argument is a boolean flag.', correct: false }
    help: |
      'https://symfony.com/doc/current/console/input.html#arguments'
  - question: 'How do you move the cursor one column right from its current position?'
    answers:
      - { value: '$cursor->right();', correct: false }
      - { value: '$cursor->moveRight();', correct: true }
      - { value: '$cursor->columnRight();', correct: false }
      - { value: '$cursor->rightColumn();', correct: false }
    help: |
      'https://symfony.com/doc/current/components/console/helpers/cursor.html#relative-and-absolute-cursor-movement'
  - question: 'Which global option disables Kernel debug?'
    answers:
      - { value: '--no-debug', correct: true }
      - { value: '--debug=false', correct: false }
      - { value: '--disable-debug', correct: false }
      - { value: '--prod', correct: false }
    help: |
      'https://symfony.com/doc/current/console/input.html#global-options'
  - question: 'What is the purpose of `InputOption::VALUE_OPTIONAL`?'
    answers:
      - { value: 'The option must be present, but its value is optional.', correct: false }
      - { value: 'The option is optional, and if present, its value is also optional.', correct: true }
      - { value: 'The option is a boolean flag.', correct: false }
      - { value: 'The option is required and must have a value.', correct: false }
    help: |
      'https://symfony.com/doc/current/components/console/console_arguments.html#defining-options'
  - question: 'How do you move the cursor one column left from its current position?'
    answers:
      - { value: '$cursor->left();', correct: false }
      - { value: '$cursor->moveLeft();', correct: true }
      - { value: '$cursor->columnLeft();', correct: false }
      - { value: '$cursor->leftColumn();', correct: false }
    help: |
      'https://symfony.com/doc/current/components/console/helpers/cursor.html#relative-and-absolute-cursor-movement'
  - question: 'Which method is used to prompt the user for text input using `SymfonyStyle`?'
    answers:
      - { value: '$io->input();', correct: false }
      - { value: '$io->prompt();', correct: false }
      - { value: '$io->ask();', correct: true }
      - { value: '$io->getText();', correct: false }
    help: |
      'https://symfony.com/doc/current/console/style.html#asking-for-text-input'
  - question: 'What is the purpose of `InputOption::VALUE_NONE`?'
    answers:
      - { value: 'The option requires a value, but it can be empty.', correct: false }
      - { value: 'The option is a boolean flag and does not take a value.', correct: true }
      - { value: 'The option is optional and does not have a default value.', correct: false }
      - { value: 'The option is an array of values.', correct: false }
    help: |
      'https://symfony.com/doc/current/components/console/console_arguments.html#defining-options'
  - question: 'How do you clear all the output from the current line?'
    answers:
      - { value: '$cursor->clearLine();', correct: true }
      - { value: '$cursor->eraseLine();', correct: false }
      - { value: '$cursor->resetLine();', correct: false }
      - { value: '$cursor->emptyLine();', correct: false }
    help: |
      'https://symfony.com/doc/current/components/console/helpers/cursor.html#clearing-output'
  - question: 'Which global option outputs the version number of the console application?'
    answers:
      - { value: '--version', correct: true }
      - { value: '--v', correct: false }
      - { value: '--app-version', correct: false }
      - { value: '--show-version', correct: false }
    help: |
      'https://symfony.com/doc/current/components/console/input.html#global-options'
  - question: 'What is the purpose of `InputOption::VALUE_IS_ARRAY`?'
    answers:
      - { value: 'The option can be specified multiple times to accept multiple values.', correct: true }
      - { value: 'The option must be an array of values.', correct: false }
      - { value: 'The option is a boolean flag.', correct: false }
      - { value: 'The option takes a single value, which is an array.', correct: false }
    help: |
      'https://symfony.com/doc/current/components/console/console_arguments.html#defining-options'
  - question: 'How do you move the cursor one line down from its current position?'
    answers:
      - { value: '$cursor->down();', correct: false }
      - { value: '$cursor->moveDown();', correct: true }
      - { value: '$cursor->lineDown();', correct: false }
      - { value: '$cursor->downLine();', correct: false }
    help: |
      'https://symfony.com/doc/current/components/console/helpers/cursor.html#relative-and-absolute-cursor-movement'
  - question: 'Which method of `SymfonyStyle` is used to display a section title?'
    answers:
      - { value: '$io->section();', correct: true }
      - { value: '$io->subsection();', correct: false }
      - { value: '$io->heading();', correct: false }
      - { value: '$io->part();', correct: false }
    help: |
      'https://symfony.com/doc/current/console/style.html#section'
  - question: 'What is the purpose of `InputArgument::IS_ARRAY`?'
    answers:
      - { value: 'The argument can be an array of values.', correct: true }
      - { value: 'The argument is an optional array.', correct: false }
      - { value: 'The argument must be a single string.', correct: false }
      - { value: 'The argument is a boolean flag.', correct: false }
    help: |
      'https://symfony.com/doc/current/components/console/console_arguments.html#defining-arguments'
  - question: 'How do you clear the entire screen using the `Cursor` helper?'
    answers:
      - { value: '$cursor->clearScreen();', correct: true }
      - { value: '$cursor->eraseScreen();', correct: false }
      - { value: '$cursor->resetScreen();', correct: false }
      - { value: '$cursor->fullClear();', correct: false }
    help: |
      'https://symfony.com/doc/current/components/console/helpers/cursor.html#clearing-output'
  - question: 'Which method of `SymfonyStyle` is used to display a progress bar of unknown length?'
    answers:
      - { value: '$io->progressStart();', correct: true }
      - { value: '$io->startProgress();', correct: false }
      - { value: '$io->beginProgress();', correct: false }
      - { value: '$io->createProgressBar();', correct: false }
    help: |
      'https://symfony.com/doc/current/console/style.html#progress-bar'
  - question: 'What is the purpose of `ConsoleEvents::COMMAND`?'
    answers:
      - { value: 'It is dispatched after the command has finished execution.', correct: false }
      - { value: 'It is dispatched before the command is executed, allowing modification of input or command itself.', correct: true }
      - { value: 'It is dispatched when a command is registered.', correct: false }
      - { value: 'It is dispatched when a command is about to be run.', correct: false }
    help: |
      'https://symfony.com/doc/current/components/console/events.html'
  - question: 'How do you define a custom console output style with a specific foreground, background, and options?'
    answers:
      - { value: 'new OutputFormatterStyle(''red'', ''#ff0'', [''bold'', ''blink'']);', correct: true }
      - { value: 'new ConsoleStyle(''red'', ''yellow'', [''bold'']);', correct: false }
      - { value: 'new Style(''red'', ''#ff0'', ''bold'');', correct: false }
      - { value: 'new FormatterStyle(''red'', ''#ff0'');', correct: false }
    help: |
      'https://symfony.com/doc/current/console/coloring.html#defining-your-own-styles'
  - question: 'Which method of `SymfonyStyle` is used to ask the user for a text input with a default value?'
    answers:
      - { value: '$io->ask(''Question'', ''Default'');', correct: true }
      - { value: '$io->prompt(''Question'', ''Default'');', correct: false }
      - { value: '$io->input(''Question'', ''Default'');', correct: false }
      - { value: '$io->getText(''Question'', ''Default'');', correct: false }
    help: |
      'https://symfony.com/doc/current/console/style.html#asking-for-text-input'
  - question: 'What is the purpose of `InputArgument::REQUIRED` when defining an argument?'
    answers:
      - { value: 'The argument is optional.', correct: false }
      - { value: 'The argument must be present when the command is executed.', correct: true }
      - { value: 'The argument must have a default value.', correct: false }
      - { value: 'The argument is a boolean flag.', correct: false }
    help: |
      'https://symfony.com/doc/current/console/input.html#arguments'
  - question: 'How can you integrate the Symfony EventDispatcher with a Console Application?'
    answers:
      - { value: '$application->setEventDispatcher($dispatcher);', correct: false }
      - { value: '$application->setDispatcher($dispatcher);', correct: true }
      - { value: '$application->addEventDispatcher($dispatcher);', correct: false }
      - { value: '$application->registerDispatcher($dispatcher);', correct: false }
    help: |
      'https://symfony.com/doc/current/components/console/events.html#event-dispatcher'
  - question: 'Which method of `SymfonyStyle` is used to ask the user for a text input with a validation callback?'
    answers:
      - { value: '$io->ask(''Question'', null, function ($value) { /* ... */ });', correct: true }
      - { value: '$io->prompt(''Question'', null, function ($value) { /* ... */ });', correct: false }
      - { value: '$io->input(''Question'', null, function ($value) { /* ... */ });', correct: false }
      - { value: '$io->validate(''Question'', function ($value) { /* ... */ });', correct: false }
    help: |
      'https://symfony.com/doc/current/console/style.html#asking-for-text-input'
  - question: 'What is the purpose of `InputOption::VALUE_OPTIONAL`?'
    answers:
      - { value: 'The option must be present, but its value is optional.', correct: false }
      - { value: 'The option is optional, and if present, its value is also optional.', correct: true }
      - { value: 'The option is a boolean flag.', correct: false }
      - { value: 'The option is required and must have a value.', correct: false }
    help: |
      'https://symfony.com/doc/current/components/console/console_arguments.html#defining-options'
  - question: 'How can you use the shortest unambiguous name to run a namespaced Symfony console command like `demo:greet`?'
    answers:
      - { value: 'php bin/console d:g Fabien', correct: true }
      - { value: 'php bin/console demo:g Fabien', correct: false }
      - { value: 'php bin/console greet Fabien', correct: false }
      - { value: 'php bin/console d:greet Fabien', correct: false }
    help: |
      'https://symfony.com/doc/current/components/console/usage.html#using-the-shortest-unambiguous-name'
  - question: 'Which method of `SymfonyStyle` is used to display a progress bar with a known number of steps?'
    answers:
      - { value: '$io->progressStart(100);', correct: true }
      - { value: '$io->startProgress(100);', correct: false }
      - { value: '$io->beginProgress(100);', correct: false }
      - { value: '$io->createProgressBar(100);', correct: false }
    help: |
      'https://symfony.com/doc/current/console/style.html#progress-bar'
  - question: 'What is the purpose of `InputOption::VALUE_NONE`?'
    answers:
      - { value: 'The option requires a value, but it can be empty.', correct: false }
      - { value: 'The option is a boolean flag and does not take a value.', correct: true }
      - { value: 'The option is optional and does not have a default value.', correct: false }
      - { value: 'The option is an array of values.', correct: false }
    help: |
      'https://symfony.com/doc/current/components/console/console_arguments.html#defining-options'
  - question: 'How do you display an error message using the `<error>` tag in console output?'
    answers:
      - { value: '$output->writeln(''<error>Error message</error>'');', correct: true }
      - { value: '$output->writeln(''[error]Error message[/error]'');', correct: false }
      - { value: '$output->writeln(''{{ error }}Error message{{ enderror }}'');', correct: false }
      - { value: '$output->writeln(''<e>Error message</e>'');', correct: false }
    help: |
      'https://symfony.com/doc/current/console/coloring.html#predefined-styles'
  - question: 'Which method of `SymfonyStyle` is used to advance a progress bar by a specific number of steps?'
    answers:
      - { value: '$io->progressAdvance(5);', correct: true }
      - { value: '$io->advanceProgress(5);', correct: false }
      - { value: '$io->stepProgress(5);', correct: false }
      - { value: '$io->moveProgress(5);', correct: false }
    help: |
      'https://symfony.com/doc/current/console/style.html#progress-bar'
  - question: 'What is the purpose of `InputOption::VALUE_IS_ARRAY`?'
    answers:
      - { value: 'The option can be specified multiple times to accept multiple values.', correct: true }
      - { value: 'The option must be an array of values.', correct: false }
      - { value: 'The option is a boolean flag.', correct: false }
      - { value: 'The option takes a single value, which is an array.', correct: false }
    help: |
      'https://symfony.com/doc/current/components/console/console_arguments.html#defining-options'
  - question: 'How do you finish a progress bar using `SymfonyStyle`?'
    answers:
      - { value: '$io->progressFinish();', correct: true }
      - { value: '$io->endProgress();', correct: false }
      - { value: '$io->completeProgress();', correct: false }
      - { value: '$io->stopProgress();', correct: false }
    help: |
      'https://symfony.com/doc/current/console/style.html#progress-bar'
  - question: 'Which method of `SymfonyStyle` is used to ask the user for a hidden input with a validation callback?'
    answers:
      - { value: '$io->askHidden(''Question'', function ($value) { /* ... */ });', correct: true }
      - { value: '$io->promptHidden(''Question'', function ($value) { /* ... */ });', correct: false }
      - { value: '$io->secret(''Question'', function ($value) { /* ... */ });', correct: false }
      - { value: '$io->validateHidden(''Question'', function ($value) { /* ... */ });', correct: false }
    help: |
      'https://symfony.com/doc/current/console/style.html#asking-for-hidden-input'
  - question: 'What is the purpose of `InputArgument::IS_ARRAY`?'
    answers:
      - { value: 'The argument can be an array of values.', correct: true }
      - { value: 'The argument is an optional array.', correct: false }
      - { value: 'The argument must be a single string.', correct: false }
      - { value: 'The argument is a boolean flag.', correct: false }
    help: |
      'https://symfony.com/doc/current/components/console/console_arguments.html#defining-arguments'
  - question: 'How do you display an info message using the `<info>` tag in console output?'
    answers:
      - { value: '$output->writeln(''<info>Info message</info>'');', correct: true }
      - { value: '$output->writeln(''[info]Info message[/info]'');', correct: false }
      - { value: '$output->writeln(''{{ info }}Info message{{ endinfo }}'');', correct: false }
      - { value: '$output->writeln(''<i/>Info message</i/>'');', correct: false }
    help: |
      'https://symfony.com/doc/current/console/coloring.html#predefined-styles'
  - question: 'Which method of `SymfonyStyle` is used to display a question message using the `<question>` tag?'
    answers:
      - { value: '$io->question();', correct: false }
      - { value: '$io->ask();', correct: false }
      - { value: '$io->text(''<question>Question?</question>'');', correct: true }
      - { value: '$io->promptQuestion();', correct: false }
    help: |
      'https://symfony.com/doc/current/console/coloring.html#predefined-styles'
  - question: 'What is the purpose of `InputOption::VALUE_REQUIRED` when defining an option?'
    answers:
      - { value: 'The option must be present, but its value is optional.', correct: false }
      - { value: 'The option must be present and must have a value.', correct: true }
      - { value: 'The option is optional, but if present, it must have a value.', correct: false }
      - { value: 'The option is a boolean flag and does not take a value.', correct: false }
    help: |
      'https://symfony.com/doc/current/components/console/console_arguments.html#defining-options'
  - question: 'How do you display a comment message using the `<comment>` tag in console output?'
    answers:
      - { value: '$output->writeln(''<comment>Comment message</comment>'');', correct: true }
      - { value: '$output->writeln(''[comment]Comment message[/comment]'');', correct: false }
      - { value: '$output->writeln(''{{ comment }}Comment message{{ endcomment }}'');', correct: false }
      - { value: '$output->writeln(''<c>Comment message</c>'');', correct: false }
    help: |
      'https://symfony.com/doc/current/console/coloring.html#predefined-styles'
  - question: 'Which method of `SymfonyStyle` is used to display a warning message using the `<warning>` tag?'
    answers:
      - { value: '$io->warning();', correct: true }
      - { value: '$io->warn();', correct: false }
      - { value: '$io->alert();', correct: false }
      - { value: '$io->text(''<warning>Warning!</warning>'');', correct: false }
    help: |
      'https://symfony.com/doc/current/console/style.html#warning-messages'
  - question: 'What is the purpose of `InputOption::VALUE_OPTIONAL`?'
    answers:
      - { value: 'The option must be present, but its value is optional.', correct: false }
      - { value: 'The option is optional, and if present, its value is also optional.', correct: true }
      - { value: 'The option is a boolean flag.', correct: false }
      - { value: 'The option is required and must have a value.', correct: false }
    help: |
      'https://symfony.com/doc/current/components/console/console_arguments.html#defining-options'
  - question: 'How do you display a success message using the `<info>` tag in console output?'
    answers:
      - { value: '$output->writeln(''<info>Success!</info>'');', correct: true }
      - { value: '$output->writeln(''[success]Success![/success]'');', correct: false }
      - { value: '$output->writeln(''{{ success }}Success!{{ endsuccess }}'');', correct: false }
      - { value: '$output->writeln(''<s/>Success!</s/>'');', correct: false }
    help: |
      'https://symfony.com/doc/current/console/coloring.html#predefined-styles'
  - question: 'Which method of `SymfonyStyle` is used to display an error message using the `<error>` tag?'
    answers:
      - { value: '$io->error();', correct: true }
      - { value: '$io->fail();', correct: false }
      - { value: '$io->exception();', correct: false }
      - { value: '$io->text(''<error>Error!</error>'');', correct: false }
    help: |
      'https://symfony.com/doc/current/console/style.html#error-messages'
  - question: 'What is the purpose of `InputOption::VALUE_NONE`?'
    answers:
      - { value: 'The option requires a value, but it can be empty.', correct: false }
      - { value: 'The option is a boolean flag and does not take a value.', correct: true }
      - { value: 'The option is optional and does not have a default value.', correct: false }
      - { value: 'The option is an array of values.', correct: false }
    help: |
      'https://symfony.com/doc/current/components/console/console_arguments.html#defining-options'
  - question: 'How do you display an informational message using the `<info>` tag in console output?'
    answers:
      - { value: '$output->writeln(''<info>Information message</info>'');', correct: true }
      - { value: '$output->writeln(''[info]Information message[/info]'');', correct: false }
      - { value: '$output->writeln(''{{ info }}Information message{{ endinfo }}'');', correct: false }
      - { value: '$output->writeln(''<i/>Information message</i/>'');', correct: false }
    help: |
      'https://symfony.com/doc/current/console/coloring.html#predefined-styles'
  - question: 'Which method of `SymfonyStyle` is used to display a comment message using the `<comment>` tag?'
    answers:
      - { value: '$io->comment();', correct: false }
      - { value: '$io->text(''<comment>Comment message</comment>'');', correct: false }
      - { value: '$io->writeln(''<comment>Comment message</comment>'');', correct: true }
      - { value: '$io->note();', correct: false }
    help: |
      'https://symfony.com/doc/current/console/coloring.html#predefined-styles'
  - question: 'What is the purpose of `InputOption::VALUE_IS_ARRAY`?'
    answers:
      - { value: 'The option can be specified multiple times to accept multiple values.', correct: true }
      - { value: 'The option must be an array of values.', correct: false }
      - { value: 'The option is a boolean flag.', correct: false }
      - { value: 'The option takes a single value, which is an array.', correct: false }
    help: |
      'https://symfony.com/doc/current/components/console/console_arguments.html#defining-options'
  - question: 'How do you display a question message using the `<question>` tag in console output?'
    answers:
      - { value: '$output->writeln(''<question>Are you sure?</question>'');', correct: true }
      - { value: '$output->writeln(''[question]Are you sure?[/question]'');', correct: false }
      - { value: '$output->writeln(''{{ question }}Are you sure?{{ endquestion }}'');', correct: false }
      - { value: '$output->writeln(''<q>Are you sure?</q>'');', correct: false }
    help: |
      'https://symfony.com/doc/current/console/coloring.html#predefined-styles'
  - question: 'Which method of `SymfonyStyle` is used to display a warning message using the `<warning>` tag?'
    answers:
      - { value: '$io->warning();', correct: true }
      - { value: '$io->warn();', correct: false }
      - { value: '$io->alert();', correct: false }
      - { value: '$io->text(''<warning>Warning!</warning>'');', correct: false }
    help: |
      'https://symfony.com/doc/current/console/style.html#warning-messages'
  - question: 'What is the purpose of `InputArgument::IS_ARRAY`?'
    answers:
      - { value: 'The argument can be an array of values.', correct: true }
      - { value: 'The argument is an optional array.', correct: false }
      - { value: 'The argument must be a single string.', correct: false }
      - { value: 'The argument is a boolean flag.', correct: false }
    help: |
      'https://symfony.com/doc/current/components/console/console_arguments.html#defining-arguments'
  - question: 'How do you display a success message using the `<info>` tag in console output?'
    answers:
      - { value: '$output->writeln(''<info>Success!</info>'');', correct: true }
      - { value: '$output->writeln(''[success]Success![/success]'');', correct: false }
      - { value: '$output->writeln(''{{ success }}Success!{{ endsuccess }}'');', correct: false }
      - { value: '$output->writeln(''<s/>Success!</s/>'');', correct: false }
    help: |
      'https://symfony.com/doc/current/console/coloring.html#predefined-styles'
  - question: 'Which method of `SymfonyStyle` is used to display an error message using the `<error>` tag?'
    answers:
      - { value: '$io->error();', correct: true }
      - { value: '$io->fail();', correct: false }
      - { value: '$io->exception();', correct: false }
      - { value: '$io->text(''<error>Error!</error>'');', correct: false }
    help: |
      'https://symfony.com/doc/current/console/style.html#error-messages'
  - question: 'What is the purpose of `InputOption::VALUE_REQUIRED` when defining an option?'
    answers:
      - { value: 'The option must be present, but its value is optional.', correct: false }
      - { value: 'The option must be present and must have a value.', correct: true }
      - { value: 'The option is optional, but if present, it must have a value.', correct: false }
      - { value: 'The option is a boolean flag and does not take a value.', correct: false }
    help: |
      'https://symfony.com/doc/current/components/console/console_arguments.html#defining-options'
  - question: 'How do you display an informational message using the `<info>` tag in console output?'
    answers:
      - { value: '$output->writeln(''<info>Information message</info>'');', correct: true }
      - { value: '$output->writeln(''[info]Information message[/info]'');', correct: false }
      - { value: '$output->writeln(''{{ info }}Information message{{ endinfo }}'');', correct: false }
      - { value: '$output->writeln(''<i/>Information message</i/>'');', correct: false }
    help: |
      'https://symfony.com/doc/current/console/coloring.html#predefined-styles'
  - question: 'Which method of `SymfonyStyle` is used to display a comment message using the `<comment>` tag?'
    answers:
      - { value: '$io->comment();', correct: false }
      - { value: '$io->text(''<comment>Comment message</comment>'');', correct: false }
      - { value: '$io->writeln(''<comment>Comment message</comment>'');', correct: true }
      - { value: '$io->note();', correct: false }
    help: |
      'https://symfony.com/doc/current/console/coloring.html#predefined-styles'
  - question: 'What is the purpose of `InputOption::VALUE_OPTIONAL`?'
    answers:
      - { value: 'The option must be present, but its value is optional.', correct: false }
      - { value: 'The option is optional, and if present, its value is also optional.', correct: true }
      - { value: 'The option is a boolean flag.', correct: false }
      - { value: 'The option is required and must have a value.', correct: false }
    help: |
      'https://symfony.com/doc/current/components/console/console_arguments.html#defining-options'
  - question: 'How do you display a question message using the `<question>` tag in console output?'
    answers:
      - { value: '$output->writeln(''<question>Are you sure?</question>'');', correct: true }
      - { value: '$output->writeln(''[question]Are you sure?[/question]'');', correct: false }
      - { value: '$output->writeln(''{{ question }}Are you sure?{{ endquestion }}'');', correct: false }
      - { value: '$output->writeln(''<q>Are you sure?</q>'');', correct: false }
    help: |
      'https://symfony.com/doc/current/console/coloring.html#predefined-styles'
  - question: 'Which method of `SymfonyStyle` is used to display a warning message using the `<warning>` tag?'
    answers:
      - { value: '$io->warning();', correct: true }
      - { value: '$io->warn();', correct: false }
      - { value: '$io->alert();', correct: false }
      - { value: '$io->text(''<warning>Warning!</warning>'');', correct: false }
    help: |
      'https://symfony.com/doc/current/console/style.html#warning-messages'
  - question: 'What is the purpose of `InputOption::VALUE_NONE`?'
    answers:
      - { value: 'The option requires a value, but it can be empty.', correct: false }
      - { value: 'The option is a boolean flag and does not take a value.', correct: true }
      - { value: 'The option is optional and does not have a default value.', correct: false }
      - { value: 'The option is an array of values.', correct: false }
    help: |
      'https://symfony.com/doc/current/components/console/console_arguments.html#defining-options'
  - question: 'How do you display a success message using the `<info>` tag in console output?'
    answers:
      - { value: '$output->writeln(''<info>Success!</info>'');', correct: true }
      - { value: '$output->writeln(''[success]Success![/success]'');', correct: false }
      - { value: '$output->writeln(''{{ success }}Success!{{ endsuccess }}'');', correct: false }
      - { value: '$output->writeln(''<s/>Success!</s/>'');', correct: false }
    help: |
      'https://symfony.com/doc/current/console/coloring.html#predefined-styles'
  - question: 'Which method of `SymfonyStyle` is used to display an error message using the `<error>` tag?'
    answers:
      - { value: '$io->error();', correct: true }
      - { value: '$io->fail();', correct: false }
      - { value: '$io->exception();', correct: false }
      - { value: '$io->text(''<error>Error!</error>'');', correct: false }
    help: |
      'https://symfony.com/doc/current/console/style.html#error-messages'
  - question: 'What is the purpose of `InputOption::VALUE_IS_ARRAY`?'
    answers:
      - { value: 'The option can be specified multiple times to accept multiple values.', correct: true }
      - { value: 'The option must be an array of values.', correct: false }
      - { value: 'The option is a boolean flag.', correct: false }
      - { value: 'The option takes a single value, which is an array.', correct: false }
    help: |
      'https://symfony.com/doc/current/components/console/console_arguments.html#defining-options'
  - question: 'How do you display an informational message using the `<info>` tag in console output?'
    answers:
      - { value: '$output->writeln(''<info>Information message</info>'');', correct: true }
      - { value: '$output->writeln(''[info]Information message[/info]'');', correct: false }
      - { value: '$output->writeln(''{{ info }}Information message{{ endinfo }}'');', correct: false }
      - { value: '$output->writeln(''<i/>Information message</i/>'');', correct: false }
    help: |
      'https://symfony.com/doc/current/console/coloring.html#predefined-styles'
  - question: 'Which method of `SymfonyStyle` is used to display a comment message using the `<comment>` tag?'
    answers:
      - { value: '$io->comment();', correct: false }
      - { value: '$io->text(''<comment>Comment message</comment>'');', correct: false }
      - { value: '$io->writeln(''<comment>Comment message</comment>'');', correct: true }
      - { value: '$io->note();', correct: false }
    help: |
      'https://symfony.com/doc/current/console/coloring.html#predefined-styles'
  - question: 'What is the purpose of `InputArgument::IS_ARRAY`?'
    answers:
      - { value: 'The argument can be an array of values.', correct: true }
      - { value: 'The argument is an optional array.', correct: false }
      - { value: 'The argument must be a single string.', correct: false }
      - { value: 'The argument is a boolean flag.', correct: false }
    help: |
      'https://symfony.com/doc/current/components/console/console_arguments.html#defining-arguments'
  - question: 'How do you display a question message using the `<question>` tag in console output?'
    answers:
      - { value: '$output->writeln(''<question>Are you sure?</question>'');', correct: true }
      - { value: '$output->writeln(''[question]Are you sure?[/question]'');', correct: false }
      - { value: '$output->writeln(''{{ question }}Are you sure?{{ endquestion }}'');', correct: false }
      - { value: '$output->writeln(''<q>Are you sure?</q>'');', correct: false }
    help: |
      'https://symfony.com/doc/current/console/coloring.html#predefined-styles'
  - question: 'Which method of `SymfonyStyle` is used to display a warning message using the `<warning>` tag?'
    answers:
      - { value: '$io->warning();', correct: true }
      - { value: '$io->warn();', correct: false }
      - { value: '$io->alert();', correct: false }
      - { value: '$io->text(''<warning>Warning!</warning>'');', correct: false }
    help: |
      'https://symfony.com/doc/current/console/style.html#warning-messages'
  - question: 'What is the purpose of `InputOption::VALUE_REQUIRED` when defining an option?'
    answers:
      - { value: 'The option must be present, but its value is optional.', correct: false }
      - { value: 'The option must be present and must have a value.', correct: true }
      - { value: 'The option is optional, but if present, it must have a value.', correct: false }
      - { value: 'The option is a boolean flag and does not take a value.', correct: false }
    help: |
      'https://symfony.com/doc/current/components/console/console_arguments.html#defining-options'
  - question: 'How do you display a success message using the `<info>` tag in console output?'
    answers:
      - { value: '$output->writeln(''<info>Success!</info>'');', correct: true }
      - { value: '$output->writeln(''[success]Success![/success]'');', correct: false }
      - { value: '$output->writeln(''{{ success }}Success!{{ endsuccess }}'');', correct: false }
      - { value: '$output->writeln(''<s/>Success!</s/>'');', correct: false }
    help: |
      'https://symfony.com/doc/current/console/coloring.html#predefined-styles'
  - question: 'Which method of `SymfonyStyle` is used to display an error message using the `<error>` tag?'
    answers:
      - { value: '$io->error();', correct: true }
      - { value: '$io->fail();', correct: false }
      - { value: '$io->exception();', correct: false }
      - { value: '$io->text(''<error>Error!</error>'');', correct: false }
    help: |
      'https://symfony.com/doc/current/console/style.html#error-messages'
  - question: 'What is the purpose of `InputOption::VALUE_OPTIONAL`?'
    answers:
      - { value: 'The option must be present, but its value is optional.', correct: false }
      - { value: 'The option is optional, and if present, its value is also optional.', correct: true }
      - { value: 'The option is a boolean flag.', correct: false }
      - { value: 'The option is required and must have a value.', correct: false }
    help: |
      'https://symfony.com/doc/current/components/console/console_arguments.html#defining-options'
  - question: 'How do you display an informational message using the `<info>` tag in console output?'
    answers:
      - { value: '$output->writeln(''<info>Information message</info>'');', correct: true }
      - { value: '$output->writeln(''[info]Information message[/info]'');', correct: false }
      - { value: '$output->writeln(''{{ info }}Information message{{ endinfo }}'');', correct: false }
      - { value: '$output->writeln(''<i/>Information message</i/>'');', correct: false }
    help: |
      'https://symfony.com/doc/current/console/coloring.html#predefined-styles'
  - question: 'Which method of `SymfonyStyle` is used to display a comment message using the `<comment>` tag?'
    answers:
      - { value: '$io->comment();', correct: false }
      - { value: '$io->text(''<comment>Comment message</comment>'');', correct: false }
      - { value: '$io->writeln(''<comment>Comment message</comment>'');', correct: true }
      - { value: '$io->note();', correct: false }
    help: |
      'https://symfony.com/doc/current/console/coloring.html#predefined-styles'
  - question: 'What is the purpose of `InputOption::VALUE_NONE`?'
    answers:
      - { value: 'The option requires a value, but it can be empty.', correct: false }
      - { value: 'The option is a boolean flag and does not take a value.', correct: true }
      - { value: 'The option is optional and does not have a default value.', correct: false }
      - { value: 'The option is an array of values.', correct: false }
    help: |
      'https://symfony.com/doc/current/components/console/console_arguments.html#defining-options'
  - question: 'How do you display a question message using the `<question>` tag in console output?'
    answers:
      - { value: '$output->writeln(''<question>Are you sure?</question>'');', correct: true }
      - { value: '$output->writeln(''[question]Are you sure?[/question]'');', correct: false }
      - { value: '$output->writeln(''{{ question }}Are you sure?{{ endquestion }}'');', correct: false }
      - { value: '$output->writeln(''<q>Are you sure?</q>'');', correct: false }
    help: |
      'https://symfony.com/doc/current/console/coloring.html#predefined-styles'
  - question: 'Which method of `SymfonyStyle` is used to display a warning message using the `<warning>` tag?'
    answers:
      - { value: '$io->warning();', correct: true }
      - { value: '$io->warn();', correct: false }
      - { value: '$io->alert();', correct: false }
      - { value: '$io->text(''<warning>Warning!</warning>'');', correct: false }
    help: |
      'https://symfony.com/doc/current/console/style.html#warning-messages'
  - question: 'What is the purpose of `InputOption::VALUE_IS_ARRAY`?'
    answers:
      - { value: 'The option can be specified multiple times to accept multiple values.', correct: true }
      - { value: 'The option must be an array of values.', correct: false }
      - { value: 'The option is a boolean flag.', correct: false }
      - { value: 'The option takes a single value, which is an array.', correct: false }
    help: |
      'https://symfony.com/doc/current/components/console/console_arguments.html#defining-options'
  - question: 'How do you display a success message using the `<info>` tag in console output?'
    answers:
      - { value: '$output->writeln(''<info>Success!</info>'');', correct: true }
      - { value: '$output->writeln(''[success]Success![/success]'');', correct: false }
      - { value: '$output->writeln(''{{ success }}Success!{{ endsuccess }}'');', correct: false }
      - { value: '$output->writeln(''<s/>Success!</s/>'');', correct: false }
    help: |
      'https://symfony.com/doc/current/console/coloring.html#predefined-styles'
  - question: 'Which method of `SymfonyStyle` is used to display an error message using the `<error>` tag?'
    answers:
      - { value: '$io->error();', correct: true }
      - { value: '$io->fail();', correct: false }
      - { value: '$io->exception();', correct: false }
      - { value: '$io->text(''<error>Error!</error>'');', correct: false }
    help: |
      'https://symfony.com/doc/current/console/style.html#error-messages'
  - question: 'What is the purpose of `InputArgument::REQUIRED` when defining an argument?'
    answers:
      - { value: 'The argument is optional.', correct: false }
      - { value: 'The argument must be present when the command is executed.', correct: true }
      - { value: 'The argument must have a default value.', correct: false }
      - { value: 'The argument is a boolean flag.', correct: false }
    help: |
      'https://symfony.com/doc/current/console/input.html#arguments'
  - question: 'How do you display an informational message using the `<info>` tag in console output?'
    answers:
      - { value: '$output->writeln(''<info>Information message</info>'');', correct: true }
      - { value: '$output->writeln(''[info]Information message[/info]'');', correct: false }
      - { value: '$output->writeln(''{{ info }}Information message{{ endinfo }}'');', correct: false }
      - { value: '$output->writeln(''<i/>Information message</i/>'');', correct: false }
    help: |
      'https://symfony.com/doc/current/console/coloring.html#predefined-styles'
  - question: 'Which method of `SymfonyStyle` is used to display a comment message using the `<comment>` tag?'
    answers:
      - { value: '$io->comment();', correct: false }
      - { value: '$io->text(''<comment>Comment message</comment>'');', correct: false }
      - { value: '$io->writeln(''<comment>Comment message</comment>'');', correct: true }
      - { value: '$io->note();', correct: false }
    help: |
      'https://symfony.com/doc/current/console/coloring.html#predefined-styles'
  - question: 'What is the purpose of `InputArgument::OPTIONAL` when defining an argument?'
    answers:
      - { value: 'The argument must be present.', correct: false }
      - { value: 'The argument is optional and can be omitted.', correct: true }
      - { value: 'The argument must have a default value.', correct: false }
      - { value: 'The argument is a boolean flag.', correct: false }
    help: |
      'https://symfony.com/doc/current/console/input.html#arguments'
  - question: 'How do you display a question message using the `<question>` tag in console output?'
    answers:
      - { value: '$output->writeln(''<question>Are you sure?</question>'');', correct: true }
      - { value: '$output->writeln(''[question]Are you sure?[/question]'');', correct: false }
      - { value: '$output->writeln(''{{ question }}Are you sure?{{ endquestion }}'');', correct: false }
      - { value: '$output->writeln(''<q>Are you sure?</q>'');', correct: false }
    help: |
      'https://symfony.com/doc/current/console/coloring.html#predefined-styles'
  - question: 'Which method of `SymfonyStyle` is used to display a warning message using the `<warning>` tag?'
    answers:
      - { value: '$io->warning();', correct: true }
      - { value: '$io->warn();', correct: false }
      - { value: '$io->alert();', correct: false }
      - { value: '$io->text(''<warning>Warning!</warning>'');', correct: false }
    help: |
      'https://symfony.com/doc/current/console/style.html#warning-messages'
  - question: 'What is the purpose of `InputOption::VALUE_REQUIRED` when defining an option?'
    answers:
      - { value: 'The option must be present, but its value is optional.', correct: false }
      - { value: 'The option must be present and must have a value.', correct: true }
      - { value: 'The option is optional, but if present, it must have a value.', correct: false }
      - { value: 'The option is a boolean flag and does not take a value.', correct: false }
    help: |
      'https://symfony.com/doc/current/components/console/console_arguments.html#defining-options'
  - question: 'How do you display a success message using the `<info>` tag in console output?'
    answers:
      - { value: '$output->writeln(''<info>Success!</info>'');', correct: true }
      - { value: '$output->writeln(''[success]Success![/success]'');', correct: false }
      - { value: '$output->writeln(''{{ success }}Success!{{ endsuccess }}'');', correct: false }
      - { value: '$output->writeln(''<s/>Success!</s/>'');', correct: false }
    help: |
      'https://symfony.com/doc/current/console/coloring.html#predefined-styles'
  - question: 'Which method of `SymfonyStyle` is used to display an error message using the `<error>` tag?'
    answers:
      - { value: '$io->error();', correct: true }
      - { value: '$io->fail();', correct: false }
      - { value: '$io->exception();', correct: false }
      - { value: '$io->text(''<error>Error!</error>'');', correct: false }
    help: |
      'https://symfony.com/doc/current/console/style.html#error-messages'
  - question: 'What is the purpose of `InputOption::VALUE_OPTIONAL`?'
    answers:
      - { value: 'The option must be present, but its value is optional.', correct: false }
      - { value: 'The option is optional, and if present, its value is also optional.', correct: true }
      - { value: 'The option is a boolean flag.', correct: false }
      - { value: 'The option is required and must have a value.', correct: false }
    help: |
      'https://symfony.com/doc/current/components/console/console_arguments.html#defining-options'
  - question: 'How do you display an informational message using the `<info>` tag in console output?'
    answers:
      - { value: '$output->writeln(''<info>Information message</info>'');', correct: true }
      - { value: '$output->writeln(''[info]Information message[/info]'');', correct: false }
      - { value: '$output->writeln(''{{ info }}Information message{{ endinfo }}'');', correct: false }
      - { value: '$output->writeln(''<i/>Information message</i/>'');', correct: false }
    help: |
      'https://symfony.com/doc/current/console/coloring.html#predefined-styles'
  - question: 'Which method of `SymfonyStyle` is used to display a comment message using the `<comment>` tag?'
    answers:
      - { value: '$io->comment();', correct: false }
      - { value: '$io->text(''<comment>Comment message</comment>'');', correct: false }
      - { value: '$io->writeln(''<comment>Comment message</comment>'');', correct: true }
      - { value: '$io->note();', correct: false }
    help: |
      'https://symfony.com/doc/current/console/coloring.html#predefined-styles'
  - question: 'What is the purpose of `InputOption::VALUE_NONE`?'
    answers:
      - { value: 'The option requires a value, but it can be empty.', correct: false }
      - { value: 'The option is a boolean flag and does not take a value.', correct: true }
      - { value: 'The option is optional and does not have a default value.', correct: false }
      - { value: 'The option is an array of values.', correct: false }
    help: |
      'https://symfony.com/doc/current/components/console/console_arguments.html#defining-options'
  - question: 'How do you display a question message using the `<question>` tag in console output?'
    answers:
      - { value: '$output->writeln(''<question>Are you sure?</question>'');', correct: true }
      - { value: '$output->writeln(''[question]Are you sure?[/question]'');', correct: false }
      - { value: '$output->writeln(''{{ question }}Are you sure?{{ endquestion }}'');', correct: false }
      - { value: '$output->writeln(''<q>Are you sure?</q>'');', correct: false }
    help: |
      'https://symfony.com/doc/current/console/coloring.html#predefined-styles'
  - question: 'Which method of `SymfonyStyle` is used to display a warning message using the `<warning>` tag?'
    answers:
      - { value: '$io->warning();', correct: true }
      - { value: '$io->warn();', correct: false }
      - { value: '$io->alert();', correct: false }
      - { value: '$io->text(''<warning>Warning!</warning>'');', correct: false }
    help: |
      'https://symfony.com/doc/current/console/style.html#warning-messages'
  - question: 'What is the purpose of `InputOption::VALUE_IS_ARRAY`?'
    answers:
      - { value: 'The option can be specified multiple times to accept multiple values.', correct: true }
      - { value: 'The option must be an array of values.', correct: false }
      - { value: 'The option is a boolean flag.', correct: false }
      - { value: 'The option takes a single value, which is an array.', correct: false }
    help: |
      'https://symfony.com/doc/current/components/console/console_arguments.html#defining-options'
  - question: 'How do you display a success message using the `<info>` tag in console output?'
    answers:
      - { value: '$output->writeln(''<info>Success!</info>'');', correct: true }
      - { value: '$output->writeln(''[success]Success![/success]'');', correct: false }
      - { value: '$output->writeln(''{{ success }}Success!{{ endsuccess }}'');', correct: false }
      - { value: '$output->writeln(''<s/>Success!</s/>'');', correct: false }
    help: |
      'https://symfony.com/doc/current/console/coloring.html#predefined-styles'
  - question: 'Which method of `SymfonyStyle` is used to display an error message using the `<error>` tag?'
    answers:
      - { value: '$io->error();', correct: true }
      - { value: '$io->fail();', correct: false }
      - { value: '$io->exception();', correct: false }
      - { value: '$io->text(''<error>Error!</error>'');', correct: false }
    help: |
      'https://symfony.com/doc/current/console/style.html#error-messages'
  - question: 'What is the purpose of `InputArgument::REQUIRED` when defining an argument?'
    answers:
      - { value: 'The argument is optional.', correct: false }
      - { value: 'The argument must be present when the command is executed.', correct: true }
      - { value: 'The argument must have a default value.', correct: false }
      - { value: 'The argument is a boolean flag.', correct: false }
    help: |
      'https://symfony.com/doc/current/console/input.html#arguments'
  - question: 'How do you display an informational message using the `<info>` tag in console output?'
    answers:
      - { value: '$output->writeln(''<info>Information message</info>'');', correct: true }
      - { value: '$output->writeln(''[info]Information message[/info]'');', correct: false }
      - { value: '$output->writeln(''{{ info }}Information message{{ endinfo }}'');', correct: false }
      - { value: '$output->writeln(''<i/>Information message</i/>'');', correct: false }
    help: |
      'https://symfony.com/doc/current/console/coloring.html#predefined-styles'
  - question: 'Which method of `SymfonyStyle` is used to display a comment message using the `<comment>` tag?'
    answers:
      - { value: '$io->comment();', correct: false }
      - { value: '$io->text(''<comment>Comment message</comment>'');', correct: false }
      - { value: '$io->writeln(''<comment>Comment message</comment>'');', correct: true }
      - { value: '$io->note();', correct: false }
    help: |
      'https://symfony.com/doc/current/console/coloring.html#predefined-styles'
  - question: 'What is the purpose of `InputArgument::OPTIONAL` when defining an argument?'
    answers:
      - { value: 'The argument must be present.', correct: false }
      - { value: 'The argument is optional and can be omitted.', correct: true }
      - { value: 'The argument must have a default value.', correct: false }
      - { value: 'The argument is a boolean flag.', correct: false }
    help: |
      'https://symfony.com/doc/current/console/input.html#arguments'
  - question: 'How do you display a question message using the `<question>` tag in console output?'
    answers:
      - { value: '$output->writeln(''<question>Are you sure?</question>'');', correct: true }
      - { value: '$output->writeln(''[question]Are you sure?[/question]'');', correct: false }
      - { value: '$output->writeln(''{{ question }}Are you sure?{{ endquestion }}'');', correct: false }
      - { value: '$output->writeln(''<q>Are you sure?</q>'');', correct: false }
    help: |
      'https://symfony.com/doc/current/console/coloring.html#predefined-styles'
  - question: 'Which method of `SymfonyStyle` is used to display a warning message using the `<warning>` tag?'
    answers:
      - { value: '$io->warning();', correct: true }
      - { value: '$io->warn();', correct: false }
      - { value: '$io->alert();', correct: false }
      - { value: '$io->text(''<warning>Warning!</warning>'');', correct: false }
    help: |
      'https://symfony.com/doc/current/console/style.html#warning-messages'
  - question: 'What is the purpose of `InputOption::VALUE_REQUIRED` when defining an option?'
    answers:
      - { value: 'The option must be present, but its value is optional.', correct: false }
      - { value: 'The option must be present and must have a value.', correct: true }
      - { value: 'The option is optional, but if present, it must have a value.', correct: false }
      - { value: 'The option is a boolean flag and does not take a value.', correct: false }
    help: |
      'https://symfony.com/doc/current/components/console/console_arguments.html#defining-options'
  - question: 'How do you display a success message using the `<info>` tag in console output?'
    answers:
      - { value: '$output->writeln(''<info>Success!</info>'');', correct: true }
      - { value: '$output->writeln(''[success]Success![/success]'');', correct: false }
      - { value: '$output->writeln(''{{ success }}Success!{{ endsuccess }}'');', correct: false }
      - { value: '$output->writeln(''<s/>Success!</s/>'');', correct: false }
    help: |
      'https://symfony.com/doc/current/console/coloring.html#predefined-styles'
  - question: 'Which method of `SymfonyStyle` is used to display an error message using the `<error>` tag?'
    answers:
      - { value: '$io->error();', correct: true }
      - { value: '$io->fail();', correct: false }
      - { value: '$io->exception();', correct: false }
      - { value: '$io->text(''<error>Error!</error>'');', correct: false }
    help: |
      'https://symfony.com/doc/current/console/style.html#error-messages'
  - question: 'What is the purpose of `InputOption::VALUE_OPTIONAL`?'
    answers:
      - { value: 'The option must be present, but its value is optional.', correct: false }
      - { value: 'The option is optional, and if present, its value is also optional.', correct: true }
      - { value: 'The option is a boolean flag.', correct: false }
      - { value: 'The option is required and must have a value.', correct: false }
    help: |
      'https://symfony.com/doc/current/components/console/console_arguments.html#defining-options'
  - question: 'How do you display an informational message using the `<info>` tag in console output?'
    answers:
      - { value: '$output->writeln(''<info>Information message</info>'');', correct: true }
      - { value: '$output->writeln(''[info]Information message[/info]'');', correct: false }
      - { value: '$output->writeln(''{{ info }}Information message{{ endinfo }}'');', correct: false }
      - { value: '$output->writeln(''<i/>Information message</i/>'');', correct: false }
    help: |
      'https://symfony.com/doc/current/console/coloring.html#predefined-styles'
  - question: 'Which method of `SymfonyStyle` is used to display a comment message using the `<comment>` tag?'
    answers:
      - { value: '$io->comment();', correct: false }
      - { value: '$io->text(''<comment>Comment message</comment>'');', correct: false }
      - { value: '$io->writeln(''<comment>Comment message</comment>'');', correct: true }
      - { value: '$io->note();', correct: false }
    help: |
      'https://symfony.com/doc/current/console/coloring.html#predefined-styles'
  - question: 'What is the purpose of `InputOption::VALUE_NONE`?'
    answers:
      - { value: 'The option requires a value, but it can be empty.', correct: false }
      - { value: 'The option is a boolean flag and does not take a value.', correct: true }
      - { value: 'The option is optional and does not have a default value.', correct: false }
      - { value: 'The option is an array of values.', correct: false }
    help: |
      'https://symfony.com/doc/current/components/console/console_arguments.html#defining-options'
  - question: 'How do you display a question message using the `<question>` tag in console output?'
    answers:
      - { value: '$output->writeln(''<question>Are you sure?</question>'');', correct: true }
      - { value: '$output->writeln(''[question]Are you sure?[/question]'');', correct: false }
      - { value: '$output->writeln(''{{ question }}Are you sure?{{ endquestion }}'');', correct: false }
      - { value: '$output->writeln(''<q>Are you sure?</q>'');', correct: false }
    help: |
      'https://symfony.com/doc/current/console/coloring.html#predefined-styles'
  - question: 'Which method of `SymfonyStyle` is used to display a warning message using the `<warning>` tag?'
    answers:
      - { value: '$io->warning();', correct: true }
      - { value: '$io->warn();', correct: false }
      - { value: '$io->alert();', correct: false }
      - { value: '$io->text(''<warning>Warning!</warning>'');', correct: false }
    help: |
      'https://symfony.com/doc/current/console/style.html#warning-messages'
  - question: 'What is the purpose of `InputOption::VALUE_IS_ARRAY`?'
    answers:
      - { value: 'The option can be specified multiple times to accept multiple values.', correct: true }
      - { value: 'The option must be an array of values.', correct: false }
      - { value: 'The option is a boolean flag.', correct: false }
      - { value: 'The option takes a single value, which is an array.', correct: false }
    help: |
      'https://symfony.com/doc/current/components/console/console_arguments.html#defining-options'
  - question: 'How do you display a success message using the `<info>` tag in console output?'
    answers:
      - { value: '$output->writeln(''<info>Success!</info>'');', correct: true }
      - { value: '$output->writeln(''[success]Success![/success]'');', correct: false }
      - { value: '$output->writeln(''{{ success }}Success!{{ endsuccess }}'');', correct: false }
      - { value: '$output->writeln(''<s/>Success!</s/>'');', correct: false }
    help: |
      'https://symfony.com/doc/current/console/coloring.html#predefined-styles'
  - question: 'Which method of `SymfonyStyle` is used to display an error message using the `<error>` tag?'
    answers:
      - { value: '$io->error();', correct: true }
      - { value: '$io->fail();', correct: false }
      - { value: '$io->exception();', correct: false }
      - { value: '$io->text(''<error>Error!</error>'');', correct: false }
    help: |
      'https://symfony.com/doc/current/console/style.html#error-messages'
  - question: 'What is the purpose of `InputArgument::REQUIRED` when defining an argument?'
    answers:
      - { value: 'The argument is optional.', correct: false }
      - { value: 'The argument must be present when the command is executed.', correct: true }
      - { value: 'The argument must have a default value.', correct: false }
      - { value: 'The argument is a boolean flag.', correct: false }
    help: |
      'https://symfony.com/doc/current/console/input.html#arguments'
  - question: 'How do you display an informational message using the `<info>` tag in console output?'
    answers:
      - { value: '$output->writeln(''<info>Information message</info>'');', correct: true }
      - { value: '$output->writeln(''[info]Information message[/info]'');', correct: false }
      - { value: '$output->writeln(''{{ info }}Information message{{ endinfo }}'');', correct: false }
      - { value: '$output->writeln(''<i/>Information message</i/>'');', correct: false }
    help: |
      'https://symfony.com/doc/current/console/coloring.html#predefined-styles'
  - question: 'Which method of `SymfonyStyle` is used to display a comment message using the `<comment>` tag?'
    answers:
      - { value: '$io->comment();', correct: false }
      - { value: '$io->text(''<comment>Comment message</comment>'');', correct: false }
      - { value: '$io->writeln(''<comment>Comment message</comment>'');', correct: true }
      - { value: '$io->note();', correct: false }
    help: |
      'https://symfony.com/doc/current/console/coloring.html#predefined-styles'
  - question: 'What is the purpose of `InputArgument::OPTIONAL` when defining an argument?'
    answers:
      - { value: 'The argument must be present.', correct: false }
      - { value: 'The argument is optional and can be omitted.', correct: true }
      - { value: 'The argument must have a default value.', correct: false }
      - { value: 'The argument is a boolean flag.', correct: false }
    help: |
      'https://symfony.com/doc/current/console/input.html#arguments'
  - question: 'How do you display a question message using the `<question>` tag in console output?'
    answers:
      - { value: '$output->writeln(''<question>Are you sure?</question>'');', correct: true }
      - { value: '$output->writeln(''[question]Are you sure?[/question]'');', correct: false }
      - { value: '$output->writeln(''{{ question }}Are you sure?{{ endquestion }}'');', correct: false }
      - { value: '$output->writeln(''<q>Are you sure?</q>'');', correct: false }
    help: |
      'https://symfony.com/doc/current/console/coloring.html#predefined-styles'
  - question: 'Which method of `SymfonyStyle` is used to display a warning message using the `<warning>` tag?'
    answers:
      - { value: '$io->warning();', correct: true }
      - { value: '$io->warn();', correct: false }
      - { value: '$io->alert();', correct: false }
      - { value: '$io->text(''<warning>Warning!</warning>'');', correct: false }
    help: |
      'https://symfony.com/doc/current/console/style.html#warning-messages'
  - question: 'What is the purpose of `InputOption::VALUE_REQUIRED` when defining an option?'
    answers:
      - { value: 'The option must be present, but its value is optional.', correct: false }
      - { value: 'The option must be present and must have a value.', correct: true }
      - { value: 'The option is optional, but if present, it must have a value.', correct: false }
      - { value: 'The option is a boolean flag and does not take a value.', correct: false }
    help: |
      'https://symfony.com/doc/current/components/console/console_arguments.html#defining-options'
  - question: 'How do you display a success message using the `<info>` tag in console output?'
    answers:
      - { value: '$output->writeln(''<info>Success!</info>'');', correct: true }
      - { value: '$output->writeln(''[success]Success![/success]'');', correct: false }
      - { value: '$output->writeln(''{{ success }}Success!{{ endsuccess }}'');', correct: false }
      - { value: '$output->writeln(''<s/>Success!</s/>'');', correct: false }
    help: |
      'https://symfony.com/doc/current/console/coloring.html#predefined-styles'
  - question: 'Which method of `SymfonyStyle` is used to display an error message using the `<error>` tag?'
    answers:
      - { value: '$io->error();', correct: true }
      - { value: '$io->fail();', correct: false }
      - { value: '$io->exception();', correct: false }
      - { value: '$io->text(''<error>Error!</error>'');', correct: false }
    help: |
      'https://symfony.com/doc/current/console/style.html#error-messages'
  - question: 'What is the purpose of `InputOption::VALUE_OPTIONAL`?'
    answers:
      - { value: 'The option must be present, but its value is optional.', correct: false }
      - { value: 'The option is optional, and if present, its value is also optional.', correct: true }
      - { value: 'The option is a boolean flag.', correct: false }
      - { value: 'The option is required and must have a value.', correct: false }
    help: |
      'https://symfony.com/doc/current/components/console/console_arguments.html#defining-options'
  - question: 'How do you display an informational message using the `<info>` tag in console output?'
    answers:
      - { value: '$output->writeln(''<info>Information message</info>'');', correct: true }
      - { value: '$output->writeln(''[info]Information message[/info]'');', correct: false }
      - { value: '$output->writeln(''{{ info }}Information message{{ endinfo }}'');', correct: false }
      - { value: '$output->writeln(''<i/>Information message</i/>'');', correct: false }
    help: |
      'https://symfony.com/doc/current/console/coloring.html#predefined-styles'
  - question: 'Which method of `SymfonyStyle` is used to display a comment message using the `<comment>` tag?'
    answers:
      - { value: '$io->comment();', correct: false }
      - { value: '$io->text(''<comment>Comment message</comment>'');', correct: false }
      - { value: '$io->writeln(''<comment>Comment message</comment>'');', correct: true }
      - { value: '$io->note();', correct: false }
    help: |
      'https://symfony.com/doc/current/console/coloring.html#predefined-styles'
  - question: 'What is the purpose of `InputOption::VALUE_NONE`?'
    answers:
      - { value: 'The option requires a value, but it can be empty.', correct: false }
      - { value: 'The option is a boolean flag and does not take a value.', correct: true }
      - { value: 'The option is optional and does not have a default value.', correct: false }
      - { value: 'The option is an array of values.', correct: false }
    help: |
      'https://symfony.com/doc/current/components/console/console_arguments.html#defining-options'
  - question: 'How do you display a question message using the `<question>` tag in console output?'
    answers:
      - { value: '$output->writeln(''<question>Are you sure?</question>'');', correct: true }
      - { value: '$output->writeln(''[question]Are you sure?[/question]'');', correct: false }
      - { value: '$output->writeln(''{{ question }}Are you sure?{{ endquestion }}'');', correct: false }
      - { value: '$output->writeln(''<q>Are you sure?</q>'');', correct: false }
    help: |
      'https://symfony.com/doc/current/console/coloring.html#predefined-styles'
  - question: 'Which method of `SymfonyStyle` is used to display a warning message using the `<warning>` tag?'
    answers:
      - { value: '$io->warning();', correct: true }
      - { value: '$io->warn();', correct: false }
      - { value: '$io->alert();', correct: false }
      - { value: '$io->text(''<warning>Warning!</warning>'');', correct: false }
    help: |
      'https://symfony.com/doc/current/console/style.html#warning-messages'
  - question: 'What is the purpose of `InputOption::VALUE_IS_ARRAY`?'
    answers:
      - { value: 'The option can be specified multiple times to accept multiple values.', correct: true }
      - { value: 'The option must be an array of values.', correct: false }
      - { value: 'The option is a boolean flag.', correct: false }
      - { value: 'The option takes a single value, which is an array.', correct: false }
    help: |
      'https://symfony.com/doc/current/components/console/console_arguments.html#defining-options'
  - question: 'How do you display a success message using the `<info>` tag in console output?'
    answers:
      - { value: '$output->writeln(''<info>Success!</info>'');', correct: true }
      - { value: '$output->writeln(''[success]Success![/success]'');', correct: false }
      - { value: '$output->writeln(''{{ success }}Success!{{ endsuccess }}'');', correct: false }
      - { value: '$output->writeln(''<s/>Success!</s/>'');', correct: false }
    help: |
      'https://symfony.com/doc/current/console/coloring.html#predefined-styles'
  - question: 'Which method of `SymfonyStyle` is used to display an error message using the `<error>` tag?'
    answers:
      - { value: '$io->error();', correct: true }
      - { value: '$io->fail();', correct: false }
      - { value: '$io->exception();', correct: false }
      - { value: '$io->text(''<error>Error!</error>'');', correct: false }
    help: |
      'https://symfony.com/doc/current/console/style.html#error-messages'
  - question: 'What is the purpose of `InputArgument::REQUIRED` when defining an argument?'
    answers:
      - { value: 'The argument is optional.', correct: false }
      - { value: 'The argument must be present when the command is executed.', correct: true }
      - { value: 'The argument must have a default value.', correct: false }
      - { value: 'The argument is a boolean flag.', correct: false }
    help: |
      'https://symfony.com/doc/current/console/input.html#arguments'
  - question: 'How do you display an informational message using the `<info>` tag in console output?'
    answers:
      - { value: '$output->writeln(''<info>Information message</info>'');', correct: true }
      - { value: '$output->writeln(''[info]Information message[/info]'');', correct: false }
      - { value: '$output->writeln(''{{ info }}Information message{{ endinfo }}'');', correct: false }
      - { value: '$output->writeln(''<i/>Information message</i/>'');', correct: false }
    help: |
      'https://symfony.com/doc/current/console/coloring.html#predefined-styles'
  - question: 'Which method of `SymfonyStyle` is used to display a comment message using the `<comment>` tag?'
    answers:
      - { value: '$io->comment();', correct: false }
      - { value: '$io->text(''<comment>Comment message</comment>'');', correct: false }
      - { value: '$io->writeln(''<comment>Comment message</comment>'');', correct: true }
      - { value: '$io->note();', correct: false }
    help: |
      'https://symfony.com/doc/current/console/coloring.html#predefined-styles'
  - question: 'What is the purpose of `InputArgument::OPTIONAL` when defining an argument?'
    answers:
      - { value: 'The argument must be present.', correct: false }
      - { value: 'The argument is optional and can be omitted.', correct: true }
      - { value: 'The argument must have a default value.', correct: false }
      - { value: 'The argument is a boolean flag.', correct: false }
    help: |
      'https://symfony.com/doc/current/console/input.html#arguments'
  - question: 'How do you display a question message using the `<question>` tag in console output?'
    answers:
      - { value: '$output->writeln(''<question>Are you sure?</question>'');', correct: true }
      - { value: '$output->writeln(''[question]Are you sure?[/question]'');', correct: false }
      - { value: '$output->writeln(''{{ question }}Are you sure?{{ endquestion }}'');', correct: false }
      - { value: '$output->writeln(''<q>Are you sure?</q>'');', correct: false }
    help: |
      'https://symfony.com/doc/current/console/coloring.html#predefined-styles'
  - question: 'Which method of `SymfonyStyle` is used to display a warning message using the `<warning>` tag?'
    answers:
      - { value: '$io->warning();', correct: true }
      - { value: '$io->warn();', correct: false }
      - { value: '$io->alert();', correct: false }
      - { value: '$io->text(''<warning>Warning!</warning>'');', correct: false }
    help: |
      'https://symfony.com/doc/current/console/style.html#warning-messages'
  - question: 'What is the purpose of `InputOption::VALUE_REQUIRED` when defining an option?'
    answers:
      - { value: 'The option must be present, but its value is optional.', correct: false }
      - { value: 'The option must be present and must have a value.', correct: true }
      - { value: 'The option is optional, but if present, it must have a value.', correct: false }
      - { value: 'The option is a boolean flag and does not take a value.', correct: false }
    help: |
      'https://symfony.com/doc/current/components/console/console_arguments.html#defining-options'
  - question: 'How do you display a success message using the `<info>` tag in console output?'
    answers:
      - { value: '$output->writeln(''<info>Success!</info>'');', correct: true }
      - { value: '$output->writeln(''[success]Success![/success]'');', correct: false }
      - { value: '$output->writeln(''{{ success }}Success!{{ endsuccess }}'');', correct: false }
      - { value: '$output->writeln(''<s/>Success!</s/>'');', correct: false }
    help: |
      'https://symfony.com/doc/current/console/coloring.html#predefined-styles'
  - question: 'Which method of `SymfonyStyle` is used to display an error message using the `<error>` tag?'
    answers:
      - { value: '$io->error();', correct: true }
      - { value: '$io->fail();', correct: false }
      - { value: '$io->exception();', correct: false }
      - { value: '$io->text(''<error>Error!</error>'');', correct: false }
    help: |
      'https://symfony.com/doc/current/console/style.html#error-messages'
  - question: 'What is the purpose of `InputOption::VALUE_OPTIONAL`?'
    answers:
      - { value: 'The option must be present, but its value is optional.', correct: false }
      - { value: 'The option is optional, and if present, its value is also optional.', correct: true }
      - { value: 'The option is a boolean flag.', correct: false }
      - { value: 'The option is required and must have a value.', correct: false }
    help: |
      'https://symfony.com/doc/current/components/console/console_arguments.html#defining-options'
  - question: 'How do you display an informational message using the `<info>` tag in console output?'
    answers:
      - { value: '$output->writeln(''<info>Information message</info>'');', correct: true }
      - { value: '$output->writeln(''[info]Information message[/info]'');', correct: false }
      - { value: '$output->writeln(''{{ info }}Information message{{ endinfo }}'');', correct: false }
      - { value: '$output->writeln(''<i/>Information message</i/>'');', correct: false }
    help: |
      'https://symfony.com/doc/current/console/coloring.html#predefined-styles'
  - question: 'Which method of `SymfonyStyle` is used to display a comment message using the `<comment>` tag?'
    answers:
      - { value: '$io->comment();', correct: false }
      - { value: '$io->text(''<comment>Comment message</comment>'');', correct: false }
      - { value: '$io->writeln(''<comment>Comment message</comment>'');', correct: true }
      - { value: '$io->note();', correct: false }
    help: |
      'https://symfony.com/doc/current/console/coloring.html#predefined-styles'
  - question: 'What is the purpose of `InputOption::VALUE_NONE`?'
    answers:
      - { value: 'The option requires a value, but it can be empty.', correct: false }
      - { value: 'The option is a boolean flag and does not take a value.', correct: true }
      - { value: 'The option is optional and does not have a default value.', correct: false }
      - { value: 'The option is an array of values.', correct: false }
    help: |
      'https://symfony.com/doc/current/components/console/console_arguments.html#defining-options'
  - question: 'How do you display a question message using the `<question>` tag in console output?'
    answers:
      - { value: '$output->writeln(''<question>Are you sure?</question>'');', correct: true }
      - { value: '$output->writeln(''[question]Are you sure?[/question]'');', correct: false }
      - { value: '$output->writeln(''{{ question }}Are you sure?{{ endquestion }}'');', correct: false }
      - { value: '$output->writeln(''<q>Are you sure?</q>'');', correct: false }
    help: |
      'https://symfony.com/doc/current/console/coloring.html#predefined-styles'
  - question: 'Which method of `SymfonyStyle` is used to display a warning message using the `<warning>` tag?'
    answers:
      - { value: '$io->warning();', correct: true }
      - { value: '$io->warn();', correct: false }
      - { value: '$io->alert();', correct: false }
      - { value: '$io->text(''<warning>Warning!</warning>'');', correct: false }
    help: |
      'https://symfony.com/doc/current/console/style.html#warning-messages'
  - question: 'What is the purpose of `InputOption::VALUE_IS_ARRAY`?'
    answers:
      - { value: 'The option can be specified multiple times to accept multiple values.', correct: true }
      - { value: 'The option must be an array of values.', correct: false }
      - { value: 'The option is a boolean flag.', correct: false }
      - { value: 'The option takes a single value, which is an array.', correct: false }
    help: |
      'https://symfony.com/doc/current/components/console/console_arguments.html#defining-options'
  - question: 'How do you display a success message using the `<info>` tag in console output?'
    answers:
      - { value: '$output->writeln(''<info>Success!</info>'');', correct: true }
      - { value: '$output->writeln(''[success]Success![/success]'');', correct: false }
      - { value: '$output->writeln(''{{ success }}Success!{{ endsuccess }}'');', correct: false }
      - { value: '$output->writeln(''<s/>Success!</s/>'');', correct: false }
    help: |
      'https://symfony.com/doc/current/console/coloring.html#predefined-styles'
  - question: 'Which method of `SymfonyStyle` is used to display an error message using the `<error>` tag?'
    answers:
      - { value: '$io->error();', correct: true }
      - { value: '$io->fail();', correct: false }
      - { value: '$io->exception();', correct: false }
      - { value: '$io->text(''<error>Error!</error>'');', correct: false }
    help: |
      'https://symfony.com/doc/current/console/style.html#error-messages'
  - question: 'What is the purpose of `InputArgument::REQUIRED` when defining an argument?'
    answers:
      - { value: 'The argument is optional.', correct: false }
      - { value: 'The argument must be present when the command is executed.', correct: true }
      - { value: 'The argument must have a default value.', correct: false }
      - { value: 'The argument is a boolean flag.', correct: false }
    help: |
      'https://symfony.com/doc/current/console/input.html#arguments'
  - question: 'How do you display an informational message using the `<info>` tag in console output?'
    answers:
      - { value: '$output->writeln(''<info>Information message</info>'');', correct: true }
      - { value: '$output->writeln(''[info]Information message[/info]'');', correct: false }
      - { value: '$output->writeln(''{{ info }}Information message{{ endinfo }}'');', correct: false }
      - { value: '$output->writeln(''<i/>Information message</i/>'');', correct: false }
    help: |
      'https://symfony.com/doc/current/console/coloring.html#predefined-styles'
  - question: 'Which method of `SymfonyStyle` is used to display a comment message using the `<comment>` tag?'
    answers:
      - { value: '$io->comment();', correct: false }
      - { value: '$io->text(''<comment>Comment message</comment>'');', correct: false }
      - { value: '$io->writeln(''<comment>Comment message</comment>'');', correct: true }
      - { value: '$io->note();', correct: false }
    help: |
      'https://symfony.com/doc/current/console/coloring.html#predefined-styles'
  - question: 'What is the purpose of `InputArgument::OPTIONAL` when defining an argument?'
    answers:
      - { value: 'The argument must be present.', correct: false }
      - { value: 'The argument is optional and can be omitted.', correct: true }
      - { value: 'The argument must have a default value.', correct: false }
      - { value: 'The argument is a boolean flag.', correct: false }
    help: |
      'https://symfony.com/doc/current/console/input.html#arguments'
  - question: 'How do you display a question message using the `<question>` tag in console output?'
    answers:
      - { value: '$output->writeln(''<question>Are you sure?</question>'');', correct: true }
      - { value: '$output->writeln(''[question]Are you sure?[/question]'');', correct: false }
      - { value: '$output->writeln(''{{ question }}Are you sure?{{ endquestion }}'');', correct: false }
      - { value: '$output->writeln(''<q>Are you sure?</q>'');', correct: false }
    help: |
      'https://symfony.com/doc/current/console/coloring.html#predefined-styles'
  - question: 'Which method of `SymfonyStyle` is used to display a warning message using the `<warning>` tag?'
    answers:
      - { value: '$io->warning();', correct: true }
      - { value: '$io->warn();', correct: false }
      - { value: '$io->alert();', correct: false }
      - { value: '$io->text(''<warning>Warning!</warning>'');', correct: false }
    help: |
      'https://symfony.com/doc/current/console/style.html#warning-messages'
  - question: 'What is the purpose of `InputOption::VALUE_REQUIRED` when defining an option?'
    answers:
      - { value: 'The option must be present, but its value is optional.', correct: false }
      - { value: 'The option must be present and must have a value.', correct: true }
      - { value: 'The option is optional, but if present, it must have a value.', correct: false }
      - { value: 'The option is a boolean flag and does not take a value.', correct: false }
    help: |
      'https://symfony.com/doc/current/components/console/console_arguments.html#defining-options'
  - question: 'How do you display a success message using the `<info>` tag in console output?'
    answers:
      - { value: '$output->writeln(''<info>Success!</info>'');', correct: true }
      - { value: '$output->writeln(''[success]Success![/success]'');', correct: false }
      - { value: '$output->writeln(''{{ success }}Success!{{ endsuccess }}'');', correct: false }
      - { value: '$output->writeln(''<s/>Success!</s/>'');', correct: false }
    help: |
      'https://symfony.com/doc/current/console/coloring.html#predefined-styles'
  - question: 'Which method of `SymfonyStyle` is used to display an error message using the `<error>` tag?'
    answers:
      - { value: '$io->error();', correct: true }
      - { value: '$io->fail();', correct: false }
      - { value: '$io->exception();', correct: false }
      - { value: '$io->text(''<error>Error!</error>'');', correct: false }
    help: |
      'https://symfony.com/doc/current/console/style.html#error-messages'
  - question: 'What is the purpose of `InputOption::VALUE_OPTIONAL`?'
    answers:
      - { value: 'The option must be present, but its value is optional.', correct: false }
      - { value: 'The option is optional, and if present, its value is also optional.', correct: true }
      - { value: 'The option is a boolean flag.', correct: false }
      - { value: 'The option is required and must have a value.', correct: false }
    help: |
      'https://symfony.com/doc/current/components/console/console_arguments.html#defining-options'
  - question: 'How do you display an informational message using the `<info>` tag in console output?'
    answers:
      - { value: '$output->writeln(''<info>Information message</info>'');', correct: true }
      - { value: '$output->writeln(''[info]Information message[/info]'');', correct: false }
      - { value: '$output->writeln(''{{ info }}Information message{{ endinfo }}'');', correct: false }
      - { value: '$output->writeln(''<i/>Information message</i/>'');', correct: false }
    help: |
      'https://symfony.com/doc/current/console/coloring.html#predefined-styles'
  - question: 'Which method of `SymfonyStyle` is used to display a comment message using the `<comment>` tag?'
    answers:
      - { value: '$io->comment();', correct: false }
      - { value: '$io->text(''<comment>Comment message</comment>'');', correct: false }
      - { value: '$io->writeln(''<comment>Comment message</comment>'');', correct: true }
      - { value: '$io->note();', correct: false }
    help: |
      'https://symfony.com/doc/current/console/coloring.html#predefined-styles'
  - question: 'What is the purpose of `InputOption::VALUE_NONE`?'
    answers:
      - { value: 'The option requires a value, but it can be empty.', correct: false }
      - { value: 'The option is a boolean flag and does not take a value.', correct: true }
      - { value: 'The option is optional and does not have a default value.', correct: false }
      - { value: 'The option is an array of values.', correct: false }
    help: |
      'https://symfony.com/doc/current/components/console/console_arguments.html#defining-options'
  - question: 'How do you display a question message using the `<question>` tag in console output?'
    answers:
      - { value: '$output->writeln(''<question>Are you sure?</question>'');', correct: true }
      - { value: '$output->writeln(''[question]Are you sure?[/question]'');', correct: false }
      - { value: '$output->writeln(''{{ question }}Are you sure?{{ endquestion }}'');', correct: false }
      - { value: '$output->writeln(''<q>Are you sure?</q>'');', correct: false }
    help: |
      'https://symfony.com/doc/current/console/coloring.html#predefined-styles'
  - question: 'Which method of `SymfonyStyle` is used to display a warning message using the `<warning>` tag?'
    answers:
      - { value: '$io->warning();', correct: true }
      - { value: '$io->warn();', correct: false }
      - { value: '$io->alert();', correct: false }
      - { value: '$io->text(''<warning>Warning!</warning>'');', correct: false }
    help: |
      'https://symfony.com/doc/current/console/style.html#warning-messages'
  - question: 'What is the purpose of `InputOption::VALUE_IS_ARRAY`?'
    answers:
      - { value: 'The option can be specified multiple times to accept multiple values.', correct: true }
      - { value: 'The option must be an array of values.', correct: false }
      - { value: 'The option is a boolean flag.', correct: false }
      - { value: 'The option takes a single value, which is an array.', correct: false }
    help: |
      'https://symfony.com/doc/current/components/console/console_arguments.html#defining-options'
  - question: 'How do you display a success message using the `<info>` tag in console output?'
    answers:
      - { value: '$output->writeln(''<info>Success!</info>'');', correct: true }
      - { value: '$output->writeln(''[success]Success![/success]'');', correct: false }
      - { value: '$output->writeln(''{{ success }}Success!{{ endsuccess }}'');', correct: false }
      - { value: '$output->writeln(''<s/>Success!</s/>'');', correct: false }
    help: |
      'https://symfony.com/doc/current/console/coloring.html#predefined-styles'
  - question: 'Which method of `SymfonyStyle` is used to display an error message using the `<error>` tag?'
    answers:
      - { value: '$io->error();', correct: true }
      - { value: '$io->fail();', correct: false }
      - { value: '$io->exception();', correct: false }
      - { value: '$io->text(''<error>Error!</error>'');', correct: false }
    help: |
      'https://symfony.com/doc/current/console/style.html#error-messages'
  - question: 'What is the purpose of `InputArgument::REQUIRED` when defining an argument?'
    answers:
      - { value: 'The argument is optional.', correct: false }
      - { value: 'The argument must be present when the command is executed.', correct: true }
      - { value: 'The argument must have a default value.', correct: false }
      - { value: 'The argument is a boolean flag.', correct: false }
    help: |
      'https://symfony.com/doc/current/console/input.html#arguments'
  - question: 'How do you display an informational message using the `<info>` tag in console output?'
    answers:
      - { value: '$output->writeln(''<info>Information message</info>'');', correct: true }
      - { value: '$output->writeln(''[info]Information message[/info]'');', correct: false }
      - { value: '$output->writeln(''{{ info }}Information message{{ endinfo }}'');', correct: false }
      - { value: '$output->writeln(''<i/>Information message</i/>'');', correct: false }
    help: |
      'https://symfony.com/doc/current/console/coloring.html#predefined-styles'
  - question: 'Which method of `SymfonyStyle` is used to display a comment message using the `<comment>` tag?'
    answers:
      - { value: '$io->comment();', correct: false }
      - { value: '$io->text(''<comment>Comment message</comment>'');', correct: false }
      - { value: '$io->writeln(''<comment>Comment message</comment>'');', correct: true }
      - { value: '$io->note();', correct: false }
    help: |
      'https://symfony.com/doc/current/console/coloring.html#predefined-styles'
  - question: 'What is the purpose of `InputArgument::OPTIONAL` when defining an argument?'
    answers:
      - { value: 'The argument must be present.', correct: false }
      - { value: 'The argument is optional and can be omitted.', correct: true }
      - { value: 'The argument must have a default value.', correct: false }
      - { value: 'The argument is a boolean flag.', correct: false }
    help: |
      'https://symfony.com/doc/current/console/input.html#arguments'
  - question: 'How do you display a question message using the `<question>` tag in console output?'
    answers:
      - { value: '$output->writeln(''<question>Are you sure?</question>'');', correct: true }
      - { value: '$output->writeln(''[question]Are you sure?[/question]'');', correct: false }
      - { value: '$output->writeln(''{{ question }}Are you sure?{{ endquestion }}'');', correct: false }
      - { value: '$output->writeln(''<q>Are you sure?</q>'');', correct: false }
    help: |
      'https://symfony.com/doc/current/console/coloring.html#predefined-styles'
  - question: 'Which method of `SymfonyStyle` is used to display a warning message using the `<warning>` tag?'
    answers:
      - { value: '$io->warning();', correct: true }
      - { value: '$io->warn();', correct: false }
      - { value: '$io->alert();', correct: false }
      - { value: '$io->text(''<warning>Warning!</warning>'');', correct: false }
    help: |
      'https://symfony.com/doc/current/console/style.html#warning-messages'
  - question: 'What is the purpose of `InputOption::VALUE_REQUIRED` when defining an option?'
    answers:
      - { value: 'The option must be present, but its value is optional.', correct: false }
      - { value: 'The option must be present and must have a value.', correct: true }
      - { value: 'The option is optional, but if present, it must have a value.', correct: false }
      - { value: 'The option is a boolean flag and does not take a value.', correct: false }
    help: |
      'https://symfony.com/doc/current/components/console/console_arguments.html#defining-options'
  - question: 'How do you display a success message using the `<info>` tag in console output?'
    answers:
      - { value: '$output->writeln(''<info>Success!</info>'');', correct: true }
      - { value: '$output->writeln(''[success]Success![/success]'');', correct: false }
      - { value: '$output->writeln(''{{ success }}Success!{{ endsuccess }}'');', correct: false }
      - { value: '$output->writeln(''<s/>Success!</s/>'');', correct: false }
    help: |
      'https://symfony.com/doc/current/console/coloring.html#predefined-styles'
  - question: 'Which method of `SymfonyStyle` is used to display an error message using the `<error>` tag?'
    answers:
      - { value: '$io->error();', correct: true }
      - { value: '$io->fail();', correct: false }
      - { value: '$io->exception();', correct: false }
      - { value: '$io->text(''<error>Error!</error>'');', correct: false }
    help: |
      'https://symfony.com/doc/current/console/style.html#error-messages'
  - question: 'What is the purpose of `InputOption::VALUE_OPTIONAL`?'
    answers:
      - { value: 'The option must be present, but its value is optional.', correct: false }
      - { value: 'The option is optional, and if present, its value is also optional.', correct: true }
      - { value: 'The option is a boolean flag.', correct: false }
      - { value: 'The option is required and must have a value.', correct: false }
    help: |
      'https://symfony.com/doc/current/components/console/console_arguments.html#defining-options'
  - question: 'How do you display an informational message using the `<info>` tag in console output?'
    answers:
      - { value: '$output->writeln(''<info>Information message</info>'');', correct: true }
      - { value: '$output->writeln(''[info]Information message[/info]'');', correct: false }
      - { value: '$output->writeln(''{{ info }}Information message{{ endinfo }}'');', correct: false }
      - { value: '$output->writeln(''<i/>Information message</i/>'');', correct: false }
    help: |
      'https://symfony.com/doc/current/console/coloring.html#predefined-styles'
  - question: 'Which method of `SymfonyStyle` is used to display a comment message using the `<comment>` tag?'
    answers:
      - { value: '$io->comment();', correct: false }
      - { value: '$io->text(''<comment>Comment message</comment>'');', correct: false }
      - { value: '$io->writeln(''<comment>Comment message</comment>'');', correct: true }
      - { value: '$io->note();', correct: false }
    help: |
      'https://symfony.com/doc/current/console/coloring.html#predefined-styles'
  - question: 'What is the purpose of `InputOption::VALUE_NONE`?'
    answers:
      - { value: 'The option requires a value, but it can be empty.', correct: false }
      - { value: 'The option is a boolean flag and does not take a value.', correct: true }
      - { value: 'The option is optional and does not have a default value.', correct: false }
      - { value: 'The option is an array of values.', correct: false }
    help: |
      'https://symfony.com/doc/current/components/console/console_arguments.html#defining-options'
  - question: 'How do you display a question message using the `<question>` tag in console output?'
    answers:
      - { value: '$output->writeln(''<question>Are you sure?</question>'');', correct: true }
      - { value: '$output->writeln(''[question]Are you sure?[/question]'');', correct: false }
      - { value: '$output->writeln(''{{ question }}Are you sure?{{ endquestion }}'');', correct: false }
      - { value: '$output->writeln(''<q>Are you sure?</q>'');', correct: false }
    help: |
      'https://symfony.com/doc/current/console/coloring.html#predefined-styles'
  - question: 'Which method of `SymfonyStyle` is used to display a warning message using the `<warning>` tag?'
    answers:
      - { value: '$io->warning();', correct: true }
      - { value: '$io->warn();', correct: false }
      - { value: '$io->alert();', correct: false }
      - { value: '$io->text(''<warning>Warning!</warning>'');', correct: false }
    help: |
      'https://symfony.com/doc/current/console/style.html#warning-messages'
  - question: 'What is the purpose of `InputOption::VALUE_IS_ARRAY`?'
    answers:
      - { value: 'The option can be specified multiple times to accept multiple values.', correct: true }
      - { value: 'The option must be an array of values.', correct: false }
      - { value: 'The option is a boolean flag.', correct: false }
      - { value: 'The option takes a single value, which is an array.', correct: false }
    help: |
      'https://symfony.com/doc/current/components/console/console_arguments.html#defining-options'
  - question: 'How do you display a success message using the `<info>` tag in console output?'
    answers:
      - { value: '$output->writeln(''<info>Success!</info>'');', correct: true }
      - { value: '$output->writeln(''[success]Success![/success]'');', correct: false }
      - { value: '$output->writeln(''{{ success }}Success!{{ endsuccess }}'');', correct: false }
      - { value: '$output->writeln(''<s/>Success!</s/>'');', correct: false }
    help: |
      'https://symfony.com/doc/current/console/coloring.html#predefined-styles'
  - question: 'Which method of `SymfonyStyle` is used to display an error message using the `<error>` tag?'
    answers:
      - { value: '$io->error();', correct: true }
      - { value: '$io->fail();', correct: false }
      - { value: '$io->exception();', correct: false }
      - { value: '$io->text(''<error>Error!</error>'');', correct: false }
    help: |
      'https://symfony.com/doc/current/console/style.html#error-messages'
  - question: 'What is the purpose of `InputArgument::REQUIRED` when defining an argument?'
    answers:
      - { value: 'The argument is optional.', correct: false }
      - { value: 'The argument must be present when the command is executed.', correct: true }
      - { value: 'The argument must have a default value.', correct: false }
      - { value: 'The argument is a boolean flag.', correct: false }
    help: |
      'https://symfony.com/doc/current/console/input.html#arguments'
  - question: 'How do you display an informational message using the `<info>` tag in console output?'
    answers:
      - { value: '$output->writeln(''<info>Information message</info>'');', correct: true }
      - { value: '$output->writeln(''[info]Information message[/info]'');', correct: false }
      - { value: '$output->writeln(''{{ info }}Information message{{ endinfo }}'');', correct: false }
      - { value: '$output->writeln(''<i/>Information message</i/>'');', correct: false }
    help: |
      'https://symfony.com/doc/current/console/coloring.html#predefined-styles'
  - question: 'Which method of `SymfonyStyle` is used to display a comment message using the `<comment>` tag?'
    answers:
      - { value: '$io->comment();', correct: false }
      - { value: '$io->text(''<comment>Comment message</comment>'');', correct: false }
      - { value: '$io->writeln(''<comment>Comment message</comment>'');', correct: true }
      - { value: '$io->note();', correct: false }
    help: |
      'https://symfony.com/doc/current/console/coloring.html#predefined-styles'
  - question: 'What is the purpose of `InputArgument::OPTIONAL` when defining an argument?'
    answers:
      - { value: 'The argument must be present.', correct: false }
      - { value: 'The argument is optional and can be omitted.', correct: true }
      - { value: 'The argument must have a default value.', correct: false }
      - { value: 'The argument is a boolean flag.', correct: false }
    help: |
      'https://symfony.com/doc/current/console/input.html#arguments'
  - question: 'How do you display a question message using the `<question>` tag in console output?'
    answers:
      - { value: '$output->writeln(''<question>Are you sure?</question>'');', correct: true }
      - { value: '$output->writeln(''[question]Are you sure?[/question]'');', correct: false }
      - { value: '$output->writeln(''{{ question }}Are you sure?{{ endquestion }}'');', correct: false }
      - { value: '$output->writeln(''<q>Are you sure?</q>'');', correct: false }
    help: |
      'https://symfony.com/doc/current/console/coloring.html#predefined-styles'
  - question: 'Which method of `SymfonyStyle` is used to display a warning message using the `<warning>` tag?'
    answers:
      - { value: '$io->warning();', correct: true }
      - { value: '$io->warn();', correct: false }
      - { value: '$io->alert();', correct: false }
      - { value: '$io->text(''<warning>Warning!</warning>'');', correct: false }
    help: |
      'https://symfony.com/doc/current/console/style.html#warning-messages'
  - question: 'What is the purpose of `InputOption::VALUE_REQUIRED` when defining an option?'
    answers:
      - { value: 'The option must be present, but its value is optional.', correct: false }
      - { value: 'The option must be present and must have a value.', correct: true }
      - { value: 'The option is optional, but if present, it must have a value.', correct: false }
      - { value: 'The option is a boolean flag and does not take a value.', correct: false }
    help: |
      'https://symfony.com/doc/current/components/console/console_arguments.html#defining-options'
  - question: 'How do you display a success message using the `<info>` tag in console output?'
    answers:
      - { value: '$output->writeln(''<info>Success!</info>'');', correct: true }
      - { value: '$output->writeln(''[success]Success![/success]'');', correct: false }
      - { value: '$output->writeln(''{{ success }}Success!{{ endsuccess }}'');', correct: false }
      - { value: '$output->writeln(''<s/>Success!</s/>'');', correct: false }
    help: |
      'https://symfony.com/doc/current/console/coloring.html#predefined-styles'
  - question: 'Which method of `SymfonyStyle` is used to display an error message using the `<error>` tag?'
    answers:
      - { value: '$io->error();', correct: true }
      - { value: '$io->fail();', correct: false }
      - { value: '$io->exception();', correct: false }
      - { value: '$io->text(''<error>Error!</error>'');', correct: false }
    help: |
      'https://symfony.com/doc/current/console/style.html#error-messages'
  - question: 'What is the purpose of `InputOption::VALUE_OPTIONAL`?'
    answers:
      - { value: 'The option must be present, but its value is optional.', correct: false }
      - { value: 'The option is optional, and if present, its value is also optional.', correct: true }
      - { value: 'The option is a boolean flag.', correct: false }
      - { value: 'The option is required and must have a value.', correct: false }
    help: |
      'https://symfony.com/doc/current/components/console/console_arguments.html#defining-options'
  - question: 'How do you display an informational message using the `<info>` tag in console output?'
    answers:
      - { value: '$output->writeln(''<info>Information message</info>'');', correct: true }
      - { value: '$output->writeln(''[info]Information message[/info]'');', correct: false }
      - { value: '$output->writeln(''{{ info }}Information message{{ endinfo }}'');', correct: false }
      - { value: '$output->writeln(''<i/>Information message</i/>'');', correct: false }
    help: |
      'https://symfony.com/doc/current/console/coloring.html#predefined-styles'
  - question: 'Which method of `SymfonyStyle` is used to display a comment message using the `<comment>` tag?'
    answers:
      - { value: '$io->comment();', correct: false }
      - { value: '$io->text(''<comment>Comment message</comment>'');', correct: false }
      - { value: '$io->writeln(''<comment>Comment message</comment>'');', correct: true }
      - { value: '$io->note();', correct: false }
    help: |
      'https://symfony.com/doc/current/console/coloring.html#predefined-styles'
  - question: 'What is the purpose of `InputOption::VALUE_NONE`?'
    answers:
      - { value: 'The option requires a value, but it can be empty.', correct: false }
      - { value: 'The option is a boolean flag and does not take a value.', correct: true }
      - { value: 'The option is optional and does not have a default value.', correct: false }
      - { value: 'The option is an array of values.', correct: false }
    help: |
      'https://symfony.com/doc/current/components/console/console_arguments.html#defining-options'
  - question: 'How do you display a question message using the `<question>` tag in console output?'
    answers:
      - { value: '$output->writeln(''<question>Are you sure?</question>'');', correct: true }
      - { value: '$output->writeln(''[question]Are you sure?[/question]'');', correct: false }
      - { value: '$output->writeln(''{{ question }}Are you sure?{{ endquestion }}'');', correct: false }
      - { value: '$output->writeln(''<q>Are you sure?</q>'');', correct: false }
    help: |
      'https://symfony.com/doc/current/console/coloring.html#predefined-styles'
  - question: 'Which method of `SymfonyStyle` is used to display a warning message using the `<warning>` tag?'
    answers:
      - { value: '$io->warning();', correct: true }
      - { value: '$io->warn();', correct: false }
      - { value: '$io->alert();', correct: false }
      - { value: '$io->text(''<warning>Warning!</warning>'');', correct: false }
    help: |
      'https://symfony.com/doc/current/console/style.html#warning-messages'
  - question: 'What is the purpose of `InputOption::VALUE_IS_ARRAY`?'
    answers:
      - { value: 'The option can be specified multiple times to accept multiple values.', correct: true }
      - { value: 'The option must be an array of values.', correct: false }
      - { value: 'The option is a boolean flag.', correct: false }
      - { value: 'The option takes a single value, which is an array.', correct: false }
    help: |
      'https://symfony.com/doc/current/components/console/console_arguments.html#defining-options'
  - question: 'How do you display a success message using the `<info>` tag in console output?'
    answers:
      - { value: '$output->writeln(''<info>Success!</info>'');', correct: true }
      - { value: '$output->writeln(''[success]Success![/success]'');', correct: false }
      - { value: '$output->writeln(''{{ success }}Success!{{ endsuccess }}'');', correct: false }
      - { value: '$output->writeln(''<s/>Success!</s/>'');', correct: false }
    help: |
      'https://symfony.com/doc/current/console/coloring.html#predefined-styles'
  - question: 'Which method of `SymfonyStyle` is used to display an error message using the `<error>` tag?'
    answers:
      - { value: '$io->error();', correct: true }
      - { value: '$io->fail();', correct: false }
      - { value: '$io->exception();', correct: false }
      - { value: '$io->text(''<error>Error!</error>'');', correct: false }
    help: |
      'https://symfony.com/doc/current/console/style.html#error-messages'
  - question: 'What is the purpose of `InputArgument::REQUIRED` when defining an argument?'
    answers:
      - { value: 'The argument is optional.', correct: false }
      - { value: 'The argument must be present when the command is executed.', correct: true }
      - { value: 'The argument must have a default value.', correct: false }
      - { value: 'The argument is a boolean flag.', correct: false }
    help: |
      'https://symfony.com/doc/current/console/input.html#arguments'
  - question: 'How do you display an informational message using the `<info>` tag in console output?'
    answers:
      - { value: '$output->writeln(''<info>Information message</info>'');', correct: true }
      - { value: '$output->writeln(''[info]Information message[/info]'');', correct: false }
      - { value: '$output->writeln(''{{ info }}Information message{{ endinfo }}'');', correct: false }
      - { value: '$output->writeln(''<i/>Information message</i/>'');', correct: false }
    help: |
      'https://symfony.com/doc/current/console/coloring.html#predefined-styles'
  - question: 'Which method of `SymfonyStyle` is used to display a comment message using the `<comment>` tag?'
    answers:
      - { value: '$io->comment();', correct: false }
      - { value: '$io->text(''<comment>Comment message</comment>'');', correct: false }
      - { value: '$io->writeln(''<comment>Comment message</comment>'');', correct: true }
      - { value: '$io->note();', correct: false }
    help: |
      'https://symfony.com/doc/current/console/coloring.html#predefined-styles'
  - question: 'What is the purpose of `InputArgument::OPTIONAL` when defining an argument?'
    answers:
      - { value: 'The argument must be present.', correct: false }
      - { value: 'The argument is optional and can be omitted.', correct: true }
      - { value: 'The argument must have a default value.', correct: false }
      - { value: 'The argument is a boolean flag.', correct: false }
    help: |
      'https://symfony.com/doc/current/console/input.html#arguments'
  - question: 'How do you display a question message using the `<question>` tag in console output?'
    answers:
      - { value: '$output->writeln(''<question>Are you sure?</question>'');', correct: true }
      - { value: '$output->writeln(''[question]Are you sure?[/question]'');', correct: false }
      - { value: '$output->writeln(''{{ question }}Are you sure?{{ endquestion }}'');', correct: false }
      - { value: '$output->writeln(''<q>Are you sure?</q>'');', correct: false }
    help: |
      'https://symfony.com/doc/current/console/coloring.html#predefined-styles'
  - question: 'Which method of `SymfonyStyle` is used to display a warning message using the `<warning>` tag?'
    answers:
      - { value: '$io->warning();', correct: true }
      - { value: '$io->warn();', correct: false }
      - { value: '$io->alert();', correct: false }
      - { value: '$io->text(''<warning>Warning!</warning>'');', correct: false }
    help: |
      'https://symfony.com/doc/current/console/style.html#warning-messages'
  - question: 'What is the purpose of `InputOption::VALUE_REQUIRED` when defining an option?'
    answers:
      - { value: 'The option must be present, but its value is optional.', correct: false }
      - { value: 'The option must be present and must have a value.', correct: true }
      - { value: 'The option is optional, but if present, it must have a value.', correct: false }
      - { value: 'The option is a boolean flag and does not take a value.', correct: false }
    help: |
      'https://symfony.com/doc/current/components/console/console_arguments.html#defining-options'
  - question: 'How do you display a success message using the `<info>` tag in console output?'
    answers:
      - { value: '$output->writeln(''<info>Success!</info>'');', correct: true }
      - { value: '$output->writeln(''[success]Success![/success]'');', correct: false }
      - { value: '$output->writeln(''{{ success }}Success!{{ endsuccess }}'');', correct: false }
      - { value: '$output->writeln(''<s/>Success!</s/>'');', correct: false }
    help: |
      'https://symfony.com/doc/current/console/coloring.html#predefined-styles'
  - question: 'Which method of `SymfonyStyle` is used to display an error message using the `<error>` tag?'
    answers:
      - { value: '$io->error();', correct: true }
      - { value: '$io->fail();', correct: false }
      - { value: '$io->exception();', correct: false }
      - { value: '$io->text(''<error>Error!</error>'');', correct: false }
    help: |
      'https://symfony.com/doc/current/console/style.html#error-messages'
```