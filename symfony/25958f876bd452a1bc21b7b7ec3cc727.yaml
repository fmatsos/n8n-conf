category: Controllers
questions:
  - question: 'Which of the following is the recommended way to define a controller in Symfony 7 using PHP attributes?'
    answers:
      - { value: 'A controller must extend `Symfony\Bundle\FrameworkBundle\Controller\Controller`.', correct: false }
      - { value: 'A controller class can implement `__invoke()` and be directly referenced in the route attribute.', correct: true }
      - { value: 'A controller method can be defined as a public method within any class, and its route defined using `#[Route]` attribute.', correct: true }
      - { value: 'Controllers are always defined as services and must implement `ControllerInterface`.', correct: false }
    help: |
      'https://symfony.com/doc/current/controller/service.html'
  - question: 'What is the primary benefit of extending `AbstractController` in Symfony?'
    answers:
      - { value: 'It automatically registers the controller as a private service.', correct: false }
      - { value: 'It provides convenient shortcut methods for common tasks like rendering templates, redirecting, and accessing services.', correct: true }
      - { value: 'It enforces a strict MVC pattern by separating business logic from presentation.', correct: false }
      - { value: 'It enables automatic serialization of response data to JSON.', correct: false }
    help: |
      'https://symfony.com/doc/current/book/page_creation.html#extending-the-base-controller-class'
  - question: 'How can you access the current `Request` object within a Symfony controller action method?'
    answers:
      - { value: 'By calling `$this->getRequest()`.', correct: false }
      - { value: 'By type-hinting `Symfony\Component\HttpFoundation\Request` as an argument in the action method.', correct: true }
      - { value: 'By accessing the global `$_REQUEST` superglobal.', correct: false }
      - { value: 'By injecting the `request_stack` service and calling `getCurrentRequest()`.', correct: false }
    help: |
      'https://symfony.com/doc/current/book/controller.html#request-and-response-objects'
  - question: 'Which of the following methods is used to render a Twig template from a Symfony controller that extends `AbstractController`?'
    answers:
      - { value: '$this->renderView(''template.html.twig'', $data);', correct: false }
      - { value: '$this->render(''template.html.twig'', $data);', correct: true }
      - { value: '$this->get(''twig'')->render(''template.html.twig'', $data);', correct: false }
      - { value: '$this->display(''template.html.twig'', $data);', correct: false }
    help: |
      'https://symfony.com/doc/current/controller.html#rendering-templates'
  - question: 'To add a flash message named "success" with the content "Item saved successfully!" in a Symfony controller, which code snippet is correct?'
    answers:
      - { value: '$this->get(''session'')->getFlashBag()->add(''success'', ''Item saved successfully!'');', correct: false }
      - { value: '$this->addFlash(''success'', ''Item saved successfully!'');', correct: true }
      - { value: '$this->session->addFlash(''success'', ''Item saved successfully!'');', correct: false }
      - { value: '$this->get(''flash_bag'')->add(''success'', ''Item saved successfully!'');', correct: false }
    help: |
      'https://symfony.com/doc/current/controller.html#flash-messages'
  - question: 'You need to redirect the user to the route named `app_homepage` after a successful form submission. Which method should you use in your controller?'
    answers:
      - { value: 'return $this->redirect(''app_homepage'');', correct: false }
      - { value: 'return $this->redirectToRoute(''app_homepage'');', correct: true }
      - { value: 'return new RedirectResponse($this->generateUrl(''app_homepage''));', correct: true }
      - { value: 'return $this->forward(''app_homepage'');', correct: false }
    help: |
      'https://symfony.com/doc/current/controller.html#redirecting'
  - question: 'How can you generate a 404 Not Found HTTP response from a Symfony controller when a resource is not found?'
    answers:
      - { value: 'return new Response(''Not Found'', 404);', correct: true }
      - { value: 'throw new \Symfony\Component\HttpKernel\Exception\NotFoundHttpException(''Resource not found'');', correct: true }
      - { value: 'return $this->createNotFoundException(''Resource not found'');', correct: true }
      - { value: 'return $this->render404();', correct: false }
    help: |
      'https://symfony.com/doc/current/controller.html#handling-404-pages'
  - question: 'Which attribute can be used to automatically map an uploaded file from the request to a `UploadedFile` object in a controller method argument?'
    answers:
      - { value: '`#[MapFile]`', correct: false }
      - { value: '`#[MapUploadedFile]`', correct: true }
      - { value: '`#[FileParam]`', correct: false }
      - { value: '`#[RequestFile]`', correct: false }
    help: |
      'https://symfony.com/doc/current/controller.html#uploading-files'
  - question: 'How does Symfony typically inject services into controller action methods?'
    answers:
      - { value: 'By manually calling `->get()` on the container within the action.', correct: false }
      - { value: 'Through constructor injection only.', correct: false }
      - { value: 'By type-hinting the service interface or class as an argument in the action method, leveraging autowiring.', correct: true }
      - { value: 'Services are not directly injected into action methods; they must be accessed via the `Request` object.', correct: false }
    help: |
      'https://symfony.com/doc/current/controller.html#injecting-services-into-controllers'
  - question: 'What is an "invokable controller" in Symfony, and how is it typically defined?'
    answers:
      - { value: 'A controller that implements the `InvokableControllerInterface`.', correct: false }
      - { value: 'A controller class that defines a public `__invoke()` method, allowing the class itself to be used as the controller.', correct: true }
      - { value: 'A controller method that can be called without any arguments.', correct: false }
      - { value: 'A controller that is configured to be called via an AJAX request only.', correct: false }
    help: |
      'https://symfony.com/doc/current/controller/service.html#invokable-controllers'
