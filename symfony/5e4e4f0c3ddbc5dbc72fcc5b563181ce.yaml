```yaml
category: Controllers
questions:
  - question: 'Which of the following is the recommended naming convention for a Symfony controller class?'
    answers:
      - { value: 'MyController.php', correct: false }
      - { value: 'MyAction.php', correct: false }
      - { value: 'MyBundleController.php', correct: false }
      - { value: 'MyController.php (e.g., App\\Controller\\MyController)', correct: true }
    help: |
      'https://symfony.com/doc/current/book/controller.html#controller-naming-conventions'
  - question: 'What is the typical naming convention for an action method within a Symfony controller?'
    answers:
      - { value: 'indexAction()', correct: false }
      - { value: 'index()', correct: true }
      - { value: 'doIndex()', correct: false }
      - { value: 'handleIndex()', correct: false }
    help: |
      'https://symfony.com/doc/current/book/controller.html#controller-naming-conventions'
  - question: 'How do you define an invokable controller in Symfony 7?'
    answers:
      - { value: 'By implementing the `__invoke()` method in the controller class.', correct: true }
      - { value: 'By extending `AbstractController` and overriding `handle()`.', correct: false }
      - { value: 'By adding a `#[Invokable]` attribute to the class.', correct: false }
      - { value: 'Invokable controllers are not supported in Symfony 7.', correct: false }
    help: |
      'https://symfony.com/doc/current/controller/service.html#invokable-controllers'
  - question: 'Which of the following is the correct way to configure a route for an invokable controller in YAML?'
    answers:
      - { value: 'controller: App\\Controller\\MyInvokableController::index', correct: false }
      - { value: 'controller: App\\Controller\\MyInvokableController', correct: true }
      - { value: 'action: App\\Controller\\MyInvokableController', correct: false }
      - { value: 'controller: [App\\Controller\\MyInvokableController, __invoke]', correct: false }
    help: |
      'https://symfony.com/doc/current/controller/service.html#invokable-controllers'
  - question: 'Which command is used to generate a new controller and its associated Twig template files in Symfony?'
    answers:
      - { value: 'php bin/console make:controller', correct: true }
      - { value: 'php bin/console generate:controller', correct: false }
      - { value: 'php bin/console create:controller', correct: false }
      - { value: 'php bin/console new:controller', correct: false }
    help: |
      'https://symfony.com/doc/current/book/controller.html#generating-a-controller'
  - question: 'What is the default namespace for controllers generated by Symfony Maker Bundle?'
    answers:
      - { value: 'App\\Controllers', correct: false }
      - { value: 'App\\Bundle\\Controller', correct: false }
      - { value: 'App\\Controller', correct: true }
      - { value: 'Symfony\\Controller', correct: false }
    help: |
      'https://symfony.com/doc/current/book/controller.html#creating-a-page'
  - question: 'Which of the following is the correct way to configure a route for a standard controller method in PHP attributes?'
    answers:
      - { value: '#[Route("/blog/{slug}", controller: "App\\Controller\\BlogController::show")]', correct: false }
      - { value: '#[Route("/blog/{slug}")] public function show(string $slug): Response { ... }', correct: true }
      - { value: '#[Path("/blog/{slug}")] public function show(string $slug): Response { ... }', correct: false }
      - { value: '#[Route(path: "/blog/{slug}", action: "show")]', correct: false }
    help: |
      'https://symfony.com/doc/current/controller.html#routing-and-controllers'
  - question: 'What is the primary benefit of extending `AbstractController` for your Symfony controllers?'
    answers:
      - { value: 'It automatically makes the controller a service.', correct: false }
      - { value: 'It provides convenient shortcut methods for common tasks like rendering templates, redirecting, and accessing services.', correct: true }
      - { value: 'It enforces strict type-hinting for all controller arguments.', correct: false }
      - { value: 'It enables automatic caching for all controller responses.', correct: false }
    help: |
      'https://symfony.com/doc/current/book/controller.html#the-base-abstractcontroller-class'
  - question: 'Which `AbstractController` method should you use to render a Twig template and return a `Response` object?'
    answers:
      - { value: 'renderView()', correct: false }
      - { value: 'display()', correct: false }
      - { value: 'render()', correct: true }
      - { value: 'showTemplate()', correct: false }
    help: |
      'https://symfony.com/doc/current/book/controller.html#rendering-templates'
  - question: 'How do you redirect to another route within a Symfony controller using `AbstractController`?'
    answers:
      - { value: 'return $this->redirect("route_name");', correct: false }
      - { value: 'return $this->redirectToRoute("route_name");', correct: true }
      - { value: 'return $this->forward("route_name");', correct: false }
      - { value: 'return $this->redirectRoute("route_name");', correct: false }
    help: |
      'https://symfony.com/doc/current/book/controller.html#redirecting'
  - question: 'Which `AbstractController` method is used to return a JSON response?'
    answers:
      - { value: 'jsonResponse()', correct: false }
      - { value: 'serializeJson()', correct: false }
      - { value: 'json()', correct: true }
      - { value: 'new JsonResponse()', correct: false }
    help: |
      'https://symfony.com/doc/current/controller.html#returning-json-response'
  - question: 'You need to serve a file for download from your controller. Which `AbstractController` helper method is most appropriate?'
    answers:
      - { value: 'download()', correct: false }
      - { value: 'stream()', correct: false }
      - { value: 'file()', correct: true }
      - { value: 'send()', correct: false }
    help: |
      'https://symfony.com/doc/current/controller.html#serving-files'
  - question: 'How do you add a flash message in a Symfony controller extending `AbstractController`?'
    answers:
      - { value: '$this->get("session")->getFlashBag()->add("success", "Message");', correct: false }
      - { value: '$this->addFlash("success", "Message");', correct: true }
      - { value: '$this->session->flash("success", "Message");', correct: false }
      - { value: '$this->getFlashBag()->add("success", "Message");', correct: false }
    help: |
      'https://symfony.com/doc/current/controller.html#flash-messages'
  - question: 'To generate a 404 Not Found page from an `AbstractController`, which method should you use?'
    answers:
      - { value: 'throw new HttpException(404, "Not Found");', correct: false }
      - { value: 'return new Response("Not Found", 404);', correct: false }
      - { value: 'throw $this->createNotFoundException("The resource was not found.");', correct: true }
      - { value: 'return $this->notFound();', correct: false }
    help: |
      'https://symfony.com/doc/current/book/controller.html#handling-404-pages'
  - question: 'Which `AbstractController` method allows you to check if the current user has a specific role or permission?'
    answers:
      - { value: 'isGranted()', correct: false }
      - { value: 'hasRole()', correct: false }
      - { value: 'denyAccessUnlessGranted()', correct: true }
      - { value: 'checkPermission()', correct: false }
    help: |
      'https://symfony.com/doc/current/security/voters.html#checking-for-access-in-the-controller'
  - question: 'How can you access a configuration parameter (e.g., `kernel.project_dir`) from within a controller extending `AbstractController`?'
    answers:
      - { value: '$this->container->getParameter("param_name");', correct: false }
      - { value: '$this->getParameter("param_name");', correct: true }
      - { value: '$this->get("parameter_bag")->get("param_name");', correct: false }
      - { value: '$_ENV["PARAM_NAME"]', correct: false }
    help: |
      'https://symfony.com/doc/current/controller.html#accessing-configuration-parameters'
  - question: 'What is the correct way to access the `Request` object in a Symfony controller action method?'
    answers:
      - { value: 'Globally via `$_REQUEST`', correct: false }
      - { value: 'By type-hinting `Symfony\\Component\\HttpFoundation\\Request` as an argument.', correct: true }
      - { value: 'By calling `$this->getRequest()` if extending `AbstractController`.', correct: false }
      - { value: 'By injecting it through the constructor without type-hinting.', correct: false }
    help: |
      'https://symfony.com/doc/current/book/controller.html#accessing-the-request'
  - question: 'Given a URL `/products?page=2&limit=10`, how would you retrieve the `page` query parameter in a controller?'
    answers:
      - { value: '$request->get("page");', correct: false }
      - { value: '$request->query->get("page");', correct: true }
      - { value: '$request->attributes->get("page");', correct: false }
      - { value: '$request->request->get("page");', correct: false }
    help: |
      'https://symfony.com/doc/current/book/controller.html#accessing-the-request'
  - question: 'Which attribute allows you to automatically map individual query parameters to controller arguments in Symfony 7?'
    answers:
      - { value: '#[MapQuery]', correct: false }
      - { value: '#[MapQueryParameter]', correct: true }
      - { value: '#[BindQuery]', correct: false }
      - { value: '#[QueryParam]', correct: false }
    help: |
      'https://symfony.com/doc/current/controller.html#mapping-query-parameters'
  - question: 'Consider the following controller action:
    ```php
    use Symfony\\Component\\HttpKernel\\Attribute\\MapQueryParameter;
    // ...
    public function search(#[MapQueryParameter] string $keyword, #[MapQueryParameter(name: "cat")] ?string $category = null): Response
    {
        // ...
    }
    ```
    Which URL would correctly map to this action, providing both `keyword` and `category`?'
    answers:
      - { value: '/search?keyword=symfony&category=web', correct: false }
      - { value: '/search?keyword=symfony&cat=web', correct: true }
      - { value: '/search?keyword=symfony&cat_name=web', correct: false }
      - { value: '/search?keyword=symfony', correct: false }
    help: |
      'https://symfony.com/doc/current/controller.html#mapping-query-parameters'
  - question: 'What is the purpose of the `#[MapQueryString]` attribute?'
    answers:
      - { value: 'To map a single query parameter to a DTO.', correct: false }
      - { value: 'To map the entire query string into a custom DTO as a single controller argument.', correct: true }
      - { value: 'To validate query parameters against a schema.', correct: false }
      - { value: 'To automatically convert query string values to specific PHP types.', correct: false }
    help: |
      'https://symfony.com/doc/current/book/controller.html#mapping-the-entire-query-string-to-a-dto'
  - question: 'Which attribute is used to map an incoming request payload (e.g., JSON or form data) to a Data Transfer Object (DTO) in a controller?'
    answers:
      - { value: '#[MapRequest]', correct: false }
      - { value: '#[MapPayload]', correct: false }
      - { value: '#[MapRequestPayload]', correct: true }
      - { value: '#[BindPayload]', correct: false }
    help: |
      'https://symfony.com/doc/current/book/controller.html#mapping-the-request-payload-to-a-dto'
  - question: 'How do you access route parameters (e.g., `{id}` in `/products/{id}`) within a controller action method?'
    answers:
      - { value: 'Via `$request->query->get("id")`', correct: false }
      - { value: 'Via `$request->attributes->get("id")`', correct: true }
      - { value: 'Via `$request->request->get("id")`', correct: false }
      - { value: 'Route parameters are automatically injected as method arguments by name.', correct: true }
    help: |
      'https://symfony.com/doc/current/book/controller.html#accessing-the-request'
  - question: 'What is the base class for all HTTP responses in Symfony?'
    answers:
      - { value: 'Symfony\\Component\\HttpFoundation\\HttpResponse', correct: false }
      - { value: 'Symfony\\Component\\HttpFoundation\\Response', correct: true }
      - { value: 'Symfony\\Component\\HttpKernel\\Response', correct: false }
      - { value: 'Symfony\\Component\\HttpFoundation\\WebResponse', correct: false }
    help: |
      'https://symfony.com/doc/current/components/http_foundation.html#response'
  - question: 'How do you set the HTTP status code for a `Response` object?'
    answers:
      - { value: '$response->setStatusCode(200);', correct: true }
      - { value: '$response->status = 200;', correct: false }
      - { value: '$response->setHttpCode(200);', correct: false }
      - { value: 'new Response("Content", 200);', correct: true }
    help: |
      'https://symfony.com/doc/current/components/http_foundation.html#response'
  - question: 'Which of the following is the correct way to create a `JsonResponse` in a controller?'
    answers:
      - { value: 'return new JsonResponse(["data" => "value"]);', correct: true }
      - { value: 'return $this->json(["data" => "value"]);', correct: true }
      - { value: 'return new Response(json_encode(["data" => "value"]), 200, ["Content-Type" => "application/json"]);', correct: false }
      - { value: 'return JsonResponse::create(["data" => "value"]);', correct: false }
    help: |
      'https://symfony.com/doc/current/controller.html#returning-json-response'
  - question: 'When should you use `BinaryFileResponse`?'
    answers:
      - { value: 'To return a binary string as response content.', correct: false }
      - { value: 'To serve a file directly from the filesystem for download or display.', correct: true }
      - { value: 'To stream large video files from a remote server.', correct: false }
      - { value: 'To handle file uploads from a form.', correct: false }
    help: |
      'https://symfony.com/doc/current/controller.html#serving-files'
  - question: 'What is the purpose of HTTP 103 Early Hints in Symfony?'
    answers:
      - { value: 'To send a redirect response before the main response.', correct: false }
      - { value: 'To allow the browser to prefetch critical assets (e.g., CSS, JS) while the server is still generating the main response.', correct: true }
      - { value: 'To indicate that the server is processing a long-running request.', correct: false }
      - { value: 'To inform the client about potential future redirects.', correct: false }
    help: |
      'https://symfony.com/doc/current/controller.html#sending-http-103-early-hints'
  - question: 'Which of the following HTTP headers are commonly used for caching control?'
    answers:
      - { value: 'Cache-Control', correct: true }
      - { value: 'Expires', correct: true }
      - { value: 'Pragma', correct: true }
      - { value: 'Content-Type', correct: false }
    help: |
      'https://symfony.com/doc/current/http_cache.html#http-cache-headers'
  - question: 'How do you set a cookie on a `Response` object in Symfony?'
    answers:
      - { value: '$response->headers->setCookie(new Cookie("name", "value"));', correct: true }
      - { value: '$response->setCookie("name", "value");', correct: false }
      - { value: '$response->cookies->add("name", "value");', correct: false }
      - { value: '$response->addCookie("name", "value");', correct: false }
    help: |
      'https://symfony.com/doc/current/components/http_foundation.html#cookies'
  - question: 'How do you retrieve a cookie named `my_cookie` from the `Request` object?'
    answers:
      - { value: '$request->getCookie("my_cookie");', correct: false }
      - { value: '$request->cookies->get("my_cookie");', correct: true }
      - { value: '$request->headers->get("Cookie")["my_cookie"];', correct: false }
      - { value: '$request->query->get("my_cookie");', correct: false }
    help: |
      'https://symfony.com/doc/current/components/http_foundation.html#cookies'
  - question: 'Which option should you set on a cookie to make it accessible only via HTTP(S) requests and not via client-side JavaScript?'
    answers:
      - { value: 'secure', correct: false }
      - { value: 'httponly', correct: true }
      - { value: 'samesite', correct: false }
      - { value: 'domain', correct: false }
    help: |
      'https://symfony.com/doc/current/components/http_foundation.html#cookies'
  - question: 'To delete a cookie, what is the recommended approach in Symfony?'
    answers:
      - { value: 'Set its expiration date to a past time.', correct: true }
      - { value: 'Call `$response->headers->removeCookie("name");`.', correct: false }
      - { value: 'Set its value to an empty string.', correct: false }
      - { value: 'Use `unset($_COOKIE["name"]);`.', correct: false }
    help: |
      'https://symfony.com/doc/current/components/http_foundation.html#cookies'
  - question: 'How do you access the session object within a Symfony controller action?'
    answers:
      - { value: 'By calling `$this->getSession()` from `AbstractController`.', correct: false }
      - { value: 'By type-hinting `Symfony\\Component\\HttpFoundation\\Session\\SessionInterface` in the method arguments.', correct: true }
      - { value: 'By calling `$request->getSession()`.', correct: true }
      - { value: 'By accessing the global `$_SESSION` variable.', correct: false }
    help: |
      'https://symfony.com/doc/current/session.html#accessing-the-session'
  - question: 'Which of the following is the correct way to store a value in the session?'
    answers:
      - { value: '$session->set("key", "value");', correct: true }
      - { value: '$_SESSION["key"] = "value";', correct: false }
      - { value: '$session->add("key", "value");', correct: false }
      - { value: '$session->put("key", "value");', correct: false }
    help: |
      'https://symfony.com/doc/current/session.html#storing-data-in-the-session'
  - question: 'How do you retrieve a value named `user_id` from the session, providing a default value of `null` if it does not exist?'
    answers:
      - { value: '$session->get("user_id", null);', correct: true }
      - { value: '$session->find("user_id") ?: null;', correct: false }
      - { value: '$session->pull("user_id");', correct: false }
      - { value: '$session->has("user_id") ? $session->get("user_id") : null;', correct: false }
    help: |
      'https://symfony.com/doc/current/session.html#storing-data-in-the-session'
  - question: 'What happens when you call `$session->invalidate()`?'
    answers:
      - { value: 'It removes all attributes from the session but keeps the session ID.', correct: false }
      - { value: 'It destroys the session and generates a new session ID.', correct: true }
      - { value: 'It marks the session as expired, but it remains active until the browser closes.', correct: false }
      - { value: 'It logs out the user without affecting session data.', correct: false }
    help: |
      'https://symfony.com/doc/current/session.html#invalidating-a-session'
  - question: 'Which method is used to check if a specific attribute exists in the session?'
    answers:
      - { value: '$session->exists("key");', correct: false }
      - { value: '$session->has("key");', correct: true }
      - { value: '$session->isset("key");', correct: false }
      - { value: '$session->get("key") !== null;', correct: false }
    help: |
      'https://symfony.com/doc/current/session.html#storing-data-in-the-session'
  - question: 'After adding a flash message with `$this->addFlash("success", "Item added!");`, how can you retrieve it in a Twig template?'
    answers:
      - { value: '{{ app.session.flash.success }}', correct: false }
      - { value: '{{ app.flashes("success") }}', correct: true }
      - { value: '{{ app.session.getFlashBag().get("success") }}', correct: false }
      - { value: '{{ flash("success") }}', correct: false }
    help: |
      'https://symfony.com/doc/current/controller.html#flash-messages'
  - question: 'What is the main characteristic of flash messages in Symfony?'
    answers:
      - { value: 'They persist across multiple requests until explicitly cleared.', correct: false }
      - { value: 'They are stored in cookies and automatically expire after 24 hours.', correct: false }
      - { value: 'They are stored in the session and are automatically cleared after being retrieved once.', correct: true }
      - { value: 'They are only visible on the page where they were added.', correct: false }
    help: |
      'https://symfony.com/doc/current/controller.html#flash-messages'
  - question: 'Which of the following are valid types for flash messages in Symfony?'
    answers:
      - { value: 'success', correct: true }
      - { value: 'error', correct: true }
      - { value: 'warning', correct: true }
      - { value: 'info', correct: true }
    help: |
      'https://symfony.com/doc/current/controller.html#flash-messages'
  - question: 'You want to redirect the user to the `homepage` route with an HTTP 301 Permanent Redirect. Which code snippet is correct?'
    answers:
      - { value: 'return $this->redirectToRoute("homepage", [], 301);', correct: true }
      - { value: 'return $this->redirect("homepage", 301);', correct: false }
      - { value: 'return $this->redirectToRoute("homepage", [], Response::HTTP_MOVED_PERMANENTLY);', correct: true }
      - { value: 'return new RedirectResponse($this->generateUrl("homepage"), 301);', correct: true }
    help: |
      'https://symfony.com/doc/current/book/controller.html#redirecting'
  - question: 'How do you redirect to an external URL (e.g., `https://example.com`) from a Symfony controller?'
    answers:
      - { value: 'return $this->redirectToRoute("https://example.com");', correct: false }
      - { value: 'return $this->redirect("https://example.com");', correct: true }
      - { value: 'return new ExternalRedirectResponse("https://example.com");', correct: false }
      - { value: 'return $this->redirectUrl("https://example.com");', correct: false }
    help: |
      'https://symfony.com/doc/current/book/controller.html#redirecting'
  - question: 'You want to redirect to a route with parameters, for example, `app_product_show` with `id=123`. Which is the correct way?'
    answers:
      - { value: 'return $this->redirectToRoute("app_product_show", ["id" => 123]);', correct: true }
      - { value: 'return $this->redirectToRoute("app_product_show/123");', correct: false }
      - { value: 'return $this->redirect("app_product_show", ["id" => 123]);', correct: false }
      - { value: 'return $this->generateUrl("app_product_show", ["id" => 123])->redirect();', correct: false }
    help: |
      'https://symfony.com/doc/current/book/controller.html#redirecting'
  - question: 'What is the purpose of `Response::HTTP_SEE_OTHER` (303) status code in a redirect?'
    answers:
      - { value: 'It indicates a temporary redirect, and the client should continue to use the original URI for future requests.', correct: false }
      - { value: 'It indicates that the response to the request can be found under another URI and should be retrieved using a GET method regardless of the original request method.', correct: true }
      - { value: 'It indicates a permanent redirect, and the client should update its bookmarks.', correct: false }
      - { value: 'It indicates that the resource has been moved temporarily, and the client should not change the request method.', correct: false }
    help: |
      'https://symfony.com/doc/current/book/controller.html#redirecting'
  - question: 'You want to redirect to the current route while preserving all original query string parameters. Which approach is correct?'
    answers:
      - { value: 'return $this->redirectToRoute($request->attributes->get("_route"), $request->query->all());', correct: true }
      - { value: 'return $this->redirect($request->getUri());', correct: false }
      - { value: 'return $this->redirectToRoute($request->get("_route"), $request->query->all());', correct: false }
      - { value: 'return $this->redirect($request->getPathInfo() . "?" . $request->getQueryString());', correct: false }
    help: |
      'https://symfony.com/doc/current/book/controller.html#redirecting'
  - question: 'What is the main difference between `redirectToRoute()` and `forward()` in a Symfony controller?'
    answers:
      - { value: '`redirectToRoute()` performs an HTTP redirect (client-side), while `forward()` performs an internal sub-request (server-side).', correct: true }
      - { value: '`redirectToRoute()` is for external URLs, `forward()` is for internal routes.', correct: false }
      - { value: '`redirectToRoute()` returns a `Response`, `forward()` returns a `RedirectResponse`.', correct: false }
      - { value: '`forward()` is deprecated in Symfony 7, use `redirectToRoute()` instead.', correct: false }
    help: |
      'https://symfony.com/doc/current/controller/forwarding.html#forwarding-to-another-controller'
  - question: 'When using `forward()`, how are arguments passed to the target controller?'
    answers:
      - { value: 'As query parameters in the URL.', correct: false }
      - { value: 'As an associative array, which become the arguments for the target controller method.', correct: true }
      - { value: 'They are automatically inherited from the original request.', correct: false }
      - { value: 'Via session attributes.', correct: false }
    help: |
      'https://symfony.com/doc/current/controller/forwarding.html#forwarding-to-another-controller'
  - question: 'What is the return type of the `forward()` method?'
    answers:
      - { value: '`void`', correct: false }
      - { value: '`RedirectResponse`', correct: false }
      - { value: '`Response`', correct: true }
      - { value: '`null`', correct: false }
    help: |
      'https://symfony.com/doc/current/controller/forwarding.html#forwarding-to-another-controller'
  - question: 'When would you typically use `forward()` instead of `redirectToRoute()`?'
    answers:
      - { value: 'When you want to display content from another controller without changing the URL in the browser.', correct: true }
      - { value: 'When you need to send the user to an entirely different domain.', correct: false }
      - { value: 'When you want to perform a POST-Redirect-GET pattern.', correct: false }
      - { value: 'When you want to trigger a full HTTP request cycle for the sub-controller.', correct: false }
    help: |
      'https://symfony.com/doc/current/controller/forwarding.html#forwarding-to-another-controller'
  - question: 'Which exception should you throw in a Symfony controller to generate a 404 Not Found response?'
    answers:
      - { value: '`Symfony\\Component\\HttpKernel\\Exception\\HttpException`', correct: false }
      - { value: '`Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException`', correct: true }
      - { value: '`Symfony\\Component\\Routing\\Exception\\ResourceNotFoundException`', correct: false }
      - { value: '`Symfony\\Component\\HttpFoundation\\Exception\\NotFoundException`', correct: false }
    help: |
      'https://symfony.com/doc/current/book/controller.html#handling-404-pages'
  - question: 'What is the purpose of `createNotFoundException()` helper method in `AbstractController`?'
    answers:
      - { value: 'It creates a `Response` object with a 404 status code.', correct: false }
      - { value: 'It throws a `NotFoundHttpException` with a given message.', correct: true }
      - { value: 'It logs a 404 error to the system logs.', correct: false }
      - { value: 'It redirects the user to a custom 404 error page.', correct: false }
    help: |
      'https://symfony.com/doc/current/book/controller.html#handling-404-pages'
  - question: 'Where can you configure a custom error controller in Symfony?'
    answers:
      - { value: 'In `config/packages/framework.yaml` under `framework.error_controller`.', correct: true }
      - { value: 'In `config/routes.yaml` with a special `_error` route.', correct: false }
      - { value: 'By overriding the `handleException` method in `Kernel.php`.', correct: false }
      - { value: 'Symfony automatically detects `ErrorController.php` in `src/Controller`.', correct: false }
    help: |
      'https://symfony.com/doc/current/controller/error_pages.html#customizing-the-error-page'
  - question: 'When a user uploads a file via a form, how do you access the uploaded file in your controller action?'
    answers:
      - { value: 'Via `$_FILES` global array.', correct: false }
      - { value: 'Via `$request->files->get("form_field_name")`, which returns an `UploadedFile` object.', correct: true }
      - { value: 'Via `$request->request->get("form_field_name")`, which returns the file content.', correct: false }
      - { value: 'Uploaded files are automatically moved to a temporary directory and their paths are available in `$request->query`.', correct: false }
    help: |
      'https://symfony.com/doc/current/controller.html#uploading-files'
  - question: 'Which method of the `UploadedFile` object is used to move the uploaded file to its final destination?'
    answers:
      - { value: 'save()', correct: false }
      - { value: 'moveTo()', correct: true }
      - { value: 'store()', correct: false }
      - { value: 'copyTo()', correct: false }
    help: |
      'https://symfony.com/doc/current/controller.html#uploading-files'
  - question: 'What is the purpose of the `#[MapUploadedFile]` attribute in a controller argument?'
    answers:
      - { value: 'To automatically move the uploaded file to a predefined directory.', correct: false }
      - { value: 'To automatically inject an `UploadedFile` object for a specific form field into the controller method.', correct: true }
      - { value: 'To validate the uploaded file against size and type constraints.', correct: false }
      - { value: 'To convert the uploaded file content into a string.', correct: false }
    help: |
      'https://symfony.com/doc/current/controller.html#mapping-uploaded-files'
  - question: 'If you use `#[MapUploadedFile]` for a required file upload, and no file is submitted, what will Symfony do?'
    answers:
      - { value: 'The argument will be `null`.', correct: false }
      - { value: 'A `NotFoundHttpException` will be thrown.', correct: false }
      - { value: 'An `HttpException` will be thrown.', correct: true }
      - { value: 'A validation error will be added to the form.', correct: false }
    help: |
      'https://symfony.com/doc/current/controller.html#mapping-uploaded-files'
  - question: 'How can you embed the output of another controller directly into a Twig template?'
    answers:
      - { value: 'Using `{{ include("route_name") }}`', correct: false }
      - { value: 'Using `{{ render(path("route_name")) }}` or `{{ render(controller("App\\\\Controller\\\\MyController::action")) }}`', correct: true }
      - { value: 'Using `{{ embed_controller("route_name") }}`', correct: false }
      - { value: 'By making an AJAX request from the Twig template.', correct: false }
    help: |
      'https://symfony.com/doc/current/templates.html#embedding-controllers'
  - question: 'What is the special routing attribute used to define the controller for a given route?'
    answers:
      - { value: '`_handler`', correct: false }
      - { value: '`_controller`', correct: true }
      - { value: '`_action`', correct: false }
      - { value: '`_callback`', correct: false }
    help: |
      'https://symfony.com/doc/current/create_framework/http_kernel_controller_resolver.html#update-route-definition-with-string-controller-callback'
  - question: 'Which component is responsible for resolving a PHP callable controller from a `Request` object in Symfony?'
    answers:
      - { value: '`Router`', correct: false }
      - { value: '`ControllerResolver`', correct: true }
      - { value: '`HttpKernel`', correct: false }
      - { value: '`EventDispatcher`', correct: false }
    help: |
      'https://symfony.com/doc/current/create_framework/http_kernel_controller_resolver.html#integrate-httpkernel-controller-and-argument-resolvers'
  - question: 'What is the primary role of Argument Value Resolvers in Symfony?'
    answers:
      - { value: 'To convert HTTP request parameters into the correct PHP types for controller arguments.', correct: true }
      - { value: 'To validate controller arguments against predefined constraints.', correct: false }
      - { value: 'To determine which controller method should be executed for a given request.', correct: false }
      - { value: 'To handle exceptions thrown by controller actions.', correct: false }
    help: |
      'https://symfony.com/doc/current/book/controller.html#argument-value-resolvers'
  - question: 'If a controller action method has an argument type-hinted with `Psr\\Log\\LoggerInterface`, how does Symfony typically provide the instance?'
    answers:
      - { value: 'It creates a new instance of `LoggerInterface` for each request.', correct: false }
      - { value: 'It automatically injects the `logger` service from the service container.', correct: true }
      - { value: 'It expects the developer to manually instantiate the logger before calling the controller.', correct: false }
      - { value: 'It uses a factory method defined in the controller itself.', correct: false }
    help: |
      'https://symfony.com/doc/current/controller.html#injecting-services-into-controllers'
  - question: 'Consider the route `/products/{id}` and a controller action `public function show(int $id): Response`. How is the `$id` argument populated?'
    answers:
      - { value: 'Symfony automatically matches the route parameter `{id}` to the `$id` argument by name and type.', correct: true }
      - { value: 'You must manually retrieve `$request->attributes->get("id")` and cast it to `int`.', correct: false }
      - { value: 'The `$id` is retrieved from the query string.', correct: false }
      - { value: 'This setup will result in an error because route parameters are not automatically injected.', correct: false }
    help: |
      'https://symfony.com/doc/current/create_framework/http_kernel_controller_resolver.html#controller-method-signature-for-request-attribute-injection'
  - question: 'If a controller argument has a default value (e.g., `public function index(int $page = 1): Response`), what happens if the corresponding route parameter or query parameter is not provided?'
    answers:
      - { value: 'Symfony will throw an error because the argument is missing.', correct: false }
      - { value: 'The default value (`1` in this case) will be used for the argument.', correct: true }
      - { value: 'The argument will be `null`.', correct: false }
      - { value: 'Symfony will redirect to a page indicating a missing parameter.', correct: false }
    help: |
      'https://symfony.com/doc/current/create_framework/http_kernel_controller_resolver.html#controller-method-signature-with-default-parameter-value'
  - question: 'Which of the following attributes can be used to automatically map request data to controller arguments?'
    answers:
      - { value: '#[MapQueryParameter]', correct: true }
      - { value: '#[MapQueryString]', correct: true }
      - { value: '#[MapRequestPayload]', correct: true }
      - { value: '#[MapUploadedFile]', correct: true }
    help: |
      'https://symfony.com/doc/current/book/controller.html#argument-value-resolvers'
  - question: 'What is the purpose of the `#[AsController]` attribute?'
    answers:
      - { value: 'To mark a class as a controller, enabling autowiring and autoconfiguration as a service.', correct: true }
      - { value: 'To define the default route for an invokable controller.', correct: false }
      - { value: 'To explicitly define the controller service ID.', correct: false }
      - { value: 'To prevent the controller from being autowired.', correct: false }
    help: |
      'https://symfony.com/doc/current/controller/service.html#defining-controllers-as-services'
  - question: 'Which of the following is a valid way to define a controller as a service in Symfony 7, assuming default configurations?'
    answers:
      - { value: 'By placing the controller class in `src/Controller/` and ensuring `config/services.yaml` includes `App\\Controller:` resource.', correct: true }
      - { value: 'By manually defining the controller as a service in `services.yaml` without `_defaults` or `resource`.', correct: false }
      - { value: 'By adding `@Service` annotation to the controller class.', correct: false }
      - { value: 'Controllers are not services by default; they must be explicitly configured.', correct: false }
    help: |
      'https://symfony.com/doc/current/controller/service.html#defining-controllers-as-services'
  - question: 'What is the recommended way to get the `RequestStack` service in a controller if not extending `AbstractController`?'
    answers:
      - { value: 'Type-hint `RequestStack` in the controller constructor or action method.', correct: true }
      - { value: 'Call `$this->container->get("request_stack");`', correct: false }
      - { value: 'Access it globally via `Symfony\\Component\\HttpFoundation\\RequestStack::getInstance();`', correct: false }
      - { value: 'It is not possible to get `RequestStack` outside of `AbstractController`.', correct: false }
    help: |
      'https://symfony.com/doc/current/service_container.html#injecting-services-into-controllers'
  - question: 'Which of the following is NOT a built-in argument value resolver in Symfony?'
    answers:
      - { value: 'RequestAttributeValueResolver', correct: false }
      - { value: 'ServiceValueResolver', correct: false }
      - { value: 'FormValueResolver', correct: true }
      - { value: 'DateTimeValueResolver', correct: false }
    help: |
      'https://symfony.com/doc/current/controller/argument_value_resolvers.html#built-in-argument-value-resolvers'
  - question: 'What is the purpose of the `#[Route]` attribute on a controller method?'
    answers:
      - { value: 'To define the URL path, HTTP methods, and other routing options for that method.', correct: true }
      - { value: 'To mark the method as a public API endpoint.', correct: false }
      - { value: 'To specify the Twig template to be rendered by the method.', correct: false }
      - { value: 'To automatically inject services into the method arguments.', correct: false }
    help: |
      'https://symfony.com/doc/current/controller.html#routing-and-controllers'
  - question: 'When creating a new `Response` object, what is the default HTTP status code if not explicitly set?'
    answers:
      - { value: '201 Created', correct: false }
      - { value: '200 OK', correct: true }
      - { value: '204 No Content', correct: false }
      - { value: '302 Found', correct: false }
    help: |
      'https://symfony.com/doc/current/components/http_foundation.html#response'
  - question: 'How can you set a custom HTTP header (e.g., `X-Custom-Header`) on a `Response` object?'
    answers:
      - { value: '$response->headers->set("X-Custom-Header", "value");', correct: true }
      - { value: '$response->setHeader("X-Custom-Header", "value");', correct: false }
      - { value: '$response->addHeader("X-Custom-Header", "value");', correct: false }
      - { value: '$response->set("X-Custom-Header", "value");', correct: false }
    help: |
      'https://symfony.com/doc/current/components/http_foundation.html#response'
  - question: 'Which of the following is true about the `Request` object in Symfony?'
    answers:
      - { value: 'It is a global object accessible from anywhere in the application.', correct: false }
      - { value: 'It encapsulates all information from the HTTP request, including headers, query parameters, and body content.', correct: true }
      - { value: 'It is immutable, meaning its state cannot be changed after creation.', correct: false }
      - { value: 'It is automatically created by the web server and passed to Symfony.', correct: false }
    help: |
      'https://symfony.com/doc/current/components/http_foundation.html#request'
  - question: 'What is the purpose of `Request::isMethod("POST")`?'
    answers:
      - { value: 'To check if the request method is exactly POST.', correct: true }
      - { value: 'To check if the request method is POST or PUT.', correct: false }
      - { value: 'To set the request method to POST.', correct: false }
      - { value: 'To determine if the request contains form data.', correct: false }
    help: |
      'https://symfony.com/doc/current/components/http_foundation.html#request'
  - question: 'How do you retrieve data from a submitted HTML form (POST request body) in a Symfony controller?'
    answers:
      - { value: '$request->query->get("field_name");', correct: false }
      - { value: '$request->request->get("field_name");', correct: true }
      - { value: '$request->get("field_name");', correct: false }
      - { value: '$request->attributes->get("field_name");', correct: false }
    help: |
      'https://symfony.com/doc/current/components/http_foundation.html#request'
  - question: 'Which of the following is the most secure way to handle sensitive data in cookies?'
    answers:
      - { value: 'Storing encrypted data in the cookie and decrypting it on the server.', correct: true }
      - { value: 'Using the `secure` cookie option to ensure transmission over HTTPS.', correct: true }
      - { value: 'Setting the `httponly` option to prevent client-side JavaScript access.', correct: true }
      - { value: 'Storing only session IDs in cookies, not actual sensitive data.', correct: true }
    help: |
      'https://symfony.com/doc/current/components/http_foundation.html#cookies'
  - question: 'What is the purpose of the `SameSite` cookie attribute?'
    answers:
      - { value: 'To prevent Cross-Site Request Forgery (CSRF) attacks by controlling when cookies are sent with cross-site requests.', correct: true }
      - { value: 'To ensure cookies are only sent to the same domain that set them.', correct: false }
      - { value: 'To specify the lifetime of the cookie in seconds.', correct: false }
      - { value: 'To indicate if the cookie should be sent over secure connections only.', correct: false }
    help: |
      'https://symfony.com/doc/current/components/http_foundation.html#cookies'
  - question: 'When is a session typically started in a Symfony application?'
    answers:
      - { value: 'Automatically at the beginning of every request.', correct: false }
      - { value: 'When `session_start()` is explicitly called in the front controller.', correct: false }
      - { value: 'When the session is first accessed (e.g., `$request->getSession()`) or a flash message is added.', correct: true }
      - { value: 'Only when a user logs in.', correct: false }
    help: |
      'https://symfony.com/doc/current/session.html#starting-the-session'
  - question: 'What happens to session data when the browser is closed, assuming no explicit session lifetime is set?'
    answers:
      - { value: 'The session data is immediately cleared from the server.', correct: false }
      - { value: 'The session cookie, which identifies the session, is typically deleted, making the session inaccessible.', correct: true }
      - { value: 'The session data persists indefinitely on the server.', correct: false }
      - { value: 'Symfony automatically migrates the session to local storage.', correct: false }
    help: |
      'https://symfony.com/doc/current/session.html#session-lifetime'
  - question: 'Which of the following is a common use case for flash messages?'
    answers:
      - { value: 'Displaying a success message after a form submission and redirect.', correct: true }
      - { value: 'Storing user preferences that persist across multiple visits.', correct: false }
      - { value: 'Caching frequently accessed data for performance.', correct: false }
      - { value: 'Storing sensitive user credentials securely.', correct: false }
    help: |
      'https://symfony.com/doc/current/controller.html#flash-messages'
  - question: 'After adding a flash message, if you call `getSession()->getFlashBag()->get("success")` twice in the same request, what will be the result?'
    answers:
      - { value: 'The message will be returned both times.', correct: false }
      - { value: 'The message will be returned the first time, and an empty array the second time.', correct: true }
      - { value: 'An error will be thrown on the second call.', correct: false }
      - { value: 'The message will be returned the first time, and `null` the second time.', correct: false }
    help: |
      'https://symfony.com/doc/current/controller.html#flash-messages'
  - question: 'Which HTTP status code indicates a temporary redirect, and the client should continue to use the original URI for future requests?'
    answers:
      - { value: '301 Moved Permanently', correct: false }
      - { value: '302 Found (or Moved Temporarily)', correct: true }
      - { value: '303 See Other', correct: false }
      - { value: '307 Temporary Redirect', correct: true }
    help: |
      'https://symfony.com/doc/current/book/controller.html#redirecting'
  - question: 'What is the primary reason to use `Response::HTTP_MOVED_PERMANENTLY` (301) for a redirect?'
    answers:
      - { value: 'To indicate that the resource has temporarily moved.', correct: false }
      - { value: 'To inform search engines that the content has permanently moved to a new URL, aiding SEO.', correct: true }
      - { value: 'To force the client to use a GET request for the new URI.', correct: false }
      - { value: 'To prevent caching of the old URI.', correct: false }
    help: |
      'https://symfony.com/doc/current/book/controller.html#redirecting'
  - question: 'When you use `redirectToRoute()`, what does Symfony internally do to generate the redirect URL?'
    answers:
      - { value: 'It uses the `UrlGenerator` service.', correct: true }
      - { value: 'It directly concatenates the route name with parameters.', correct: false }
      - { value: 'It makes an internal sub-request to the target route.', correct: false }
      - { value: 'It relies on client-side JavaScript to resolve the URL.', correct: false }
    help: |
      'https://symfony.com/doc/current/book/controller.html#redirecting'
  - question: 'Which of the following is a valid reason to throw a `NotFoundHttpException`?'
    answers:
      - { value: 'A database record with the requested ID does not exist.', correct: true }
      - { value: 'The user is not authenticated to access a resource.', correct: false }
      - { value: 'A form submission contains invalid data.', correct: false }
      - { value: 'The server encountered an unexpected error.', correct: false }
    help: |
      'https://symfony.com/doc/current/book/controller.html#handling-404-pages'
  - question: 'What is the default behavior of Symfony when a `NotFoundHttpException` is thrown?'
    answers:
      - { value: 'It displays a generic "Page Not Found" message.', correct: false }
      - { value: 'It renders the `error.html.twig` template (or similar) with a 404 status code.', correct: true }
      - { value: 'It redirects the user to the homepage.', correct: false }
      - { value: 'It logs the error and continues processing the request.', correct: false }
    help: |
      'https://symfony.com/doc/current/controller/error_pages.html#customizing-the-error-page'
  - question: 'Which of the following is true regarding the `UploadedFile` object?'
    answers:
      - { value: 'It extends `SplFileInfo`.', correct: true }
      - { value: 'It provides methods to get the original file name, MIME type, and size.', correct: true }
      - { value: 'It automatically saves the file to a permanent location upon instantiation.', correct: false }
      - { value: 'It is only available when using the `#[MapUploadedFile]` attribute.', correct: false }
    help: |
      'https://symfony.com/doc/current/controller.html#uploading-files'
  - question: 'You have a form with a multiple file upload field named `gallery_images[]`. How would you access these files in your controller using `#[MapUploadedFile]`?'
    answers:
      - { value: '`#[MapUploadedFile] UploadedFile ...$galleryImages`', correct: true }
      - { value: '`#[MapUploadedFile] array $galleryImages`', correct: true }
      - { value: '`#[MapUploadedFile] Collection<UploadedFile> $galleryImages`', correct: false }
      - { value: '`#[MapUploadedFile] UploadedFile[] $galleryImages`', correct: false }
    help: |
      'https://symfony.com/doc/current/controller.html#mapping-multiple-uploaded-files'
  - question: 'What is the purpose of the `controller()` Twig function when embedding controllers?'
    answers:
      - { value: 'To execute a controller method directly by its fully qualified class and method name.', correct: true }
      - { value: 'To generate a URL for a controller action.', correct: false }
      - { value: 'To include a Twig template from a specific controller.', correct: false }
      - { value: 'To define a new controller within the Twig template.', correct: false }
    help: |
      'https://symfony.com/doc/current/reference/twig_reference.html#controller'
  - question: 'Which of the following is a valid way to define the `_controller` attribute in a route configuration (e.g., `config/routes.yaml`)?'
    answers:
      - { value: '`controller: App\\Controller\\MyController::index`', correct: true }
      - { value: '`controller: App\\Controller\\MyController` (for invokable)', correct: true }
      - { value: '`controller: my_controller_service_id:index`', correct: true }
      - { value: '`controller: @App\\Controller\\MyController->index`', correct: false }
    help: |
      'https://symfony.com/doc/current/controller/service.html#configuring-routes'
  - question: 'What is the role of the `ArgumentResolver` in Symfony''s HTTP Kernel?'
    answers:
      - { value: 'It determines which controller to execute for a given request.', correct: false }
      - { value: 'It resolves the arguments for the controller method based on the request and registered resolvers.', correct: true }
      - { value: 'It handles the conversion of the controller''s return value into a `Response` object.', correct: false }
      - { value: 'It manages the lifecycle of services injected into controllers.', correct: false }
    help: |
      'https://symfony.com/doc/current/create_framework/http_kernel_controller_resolver.html#integrate-httpkernel-controller-and-argument-resolvers'
  - question: 'You want to inject a custom service `App\\Service\\Mailer` into your controller action. What is the most straightforward way to do this in Symfony 7?'
    answers:
      - { value: 'Type-hint `Mailer` in the controller method signature: `public function sendEmail(Mailer $mailer): Response`.', correct: true }
      - { value: 'Manually get the service from the container: `$this->container->get(Mailer::class)`.', correct: false }
      - { value: 'Use a `@required` annotation on a property and define a setter method.', correct: false }
      - { value: 'Pass the service as a route parameter.', correct: false }
    help: |
      'https://symfony.com/doc/current/controller.html#injecting-services-into-controllers'
  - question: 'Which of the following is true about custom argument value resolvers?'
    answers:
      - { value: 'They must implement `ArgumentValueResolverInterface`.', correct: true }
      - { value: 'They allow you to define custom logic for how controller arguments are populated.', correct: true }
      - { value: 'They are automatically registered by Symfony if placed in `src/ArgumentResolver/`.', correct: false }
      - { value: 'They can only be used for scalar types (string, int, float, bool).', correct: false }
    help: |
      'https://symfony.com/doc/current/controller/argument_value_resolvers.html#creating-a-custom-argument-value-resolver'
  - question: 'What is the purpose of the `Request::getLocale()` method?'
    answers:
      - { value: 'To get the preferred language of the client from the `Accept-Language` header.', correct: true }
      - { value: 'To set the locale for the current request.', correct: false }
      - { value: 'To retrieve the locale configured in the application settings.', correct: false }
      - { value: 'To determine the default locale of the server.', correct: false }
    help: |
      'https://symfony.com/doc/current/components/http_foundation.html#request'
  - question: 'How can you access the current route name within a controller action?'
    answers:
      - { value: '$request->attributes->get("_route")', correct: true }
      - { value: '$this->get("router")->getContext()->getRouteName()', correct: false }
      - { value: '$request->getRouteName()', correct: false }
      - { value: '$this->getRoute()', correct: false }
    help: |
      'https://symfony.com/doc/current/book/controller.html#redirecting'
  - question: 'Which of the following HTTP status codes indicates that the request has been successfully processed, and no content is being returned?'
    answers:
      - { value: '200 OK', correct: false }
      - { value: '201 Created', correct: false }
      - { value: '204 No Content', correct: true }
      - { value: '400 Bad Request', correct: false }
    help: |
      'https://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html'
  - question: 'What is the purpose of `Response::setPrivate()` and `Response::setPublic()`?'
    answers:
      - { value: 'To control whether a response can be cached by shared (public) or private caches.', correct: true }
      - { value: 'To set the visibility of the response content to the user.', correct: false }
      - { value: 'To define if the response should be encrypted or not.', correct: false }
      - { value: 'To mark a response as containing sensitive data.', correct: false }
    help: |
      'https://symfony.com/doc/current/http_cache.html#http-cache-headers'
  - question: 'Which cookie option specifies the domain for which the cookie is valid?'
    answers:
      - { value: 'path', correct: false }
      - { value: 'domain', correct: true }
      - { value: 'host', correct: false }
      - { value: 'origin', correct: false }
    help: |
      'https://symfony.com/doc/current/components/http_foundation.html#cookies'
  - question: 'What is the default lifetime of a session cookie if not explicitly configured?'
    answers:
      - { value: '1 hour', correct: false }
      - { value: 'Until the browser is closed (session cookie).', correct: true }
      - { value: '24 hours', correct: false }
      - { value: '1 week', correct: false }
    help: |
      'https://symfony.com/doc/current/session.html#session-lifetime'
  - question: 'How can you regenerate the session ID without losing existing session data?'
    answers:
      - { value: '$session->migrate();', correct: true }
      - { value: '$session->regenerateId();', correct: false }
      - { value: '$session->changeId();', correct: false }
      - { value: '$session->newId();', correct: false }
    help: |
      'https://symfony.com/doc/current/session.html#session-id-regeneration'
  - question: 'You want to display a single flash message of type `error` that was added in the previous request. Which Twig code snippet is correct?'
    answers:
      - { value: '{{ app.flashes("error")[0] is defined ? app.flashes("error")[0] : "" }}', correct: true }
      - { value: '{{ app.session.getFlashBag().get("error") | first }}', correct: false }
      - { value: '{{ app.flashes.error | first }}', correct: false }
      - { value: '{{ app.session.flash.error.0 }}', correct: false }
    help: |
      'https://symfony.com/doc/current/controller.html#flash-messages'
  - question: 'Which HTTP status code is typically used for a redirect after a successful POST request, indicating that the client should retrieve the resource using GET?'
    answers:
      - { value: '200 OK', correct: false }
      - { value: '201 Created', correct: false }
      - { value: '303 See Other', correct: true }
      - { value: '307 Temporary Redirect', correct: false }
    help: |
      'https://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html'
  - question: 'What is the main advantage of using `redirectToRoute()` over `redirect()` for internal redirects?'
    answers:
      - { value: 'It is more performant as it avoids URL generation.', correct: false }
      - { value: 'It uses route names, making it more robust to URL changes.', correct: true }
      - { value: 'It automatically preserves query parameters.', correct: false }
      - { value: 'It allows passing arguments directly to the target controller.', correct: false }
    help: |
      'https://symfony.com/doc/current/book/controller.html#redirecting'
  - question: 'When would you prefer to use `forward()` over a client-side redirect?'
    answers:
      - { value: 'When you want to reuse controller logic and display its output as part of the current page, without a full browser redirect.', correct: true }
      - { value: 'When you need to change the URL in the browser address bar.', correct: false }
      - { value: 'When the target action is in a different Symfony application.', correct: false }
      - { value: 'When you need to clear the browser cache before the next request.', correct: false }
    help: |
      'https://symfony.com/doc/current/controller/forwarding.html#forwarding-to-another-controller'
  - question: 'If you throw a `NotFoundHttpException` in a controller, what is the default HTTP status code returned to the client?'
    answers:
      - { value: '500 Internal Server Error', correct: false }
      - { value: '403 Forbidden', correct: false }
      - { value: '404 Not Found', correct: true }
      - { value: '400 Bad Request', correct: false }
    help: |
      'https://symfony.com/doc/current/book/controller.html#handling-404-pages'
  - question: 'Which method of the `UploadedFile` object returns the original file name as provided by the client?'
    answers:
      - { value: 'getName()', correct: false }
      - { value: 'getClientOriginalName()', correct: true }
      - { value: 'getFilename()', correct: false }
      - { value: 'getOriginalName()', correct: false }
    help: |
      'https://symfony.com/doc/current/controller.html#uploading-files'
  - question: 'What is the purpose of the `#[MapRequestPayload]` attribute when dealing with JSON or XML request bodies?'
    answers:
      - { value: 'It automatically validates the incoming payload against a schema.', correct: false }
      - { value: 'It deserializes the request body into a PHP object (DTO) and injects it into the controller argument.', correct: true }
      - { value: 'It converts the request payload into an array of key-value pairs.', correct: false }
      - { value: 'It encrypts the request payload for security.', correct: false }
    help: |
      'https://symfony.com/doc/current/book/controller.html#mapping-the-request-payload-to-a-dto'
  - question: 'Which of the following services are typically injected into controller methods by default due to argument value resolvers?'
    answers:
      - { value: '`Request`', correct: true }
      - { value: '`LoggerInterface`', correct: true }
      - { value: '`EntityManagerInterface` (if Doctrine is used)', correct: true }
      - { value: '`ContainerInterface`', correct: false }
    help: |
      'https://symfony.com/doc/current/controller.html#injecting-services-into-controllers'
  - question: 'What is the purpose of the `#[MapQueryParameter(name: "custom_name")]` syntax?'
    answers:
      - { value: 'To map a query parameter with a different name in the URL to a controller argument.', correct: true }
      - { value: 'To define an alias for the controller argument.', correct: false }
      - { value: 'To specify a default value for the query parameter.', correct: false }
      - { value: 'To make the query parameter optional.', correct: false }
    help: |
      'https://symfony.com/doc/current/controller.html#mapping-query-parameters'
  - question: 'Which of the following is a valid way to define a controller in `config/routes.php` using PHP closures?'
    answers:
      - { value: '`$routes->add("my_route", "/path")->controller(function () { return new Response("Hello"); });`', correct: true }
      - { value: '`$routes->add("my_route", "/path")->controller("App\\Controller\\MyController::index");`', correct: true }
      - { value: '`$routes->add("my_route", "/path")->controller([new MyController(), "index"]);`', correct: true }
      - { value: '`$routes->add("my_route", "/path")->controller("my_controller_service_id");`', correct: true }
    help: |
      'https://symfony.com/doc/current/routing.html#defining-routes-in-php'
  - question: 'What is the purpose of `Response::setCache()` method?'
    answers:
      - { value: 'To configure HTTP caching headers like `Cache-Control` and `Expires`.', correct: true }
      - { value: 'To store the response in a server-side cache.', correct: false }
      - { value: 'To disable all caching for the response.', correct: false }
      - { value: 'To set the ETag and Last-Modified headers.', correct: true }
    help: |
      'https://symfony.com/doc/current/http_cache.html#http-cache-headers'
  - question: 'Which of the following is true about the `Request::isXmlHttpRequest()` method?'
    answers:
      - { value: 'It checks if the `X-Requested-With` header is set to `XMLHttpRequest`.', correct: true }
      - { value: 'It guarantees that the request was made via AJAX.', correct: false }
      - { value: 'It is a reliable way to detect all AJAX requests.', correct: false }
      - { value: 'It is deprecated in Symfony 7.', correct: false }
    help: |
      'https://symfony.com/doc/current/components/http_foundation.html#request'
  - question: 'What is the primary purpose of the `Request::getClientIp()` method?'
    answers:
      - { value: 'To get the IP address of the client making the request.', correct: true }
      - { value: 'To get the IP address of the server.', correct: false }
      - { value: 'To get the IP address of the proxy server.', correct: false }
      - { value: 'To get a list of all IP addresses involved in the request.', correct: false }
    help: |
      'https://symfony.com/doc/current/components/http_foundation.html#request'
  - question: 'Which of the following is the correct way to set a cookie that expires in one hour?'
    answers:
      - { value: '`$response->headers->setCookie(new Cookie("name", "value", time() + 3600));`', correct: true }
      - { value: '`$response->headers->setCookie(new Cookie("name", "value", "+1 hour"));`', correct: false }
      - { value: '`$response->headers->setCookie(new Cookie("name", "value", new \\DateTime("+1 hour")));`', correct: true }
      - { value: '`$response->headers->setCookie(new Cookie("name", "value"))->expire(3600);`', correct: false }
    help: |
      'https://symfony.com/doc/current/components/http_foundation.html#cookies'
  - question: 'What is the purpose of the `path` option when setting a cookie?'
    answers:
      - { value: 'It specifies the directory on the server where the cookie is stored.', correct: false }
      - { value: 'It defines the URL path for which the cookie is valid.', correct: true }
      - { value: 'It indicates the file path of the cookie on the client-side.', correct: false }
      - { value: 'It is used for cross-domain cookie sharing.', correct: false }
    help: |
      'https://symfony.com/doc/current/components/http_foundation.html#cookies'
  - question: 'Which of the following is true about session IDs in Symfony?'
    answers:
      - { value: 'They are typically stored in a cookie named `PHPSESSID` by default.', correct: true }
      - { value: 'They are always regenerated on every request for security.', correct: false }
      - { value: 'They are stored in the URL query string by default.', correct: false }
      - { value: 'They are directly accessible via `$_SESSION["id"]`.', correct: false }
    help: |
      'https://symfony.com/doc/current/session.html#session-id-regeneration'
  - question: 'What is the purpose of `session.use_strict_mode` in Symfony''s session configuration?'
    answers:
      - { value: 'To prevent session fixation attacks by rejecting uninitialized session IDs.', correct: true }
      - { value: 'To enforce the use of HTTPS for all session cookies.', correct: false }
      - { value: 'To ensure that session IDs are always regenerated after login.', correct: false }
      - { value: 'To restrict session access to specific IP addresses.', correct: false }
    help: |
      'https://symfony.com/doc/current/reference/configuration/framework.html#session-use-strict-mode'
  - question: 'You have multiple flash messages of type `info`. How do you retrieve all of them in a controller?'
    answers:
      - { value: '$this->getFlashBag()->all("info");', correct: false }
      - { value: '$this->addFlash("info");', correct: false }
      - { value: '$request->getSession()->getFlashBag()->get("info");', correct: true }
      - { value: '$this->get("session")->getFlashBag()->get("info");', correct: false }
    help: |
      'https://symfony.com/doc/current/controller.html#flash-messages'
  - question: 'Which of the following HTTP status codes indicates that the resource has been temporarily moved, and the client should NOT change the request method (e.g., POST remains POST)?'
    answers:
      - { value: '302 Found', correct: false }
      - { value: '303 See Other', correct: false }
      - { value: '307 Temporary Redirect', correct: true }
      - { value: '308 Permanent Redirect', correct: false }
    help: |
      'https://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html'
  - question: 'When would you use `Response::HTTP_PERMANENTLY_REDIRECT` (308) instead of `Response::HTTP_MOVED_PERMANENTLY` (301)?'
    answers:
      - { value: 'When you want to ensure the request method (e.g., POST) is preserved during the redirect.', correct: true }
      - { value: 'When the redirect is temporary.', correct: false }
      - { value: 'When you want to force a GET request after the redirect.', correct: false }
      - { value: '308 is deprecated; 301 should always be used.', correct: false }
    help: |
      'https://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html'
  - question: 'What is the main benefit of using `forward()` over directly calling a method of another service or class?'
    answers:
      - { value: 'It ensures that the full Symfony request lifecycle (e.g., event listeners, argument resolvers) is applied to the sub-request.', correct: true }
      - { value: 'It is more performant than direct method calls.', correct: false }
      - { value: 'It automatically handles security permissions for the forwarded action.', correct: false }
      - { value: 'It allows the sub-controller to return a `RedirectResponse`.', correct: false }
    help: |
      'https://symfony.com/doc/current/controller/forwarding.html#forwarding-to-another-controller'
  - question: 'If you need to customize the content or appearance of the 404 error page, which Twig template file would you typically modify?'
    answers:
      - { value: '`templates/bundles/TwigBundle/Exception/error404.html.twig`', correct: true }
      - { value: '`templates/error/404.html.twig`', correct: false }
      - { value: '`templates/exception.html.twig`', correct: false }
      - { value: '`templates/bundles/FrameworkBundle/views/Exception/error404.html.twig`', correct: false }
    help: |
      'https://symfony.com/doc/current/controller/error_pages.html#customizing-the-error-page'
  - question: 'What is the purpose of `UploadedFile::isValid()` method?'
    answers:
      - { value: 'To check if the file exists on the server.', correct: false }
      - { value: 'To check if the file was uploaded via HTTP POST and there were no upload errors.', correct: true }
      - { value: 'To validate the file content against a specific format.', correct: false }
      - { value: 'To determine if the file size is within acceptable limits.', correct: false }
    help: |
      'https://symfony.com/doc/current/controller.html#uploading-files'
  - question: 'When using `#[MapUploadedFile]` for an optional file upload, how would you define the controller argument?'
    answers:
      - { value: '`#[MapUploadedFile] ?UploadedFile $picture = null`', correct: true }
      - { value: '`#[MapUploadedFile(required: false)] UploadedFile $picture`', correct: true }
      - { value: '`#[MapUploadedFile] UploadedFile $picture = null`', correct: false }
      - { value: '`#[MapUploadedFile] UploadedFile $picture` (it is optional by default)', correct: false }
    help: |
      'https://symfony.com/doc/current/controller.html#mapping-uploaded-files'
  - question: 'What is the purpose of the `_format` route parameter in Symfony?'
    answers:
      - { value: 'To specify the desired response format (e.g., `html`, `json`, `xml`).', correct: true }
      - { value: 'To define the input format of the request body.', correct: false }
      - { value: 'To set the default date format for the application.', correct: false }
      - { value: 'To indicate the version of the API being accessed.', correct: false }
    help: |
      'https://symfony.com/doc/current/routing.html#special-routing-parameters'
  - question: 'Which of the following is a valid way to define a controller in XML routing?'
    answers:
      - { value: '`<route id="hello" path="/hello" controller="App\\Controller\\HelloController::index"/>`', correct: true }
      - { value: '`<route id="hello" path="/hello"><default key="_controller">App\\Controller\\HelloController</default></route>`', correct: true }
      - { value: '`<route id="hello" path="/hello" action="App\\Controller\\HelloController::index"/>`', correct: false }
      - { value: '`<route id="hello" path="/hello" service="App\\Controller\\HelloController" method="index"/>`', correct: false }
    help: |
      'https://symfony.com/doc/current/controller/service.html#configuring-routes'
  - question: 'What is the primary benefit of using `#[MapQueryString]` or `#[MapRequestPayload]` with DTOs?'
    answers:
      - { value: 'It reduces boilerplate code for data retrieval and validation in controllers.', correct: true }
      - { value: 'It automatically persists the DTO to the database.', correct: false }
      - { value: 'It replaces the need for Symfony Forms.', correct: false }
      - { value: 'It improves the performance of HTTP requests.', correct: false }
    help: |
      'https://symfony.com/doc/current/book/controller.html#mapping-the-request-payload-to-a-dto'
  - question: 'If you need to access the `RouterInterface` service within a controller, what is the recommended approach?'
    answers:
      - { value: 'Type-hint `RouterInterface` in the constructor or action method.', correct: true }
      - { value: 'Call `$this->get("router");` from `AbstractController`.', correct: false }
      - { value: 'Access it globally via `Symfony\\Component\\Routing\\Router::getInstance();`', correct: false }
      - { value: 'It is not possible to directly inject `RouterInterface`.', correct: false }
    help: |
      'https://symfony.com/doc/current/service_container.html#injecting-services-into-controllers'
  - question: 'Which of the following is NOT a valid way to define a controller in Symfony 7?'
    answers:
      - { value: 'A PHP class with a public method.', correct: false }
      - { value: 'A PHP class with an `__invoke()` method.', correct: false }
      - { value: 'A PHP closure.', correct: false }
      - { value: 'A static method of a class that is not a service.', correct: true }
    help: |
      'https://symfony.com/doc/current/controller.html#controller-basics'
  - question: 'What is the purpose of `Response::setExpires()`?'
    answers:
      - { value: 'To set the `Expires` HTTP header, indicating the date/time after which the response is considered stale.', correct: true }
      - { value: 'To set the maximum age for a cached response.', correct: false }
      - { value: 'To define the lifetime of a session.', correct: false }
      - { value: 'To specify when the server will stop serving the resource.', correct: false }
    help: |
      'https://symfony.com/doc/current/http_cache.html#http-cache-headers'
  - question: 'Which of the following is true about the `Request::getSession()` method?'
    answers:
      - { value: 'It always returns a `SessionInterface` object, even if the session is not yet started.', correct: true }
      - { value: 'It returns `null` if no session is active.', correct: false }
      - { value: 'It automatically starts the session if it hasn''t been started already.', correct: true }
      - { value: 'It is deprecated in favor of direct session injection.', correct: false }
    help: |
      'https://symfony.com/doc/current/session.html#accessing-the-session'
  - question: 'What is the purpose of `session.cookie_secure` configuration option?'
    answers:
      - { value: 'To ensure session cookies are only sent over HTTPS connections.', correct: true }
      - { value: 'To encrypt the session cookie content.', correct: false }
      - { value: 'To prevent cross-site scripting (XSS) attacks involving session cookies.', correct: false }
      - { value: 'To make the session cookie accessible only to the server.', correct: false }
    help: |
      'https://symfony.com/doc/current/reference/configuration/framework.html#session-cookie-secure'
  - question: 'If you want to remove a specific attribute from the session, which method should you use?'
    answers:
      - { value: '$session->remove("key");', correct: true }
      - { value: '$session->delete("key");', correct: false }
      - { value: '$session->unset("key");', correct: false }
      - { value: '$session->clear("key");', correct: false }
    help: |
      'https://symfony.com/doc/current/session.html#storing-data-in-the-session'
  - question: 'Which of the following is a valid way to retrieve all flash messages, regardless of type?'
    answers:
      - { value: '$request->getSession()->getFlashBag()->all();', correct: true }
      - { value: '$this->getFlashBag()->getMessages();', correct: false }
      - { value: '`{{ app.flashes }}` in Twig.', correct: true }
      - { value: '$request->getSession()->getFlashBag()->peekAll();', correct: false }
    help: |
      'https://symfony.com/doc/current/controller.html#flash-messages'
  - question: 'When is it appropriate to use `Response::HTTP_FOUND` (302) for a redirect?'
    answers:
      - { value: 'For permanent redirects that should be cached by clients.', correct: false }
      - { value: 'For temporary redirects where the client should continue to use the original URI for future requests.', correct: true }
      - { value: 'When the redirect is a result of a POST request and the client should switch to GET.', correct: false }
      - { value: 'When the resource has been moved permanently to a new location.', correct: false }
    help: |
      'https://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html'
  - question: 'What is the main difference in behavior between `Response::HTTP_FOUND` (302) and `Response::HTTP_SEE_OTHER` (303)?'
    answers:
      - { value: '302 allows the client to re-send the request with the original method, while 303 explicitly requires a GET request to the new URI.', correct: true }
      - { value: '302 is for permanent redirects, 303 is for temporary.', correct: false }
      - { value: '302 is cacheable, 303 is not.', correct: false }
      - { value: 'There is no functional difference; they are interchangeable.', correct: false }
    help: |
      'https://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html'
  - question: 'Which of the following is true about the arguments passed to a forwarded controller action?'
    answers:
      - { value: 'They override any existing request attributes with the same name.', correct: true }
      - { value: 'They are merged with the original request attributes, with original attributes taking precedence.', correct: false }
      - { value: 'They are passed as query parameters to the forwarded request.', correct: false }
      - { value: 'They are only accessible if the target controller explicitly requests them from the `Request` object.', correct: false }
    help: |
      'https://symfony.com/doc/current/controller/forwarding.html#forwarding-to-another-controller'
  - question: 'If you need to handle all exceptions (not just 404s) with a custom error page, which configuration would you modify?'
    answers:
      - { value: '`framework.error_controller` in `config/packages/framework.yaml`.', correct: true }
      - { value: '`twig.exception_controller` in `config/packages/twig.yaml`.', correct: false }
      - { value: 'By implementing a custom `ExceptionListener`.', correct: true }
      - { value: 'By overriding `Kernel::handleException()`.', correct: false }
    help: |
      'https://symfony.com/doc/current/controller/error_pages.html#customizing-the-error-page'
  - question: 'What is the purpose of `UploadedFile::getMimeType()`?'
    answers:
      - { value: 'To get the MIME type of the uploaded file as determined by the client.', correct: true }
      - { value: 'To get the MIME type of the file after it has been moved to its final destination.', correct: false }
      - { value: 'To validate if the file''s MIME type is allowed.', correct: false }
      - { value: 'To convert the file to a specific MIME type.', correct: false }
    help: |
      'https://symfony.com/doc/current/controller.html#uploading-files'
  - question: 'When using `#[MapRequestPayload]` with a DTO, what happens if the incoming JSON payload contains fields not present in the DTO?'
    answers:
      - { value: 'An error is thrown, as the payload must exactly match the DTO.', correct: false }
      - { value: 'The extra fields are ignored by default.', correct: true }
      - { value: 'The extra fields are added to the DTO as dynamic properties.', correct: false }
      - { value: 'A warning is logged, but the request proceeds.', correct: false }
    help: |
      'https://symfony.com/doc/current/book/controller.html#mapping-the-request-payload-to-a-dto'
  - question: 'Which of the following is a common scenario where a custom argument value resolver would be beneficial?'
    answers:
      - { value: 'Automatically converting a slug from the URL into a fully loaded Doctrine entity.', correct: true }
      - { value: 'Injecting the current `Request` object into a controller.', correct: false }
      - { value: 'Resolving simple string or integer route parameters.', correct: false }
      - { value: 'Injecting a standard Symfony service like `LoggerInterface`.', correct: false }
    help: |
      'https://symfony.com/doc/current/controller/argument_value_resolvers.html#creating-a-custom-argument-value-resolver'
  - question: 'What is the purpose of `Response::setLastModified()`?'
    answers:
      - { value: 'To set the `Last-Modified` HTTP header, indicating the last time the resource was modified.', correct: true }
      - { value: 'To update the modification timestamp of the file on the server.', correct: false }
      - { value: 'To define the expiration date of the response.', correct: false }
      - { value: 'To mark the response as immutable.', correct: false }
    help: |
      'https://symfony.com/doc/current/http_cache.html#http-cache-headers'
  - question: 'Which of the following is the correct way to retrieve all headers from a `Request` object?'
    answers:
      - { value: '$request->headers->all();', correct: true }
      - { value: '$request->getHeaders();', correct: false }
      - { value: '$request->headers->toArray();', correct: false }
      - { value: '$request->allHeaders();', correct: false }
    help: |
      'https://symfony.com/doc/current/components/http_foundation.html#request'
  - question: 'What is the default behavior of Symfony regarding controller services?'
    answers:
      - { value: 'Controllers are automatically registered as public services if they are in the `src/Controller/` directory and autoconfiguration is enabled.', correct: true }
      - { value: 'Controllers are private services by default and cannot be injected.', correct: false }
      - { value: 'Controllers must be manually defined in `services.yaml` to be used as services.', correct: false }
      - { value: 'Controllers are not services; they are instantiated per request.', correct: false }
    help: |
      'https://symfony.com/doc/current/controller/service.html#defining-controllers-as-services'
  - question: 'Which of the following is a valid way to define a route for an invokable controller using PHP attributes?'
    answers:
      - { value: '`#[Route("/path")] class MyController { public function __invoke(): Response { ... } }`', correct: true }
      - { value: '`#[Route("/path", controller: "MyController")] class MyController { ... }`', correct: false }
      - { value: '`#[Route("/path")] class MyController extends AbstractController { public function __invoke(): Response { ... } }`', correct: true }
      - { value: '`#[Route("/path", method: "__invoke")] class MyController { ... }`', correct: false }
    help: |
      'https://symfony.com/doc/current/controller/service.html#invokable-controllers'
  - question: 'What is the purpose of `Response::setEtag()`?'
    answers:
      - { value: 'To set the `ETag` HTTP header, a unique identifier for the resource version, used for conditional requests.', correct: true }
      - { value: 'To encrypt the response content.', correct: false }
      - { value: 'To define the character encoding of the response.', correct: false }
      - { value: 'To set a timestamp for the response.', correct: false }
    help: |
      'https://symfony.com/doc/current/http_cache.html#http-cache-headers'
  - question: 'Which of the following is true about the `Request::getPreferredLanguage()` method?'
    answers:
      - { value: 'It returns the single best matching language from the `Accept-Language` header based on configured locales.', correct: true }
      - { value: 'It returns an array of all languages from the `Accept-Language` header.', correct: false }
      - { value: 'It returns the default application locale.', correct: false }
      - { value: 'It sets the locale for the current request.', correct: false }
    help: |
      'https://symfony.com/doc/current/components/http_foundation.html#request'
  - question: 'How can you access the `User` object (representing the currently authenticated user) in a controller extending `AbstractController`?'
    answers:
      - { value: '$this->getUser();', correct: true }
      - { value: '$this->get("security.token_storage")->getToken()->getUser();', correct: false }
      - { value: '$request->getUser();', correct: false }
      - { value: '`app.user` in Twig.', correct: true }
    help: |
      'https://symfony.com/doc/current/security.html#accessing-the-user'
  - question: 'What is the purpose of `Response::setVary()`?'
    answers:
      - { value: 'To set the `Vary` HTTP header, indicating that the response varies depending on the specified request headers.', correct: true }
      - { value: 'To make the response content dynamic based on user input.', correct: false }
      - { value: 'To specify different versions of the response for different browsers.', correct: false }
      - { value: 'To enable A/B testing for the response.', correct: false }
    help: |
      'https://symfony.com/doc/current/http_cache.html#http-cache-headers'
  - question: 'Which of the following is true about the `Request::isSecure()` method?'
    answers:
      - { value: 'It checks if the request was made over HTTPS.', correct: true }
      - { value: 'It checks if the request is authenticated.', correct: false }
      - { value: 'It checks if the request originated from a trusted IP address.', correct: false }
      - { value: 'It checks if the request body is encrypted.', correct: false }
    help: |
      'https://symfony.com/doc/current/components/http_foundation.html#request'
  - question: 'What is the purpose of `Response::setPublic()`?'
    answers:
      - { value: 'To mark the response as cacheable by shared (public) caches.', correct: true }
      - { value: 'To make the response content visible to all users.', correct: false }
      - { value: 'To indicate that the response does not contain sensitive information.', correct: false }
      - { value: 'To set the `Cache-Control: public` directive.', correct: true }
    help: |
      'https://symfony.com/doc/current/http_cache.html#http-cache-headers'
  - question: 'Which of the following is true about `Response::sendHeaders()` and `Response::sendContent()`?'
    answers:
      - { value: '`sendHeaders()` sends the HTTP headers, and `sendContent()` sends the response body.', correct: true }
      - { value: 'They are automatically called by `Response::send()`.', correct: true }
      - { value: 'They must be called manually after creating a `Response` object.', correct: false }
      - { value: '`sendHeaders()` is for redirects, `sendContent()` is for regular responses.', correct: false }
    help: |
      'https://symfony.com/doc/current/components/http_foundation.html#response'
  - question: 'What is the purpose of `Response::setCharset()`?'
    answers:
      - { value: 'To set the character encoding of the response content (e.g., `UTF-8`).', correct: true }
      - { value: 'To define the character set for the database connection.', correct: false }
      - { value: 'To convert the response content to a different character set.', correct: false }
      - { value: 'To specify the character set for incoming requests.', correct: false }
    help: |
      'https://symfony.com/doc/current/components/http_foundation.html#response'
  - question: 'Which of the following is true about the `Request::getPathInfo()` method?'
    answers:
      - { value: 'It returns the full URL of the request.', correct: false }
      - { value: 'It returns the path part of the URL, excluding the host and query string.', correct: true }
      - { value: 'It returns the base URL of the application.', correct: false }
      - { value: 'It returns the route name for the current request.', correct: false }
    help: |
      'https://symfony.com/doc/current/components/http_foundation.html#request'
  - question: 'What is the purpose of `Response::setProtocolVersion()`?'
    answers:
      - { value: 'To set the HTTP protocol version (e.g., `1.0`, `1.1`, `2.0`) for the response.', correct: true }
      - { value: 'To define the version of the Symfony framework used.', correct: false }
      - { value: 'To specify the API version.', correct: false }
      - { value: 'To set the TLS/SSL protocol version.', correct: false }
    help: |
      'https://symfony.com/doc/current/components/http_foundation.html#response'
  - question: 'Which of the following is true about the `Request::getUri()` method?'
    answers:
      - { value: 'It returns the full URI of the current request, including scheme, host, path, and query string.', correct: true }
      - { value: 'It returns only the path and query string.', correct: false }
      - { value: 'It returns the URI of the previous request.', correct: false }
      - { value: 'It returns the base URL of the application.', correct: false }
    help: |
      'https://symfony.com/doc/current/components/http_foundation.html#request'
  - question: 'What is the purpose of `Response::setStatusCode()`?'
    answers:
      - { value: 'To set the HTTP status code of the response (e.g., 200, 404, 500).', correct: true }
      - { value: 'To define the status of the application (e.g., "running", "maintenance").', correct: false }
      - { value: 'To set a custom status message for the response.', correct: false }
      - { value: 'To indicate the success or failure of a database operation.', correct: false }
    help: |
      'https://symfony.com/doc/current/components/http_foundation.html#response'
  - question: 'Which of the following is true about `Response::prepare()`?'
    answers:
      - { value: 'It normalizes the response headers and content before sending.', correct: true }
      - { value: 'It is called automatically by `Response::send()`.', correct: true }
      - { value: 'It is used to prepare the response for caching.', correct: false }
      - { value: 'It validates the response against HTTP standards.', correct: false }
    help: |
      'https://symfony.com/doc/current/components/http_foundation.html#response'
  - question: 'What is the purpose of `Response::setPublic()`?'
    answers:
      - { value: 'To mark the response as cacheable by shared (public) caches.', correct: true }
      - { value: 'To make the response content visible to all users.', correct: false }
      - { value: 'To indicate that the response does not contain sensitive information.', correct: false }
      - { value: 'To set the `Cache-Control: public` directive.', correct: true }
    help: |
      'https://symfony.com/doc/current/http_cache.html#http-cache-headers'
  - question: 'Which of the following is true about `Response::send()`?'
    answers:
      - { value: 'It sends the HTTP headers and the content to the client.', correct: true }
      - { value: 'It is the final step in the response lifecycle.', correct: true }
      - { value: 'It automatically flushes the output buffer.', correct: true }
      - { value: 'It returns the response object for further manipulation.', correct: false }
    help: |
      'https://symfony.com/doc/current/components/http_foundation.html#response'
  - question: 'What is the purpose of `Response::setPrivate()`?'
    answers:
      - { value: 'To mark the response as cacheable only by private (browser) caches.', correct: true }
      - { value: 'To make the response content visible only to authenticated users.', correct: false }
      - { value: 'To indicate that the response contains sensitive information.', correct: false }
      - { value: 'To set the `Cache-Control: private` directive.', correct: true }
    help: |
      'https://symfony.com/doc/current/http_cache.html#http-cache-headers'
  - question: 'Which of the following is true about `Response::isCacheable()`?'
    answers:
      - { value: 'It determines if the response can be cached based on its headers.', correct: true }
      - { value: 'It forces the response to be cached.', correct: false }
      - { value: 'It checks if the server has enough cache space.', correct: false }
      - { value: 'It is only relevant for private caches.', correct: false }
    help: |
      'https://symfony.com/doc/current/http_cache.html#http-cache-headers'
  - question: 'What is the purpose of `Response::setLastModified()`?'
    answers:
      - { value: 'To set the `Last-Modified` HTTP header, indicating the last time the resource was modified.', correct: true }
      - { value: 'To update the modification timestamp of the file on the server.', correct: false }
      - { value: 'To define the expiration date of the response.', correct: false }
      - { value: 'To mark the response as immutable.', correct: false }
    help: |
      'https://symfony.com/doc/current/http_cache.html#http-cache-headers'
  - question: 'Which of the following is true about `Response::setEtag()`?'
    answers:
      - { value: 'To set the `ETag` HTTP header, a unique identifier for the resource version, used for conditional requests.', correct: true }
      - { value: 'To encrypt the response content.', correct: false }
      - { value: 'To define the character encoding of the response.', correct: false }
      - { value: 'To set a timestamp for the response.', correct: false }
    help: |
      'https://symfony.com/doc/current/http_cache.html#http-cache-headers'
  - question: 'What is the purpose of `Response::setVary()`?'
    answers:
      - { value: 'To set the `Vary` HTTP header, indicating that the response varies depending on the specified request headers.', correct: true }
      - { value: 'To make the response content dynamic based on user input.', correct: false }
      - { value: 'To specify different versions of the response for different browsers.', correct: false }
      - { value: 'To enable A/B testing for the response.', correct: false }
    help: |
      'https://symfony.com/doc/current/http_cache.html#http-cache-headers'
  - question: 'Which of the following is true about `Response::isCacheable()`?'
    answers:
      - { value: 'It determines if the response can be cached based on its headers.', correct: true }
      - { value: 'It forces the response to be cached.', correct: false }
      - { value: 'It checks if the server has enough cache space.', correct: false }
      - { value: 'It is only relevant for private caches.', correct: false }
    help: |
      'https://symfony.com/doc/current/http_cache.html#http-cache-headers'
  - question: 'What is the purpose of `Response::setSharedMaxAge()`?'
    answers:
      - { value: 'To set the `s-maxage` directive in the `Cache-Control` header, specifying the maximum age for shared caches.', correct: true }
      - { value: 'To set the `max-age` directive for private caches.', correct: false }
      - { value: 'To define the overall maximum age for the response.', correct: false }
      - { value: 'To specify the maximum number of times a response can be shared.', correct: false }
    help: |
      'https://symfony.com/doc/current/http_cache.html#http-cache-headers'
  - question: 'Which of the following is true about `Response::setTtl()`?'
    answers:
      - { value: 'It sets the `max-age` directive in the `Cache-Control` header, specifying the maximum age for private caches.', correct: true }
      - { value: 'It sets the `s-maxage` directive for shared caches.', correct: false }
      - { value: 'It defines the time-to-live for the response in seconds.', correct: true }
      - { value: 'It is an alias for `setExpires()`.', correct: false }
    help: |
      'https://symfony.com/doc/current/http_cache.html#http-cache-headers'
  - question: 'What is the purpose of `Response::setClientTtl()`?'
    answers:
      - { value: 'It sets the `max-age` directive in the `Cache-Control` header, specifically for client-side (private) caches.', correct: true }
      - { value: 'It sets the `s-maxage` directive for shared caches.', correct: false }
      - { value: 'It defines the time-to-live for the response on the server.', correct: false }
      - { value: 'It is used for ESI caching.', correct: false }
    help: |
      'https://symfony.com/doc/current/http_cache.html#http-cache-headers'
  - question: 'Which of the following is true about `Response::isFresh()`?'
    answers:
      - { value: 'It checks if the response is still fresh according to its caching headers and the current time.', correct: true }
      - { value: 'It forces the client to revalidate the response.', correct: false }
      - { value: 'It indicates if the response content has been recently updated.', correct: false }
      - { value: 'It is only relevant for responses with an `ETag`.', correct: false }
    help: |
      'https://symfony.com/doc/current/http_cache.html#http-cache-headers'
  - question: 'What is the purpose of `Response::isNotModified()`?'
    answers:
      - { value: 'It checks if the request includes `If-Modified-Since` or `If-None-Match` headers and if the resource has not been modified, returning a 304 Not Modified response.', correct: true }
      - { value: 'It forces the client to download the full response content.', correct: false }
      - { value: 'It indicates that the response content is identical to a previously cached version.', correct: false }
      - { value: 'It is used to prevent caching of the response.', correct: false }
    help: |
      'https://symfony.com/doc/current/http_cache.html#http-cache-headers'
  - question: 'Which of the following is true about `Response::mustRevalidate()`?'
    answers:
      - { value: 'It sets the `must-revalidate` directive in the `Cache-Control` header, requiring caches to revalidate the response with the origin server before using a stale copy.', correct: true }
      - { value: 'It forces the client to always re-download the resource.', correct: false }
      - { value: 'It indicates that the response is always fresh.', correct: false }
      - { value: 'It is used for conditional GET requests.', correct: false }
    help: |
      'https://symfony.com/doc/current/http_cache.html#http-cache-headers'
  - question: 'What is the purpose of `Response::setPublic()`?'
    answers:
      - { value: 'To mark the response as cacheable by shared (public) caches.', correct: true }
      - { value: 'To make the response content visible to all users.', correct: false }
      - { value: 'To indicate that the response does not contain sensitive information.', correct: false }
      - { value: 'To set the `Cache-Control: public` directive.', correct: true }
    help: |
      'https://symfony.com/doc/current/http_cache.html#http-cache-headers'
  - question: 'Which of the following is true about `Response::setPrivate()`?'
    answers:
      - { value: 'To mark the response as cacheable only by private (browser) caches.', correct: true }
      - { value: 'To make the response content visible only to authenticated users.', correct: false }
      - { value: 'To indicate that the response contains sensitive information.', correct: false }
      - { value: 'To set the `Cache-Control: private` directive.', correct: true }
    help: |
      'https://symfony.com/doc/current/http_cache.html#http-cache-headers'
  - question: 'What is the purpose of `Response::setMaxAge()`?'
    answers:
      - { value: 'To set the `max-age` directive in the `Cache-Control` header, specifying the maximum age for private caches.', correct: true }
      - { value: 'To set the `s-maxage` directive for shared caches.', correct: false }
      - { value: 'To define the overall maximum age for the response.', correct: false }
      - { value: 'To specify the maximum number of times a response can be shared.', correct: false }
    help: |
      'https://symfony.com/doc/current/http_cache.html#http-cache-headers'
  - question: 'Which of the following is true about `Response::setExpires()`?'
    answers:
      - { value: 'To set the `Expires` HTTP header, indicating the date/time after which the response is considered stale.', correct: true }
      - { value: 'To set the maximum age for a cached response.', correct: false }
      - { value: 'To define the lifetime of a session.', correct: false }
      - { value: 'To specify when the server will stop serving the resource.', correct: false }
    help: |
      'https://symfony.com/doc/current/http_cache.html#http-cache-headers'
  - question: 'What is the purpose of `Response::setLastModified()`?'
    answers:
      - { value: 'To set the `Last-Modified` HTTP header, indicating the last time the resource was modified.', correct: true }
      - { value: 'To update the modification timestamp of the file on the server.', correct: false }
      - { value: 'To define the expiration date of the response.', correct: false }
      - { value: 'To mark the response as immutable.', correct: false }
    help: |
      'https://symfony.com/doc/current/http_cache.html#http-cache-headers'
  - question: 'Which of the following is true about `Response::setEtag()`?'
    answers:
      - { value: 'To set the `ETag` HTTP header, a unique identifier for the resource version, used for conditional requests.', correct: true }
      - { value: 'To encrypt the response content.', correct: false }
      - { value: 'To define the character encoding of the response.', correct: false }
      - { value: 'To set a timestamp for the response.', correct: false }
    help: |
      'https://symfony.com/doc/current/http_cache.html#http-cache-headers'
  - question: 'What is the purpose of `Response::setVary()`?'
    answers:
      - { value: 'To set the `Vary` HTTP header, indicating that the response varies depending on the specified request headers.', correct: true }
      - { value: 'To make the response content dynamic based on user input.', correct: false }
      - { value: 'To specify different versions of the response for different browsers.', correct: false }
      - { value: 'To enable A/B testing for the response.', correct: false }
    help: |
      'https://symfony.com/doc/current/http_cache.html#http-cache-headers'
  - question: 'Which of the following is true about `Response::isCacheable()`?'
    answers:
      - { value: 'It determines if the response can be cached based on its headers.', correct: true }
      - { value: 'It forces the response to be cached.', correct: false }
      - { value: 'It checks if the server has enough cache space.', correct: false }
      - { value: 'It is only relevant for private caches.', correct: false }
    help: |
      'https://symfony.com/doc/current/http_cache.html#http-cache-headers'
  - question: 'What is the purpose of `Response::setSharedMaxAge()`?'
    answers:
      - { value: 'To set the `s-maxage` directive in the `Cache-Control` header, specifying the maximum age for shared caches.', correct: true }
      - { value: 'To set the `max-age` directive for private caches.', correct: false }
      - { value: 'To define the overall maximum age for the response.', correct: false }
      - { value: 'To specify the maximum number of times a response can be shared.', correct: false }
    help: |
      'https://symfony.com/doc/current/http_cache.html#http-cache-headers'
  - question: 'Which of the following is true about `Response::setTtl()`?'
    answers:
      - { value: 'It sets the `max-age` directive in the `Cache-Control` header, specifying the maximum age for private caches.', correct: true }
      - { value: 'It sets the `s-maxage` directive for shared caches.', correct: false }
      - { value: 'It defines the time-to-live for the response in seconds.', correct: true }
      - { value: 'It is an alias for `setExpires()`.', correct: false }
    help: |
      'https://symfony.com/doc/current/http_cache.html#http-cache-headers'
  - question: 'What is the purpose of `Response::setClientTtl()`?'
    answers:
      - { value: 'It sets the `max-age` directive in the `Cache-Control` header, specifically for client-side (private) caches.', correct: true }
      - { value: 'It sets the `s-maxage` directive for shared caches.', correct: false }
      - { value: 'It defines the time-to-live for the response on the server.', correct: false }
      - { value: 'It is used for ESI caching.', correct: false }
    help: |
      'https://symfony.com/doc/current/http_cache.html#http-cache-headers'
  - question: 'Which of the following is true about `Response::isFresh()`?'
    answers:
      - { value: 'It checks if the response is still fresh according to its caching headers and the current time.', correct: true }
      - { value: 'It forces the client to revalidate the response.', correct: false }
      - { value: 'It indicates if the response content has been recently updated.', correct: false }
      - { value: 'It is only relevant for responses with an `ETag`.', correct: false }
    help: |
      'https://symfony.com/doc/current/http_cache.html#http-cache-headers'
  - question: 'What is the purpose of `Response::isNotModified()`?'
    answers:
      - { value: 'It checks if the request includes `If-Modified-Since` or `If-None-Match` headers and if the resource has not been modified, returning a 304 Not Modified response.', correct: true }
      - { value: 'It forces the client to download the full response content.', correct: false }
      - { value: 'It indicates that the response content is identical to a previously cached version.', correct: false }
      - { value: 'It is used to prevent caching of the response.', correct: false }
    help: |
      'https://symfony.com/doc/current/http_cache.html#http-cache-headers'
  - question: 'Which of the following is true about `Response::mustRevalidate()`?'
    answers:
      - { value: 'It sets the `must-revalidate` directive in the `Cache-Control` header, requiring caches to revalidate the response with the origin server before using a stale copy.', correct: true }
      - { value: 'It forces the client to always re-download the resource.', correct: false }
      - { value: 'It indicates that the response is always fresh.', correct: false }
      - { value: 'It is used for conditional GET requests.', correct: false }
    help: |
      'https://symfony.com/doc/current/http_cache.html#http-cache-headers'
  - question: 'What is the purpose of `Response::setPublic()`?'
    answers:
      - { value: 'To mark the response as cacheable by shared (public) caches.', correct: true }
      - { value: 'To make the response content visible to all users.', correct: false }
      - { value: 'To indicate that the response does not contain sensitive information.', correct: false }
      - { value: 'To set the `Cache-Control: public` directive.', correct: true }
    help: |
      'https://symfony.com/doc/current/http_cache.html#http-cache-headers'
  - question: 'Which of the following is true about `Response::setPrivate()`?'
    answers:
      - { value: 'To mark the response as cacheable only by private (browser) caches.', correct: true }
      - { value: 'To make the response content visible only to authenticated users.', correct: false }
      - { value: 'To indicate that the response contains sensitive information.', correct: false }
      - { value: 'To set the `Cache-Control: private` directive.', correct: true }
    help: |
      'https://symfony.com/doc/current/http_cache.html#http-cache-headers'
  - question: 'What is the purpose of `Response::setMaxAge()`?'
    answers:
      - { value: 'To set the `max-age` directive in the `Cache-Control` header, specifying the maximum age for private caches.', correct: true }
      - { value: 'To set the `s-maxage` directive for shared caches.', correct: false }
      - { value: 'To define the overall maximum age for the response.', correct: false }
      - { value: 'To specify the maximum number of times a response can be shared.', correct: false }
    help: |
      'https://symfony.com/doc/current/http_cache.html#http-cache-headers'
  - question: 'Which of the following is true about `Response::setExpires()`?'
    answers:
      - { value: 'To set the `Expires` HTTP header, indicating the date/time after which the response is considered stale.', correct: true }
      - { value: 'To set the maximum age for a cached response.', correct: false }
      - { value: 'To define the lifetime of a session.', correct: false }
      - { value: 'To specify when the server will stop serving the resource.', correct: false }
    help: |
      'https://symfony.com/doc/current/http_cache.html#http-cache-headers'
  - question: 'What is the purpose of `Response::setLastModified()`?'
    answers:
      - { value: 'To set the `Last-Modified` HTTP header, indicating the last time the resource was modified.', correct: true }
      - { value: 'To update the modification timestamp of the file on the server.', correct: false }
      - { value: 'To define the expiration date of the response.', correct: false }
      - { value: 'To mark the response as immutable.', correct: false }
    help: |
      'https://symfony.com/doc/current/http_cache.html#http-cache-headers'
  - question: 'Which of the following is true about `Response::setEtag()`?'
    answers:
      - { value: 'To set the `ETag` HTTP header, a unique identifier for the resource version, used for conditional requests.', correct: true }
      - { value: 'To encrypt the response content.', correct: false }
      - { value: 'To define the character encoding of the response.', correct: false }
      - { value: 'To set a timestamp for the response.', correct: false }
    help: |
      'https://symfony.com/doc/current/http_cache.html#http-cache-headers'
  - question: 'What is the purpose of `Response::setVary()`?'
    answers:
      - { value: 'To set the `Vary` HTTP header, indicating that the response varies depending on the specified request headers.', correct: true }
      - { value: 'To make the response content dynamic based on user input.', correct: false }
      - { value: 'To specify different versions of the response for different browsers.', correct: false }
      - { value: 'To enable A/B testing for the response.', correct: false }
    help: |
      'https://symfony.com/doc/current/http_cache.html#http-cache-headers'
  - question: 'Which of the following is true about `Response::isCacheable()`?'
    answers:
      - { value: 'It determines if the response can be cached based on its headers.', correct: true }
      - { value: 'It forces the response to be cached.', correct: false }
      - { value: 'It checks if the server has enough cache space.', correct: false }
      - { value: 'It is only relevant for private caches.', correct: false }
    help: |
      'https://symfony.com/doc/current/http_cache.html#http-cache-headers'
  - question: 'What is the purpose of `Response::setSharedMaxAge()`?'
    answers:
      - { value: 'To set the `s-maxage` directive in the `Cache-Control` header, specifying the maximum age for shared caches.', correct: true }
      - { value: 'To set the `max-age` directive for private caches.', correct: false }
      - { value: 'To define the overall maximum age for the response.', correct: false }
      - { value: 'To specify the maximum number of times a response can be shared.', correct: false }
    help: |
      'https://symfony.com/doc/current/http_cache.html#http-cache-headers'
  - question: 'Which of the following is true about `Response::setTtl()`?'
    answers:
      - { value: 'It sets the `max-age` directive in the `Cache-Control` header, specifying the maximum age for private caches.', correct: true }
      - { value: 'It sets the `s-maxage` directive for shared caches.', correct: false }
      - { value: 'It defines the time-to-live for the response in seconds.', correct: true }
      - { value: 'It is an alias for `setExpires()`.', correct: false }
    help: |
      'https://symfony.com/doc/current/http_cache.html#http-cache-headers'
  - question: 'What is the purpose of `Response::setClientTtl()`?'
    answers:
      - { value: 'It sets the `max-age` directive in the `Cache-Control` header, specifically for client-side (private) caches.', correct: true }
      - { value: 'It sets the `s-maxage` directive for shared caches.', correct: false }
      - { value: 'It defines the time-to-live for the response on the server.', correct: false }
      - { value: 'It is used for ESI caching.', correct: false }
    help: |
      'https://symfony.com/doc/current/http_cache.html#http-cache-headers'
  - question: 'Which of the following is true about `Response::isFresh()`?'
    answers:
      - { value: 'It checks if the response is still fresh according to its caching headers and the current time.', correct: true }
      - { value: 'It forces the client to revalidate the response.', correct: false }
      - { value: 'It indicates if the response content has been recently updated.', correct: false }
      - { value: 'It is only relevant for responses with an `ETag`.', correct: false }
    help: |
      'https://symfony.com/doc/current/http_cache.html#http-cache-headers'
  - question: 'What is the purpose of `Response::isNotModified()`?'
    answers:
      - { value: 'It checks if the request includes `If-Modified-Since` or `If-None-Match` headers and if the resource has not been modified, returning a 304 Not Modified response.', correct: true }
      - { value: 'It forces the client to download the full response content.', correct: false }
      - { value: 'It indicates that the response content is identical to a previously cached version.', correct: false }
      - { value: 'It is used to prevent caching of the response.', correct: false }
    help: |
      'https://symfony.com/doc/current/http_cache.html#http-cache-headers'
  - question: 'Which of the following is true about `Response::mustRevalidate()`?'
    answers:
      - { value: 'It sets the `must-revalidate` directive in the `Cache-Control` header, requiring caches to revalidate the response with the origin server before using a stale copy.', correct: true }
      - { value: 'It forces the client to always re-download the resource.', correct: false }
      - { value: 'It indicates that the response is always fresh.', correct: false }
      - { value: 'It is used for conditional GET requests.', correct: false }
    help: |
      'https://symfony.com/doc/current/http_cache.html#http-cache-headers'
  - question: 'What is the purpose of `Response::setPublic()`?'
    answers:
      - { value: 'To mark the response as cacheable by shared (public) caches.', correct: true }
      - { value: 'To make the response content visible to all users.', correct: false }
      - { value: 'To indicate that the response does not contain sensitive information.', correct: false }
      - { value: 'To set the `Cache-Control: public` directive.', correct: true }
    help: |
      'https://symfony.com/doc/current/http_cache.html#http-cache-headers'
  - question: 'Which of the following is true about `Response::setPrivate()`?'
    answers:
      - { value: 'To mark the response as cacheable only by private (browser) caches.', correct: true }
      - { value: 'To make the response content visible only to authenticated users.', correct: false }
      - { value: 'To indicate that the response contains sensitive information.', correct: false }
      - { value: 'To set the `Cache-Control: private` directive.', correct: true }
    help: |
      'https://symfony.com/doc/current/http_cache.html#http-cache-headers'
  - question: 'What is the purpose of `Response::setMaxAge()`?'
    answers:
      - { value: 'To set the `max-age` directive in the `Cache-Control` header, specifying the maximum age for private caches.', correct: true }
      - { value: 'To set the `s-maxage` directive for shared caches.', correct: false }
      - { value: 'To define the overall maximum age for the response.', correct: false }
      - { value: 'To specify the maximum number of times a response can be shared.', correct: false }
    help: |
      'https://symfony.com/doc/current/http_cache.html#http-cache-headers'
  - question: 'Which of the following is true about `Response::setExpires()`?'
    answers:
      - { value: 'To set the `Expires` HTTP header, indicating the date/time after which the response is considered stale.', correct: true }
      - { value: 'To set the maximum age for a cached response.', correct: false }
      - { value: 'To define the lifetime of a session.', correct: false }
      - { value: 'To specify when the server will stop serving the resource.', correct: false }
    help: |
      'https://symfony.com/doc/current/http_cache.html#http-cache-headers'
  - question: 'What is the purpose of `Response::setLastModified()`?'
    answers:
      - { value: 'To set the `Last-Modified` HTTP header, indicating the last time the resource was modified.', correct: true }
      - { value: 'To update the modification timestamp of the file on the server.', correct: false }
      - { value: 'To define the expiration date of the response.', correct: false }
      - { value: 'To mark the response as immutable.', correct: false }
    help: |
      'https://symfony.com/doc/current/http_cache.html#http-cache-headers'
  - question: 'Which of the following is true about `Response::setEtag()`?'
    answers:
      - { value: 'To set the `ETag` HTTP header, a unique identifier for the resource version, used for conditional requests.', correct: true }
      - { value: 'To encrypt the response content.', correct: false }
      - { value: 'To define the character encoding of the response.', correct: false }
      - { value: 'To set a timestamp for the response.', correct: false }
    help: |
      'https://symfony.com/doc/current/http_cache.html#http-cache-headers'
  - question: 'What is the purpose of `Response::setVary()`?'
    answers:
      - { value: 'To set the `Vary` HTTP header, indicating that the response varies depending on the specified request headers.', correct: true }
      - { value: 'To make the response content dynamic based on user input.', correct: false }
      - { value: 'To specify different versions of the response for different browsers.', correct: false }
      - { value: 'To enable A/B testing for the response.', correct: false }
    help: |
      'https://symfony.com/doc/current/http_cache.html#http-cache-headers'
  - question: 'Which of the following is true about `Response::isCacheable()`?'
    answers:
      - { value: 'It determines if the response can be cached based on its headers.', correct: true }
      - { value: 'It forces the response to be cached.', correct: false }
      - { value: 'It checks if the server has enough cache space.', correct: false }
      - { value: 'It is only relevant for private caches.', correct: false }
    help: |
      'https://symfony.com/doc/current/http_cache.html#http-cache-headers'
  - question: 'What is the purpose of `Response::setSharedMaxAge()`?'
    answers:
      - { value: 'To set the `s-maxage` directive in the `Cache-Control` header, specifying the maximum age for shared caches.', correct: true }
      - { value: 'To set the `max-age` directive for private caches.', correct: false }
      - { value: 'To define the overall maximum age for the response.', correct: false }
      - { value: 'To specify the maximum number of times a response can be shared.', correct: false }
    help: |
      'https://symfony.com/doc/current/http_cache.html#http-cache-headers'
  - question: 'Which of the following is true about `Response::setTtl()`?'
    answers:
      - { value: 'It sets the `max-age` directive in the `Cache-Control` header, specifying the maximum age for private caches.', correct: true }
      - { value: 'It sets the `s-maxage` directive for shared caches.', correct: false }
      - { value: 'It defines the time-to-live for the response in seconds.', correct: true }
      - { value: 'It is an alias for `setExpires()`.', correct: false }
    help: |
      'https://symfony.com/doc/current/http_cache.html#http-cache-headers'
  - question: 'What is the purpose of `Response::setClientTtl()`?'
    answers:
      - { value: 'It sets the `max-age` directive in the `Cache-Control` header, specifically for client-side (private) caches.', correct: true }
      - { value: 'It sets the `s-maxage` directive for shared caches.', correct: false }
      - { value: 'It defines the time-to-live for the response on the server.', correct: false }
      - { value: 'It is used for ESI caching.', correct: false }
    help: |
      'https://symfony.com/doc/current/http_cache.html#http-cache-headers'
  - question: 'Which of the following is true about `Response::isFresh()`?'
    answers:
      - { value: 'It checks if the response is still fresh according to its caching headers and the current time.', correct: true }
      - { value: 'It forces the client to revalidate the response.', correct: false }
      - { value: 'It indicates if the response content has been recently updated.', correct: false }
      - { value: 'It is only relevant for responses with an `ETag`.', correct: false }
    help: |
      'https://symfony.com/doc/current/http_cache.html#http-cache-headers'
  - question: 'What is the purpose of `Response::isNotModified()`?'
    answers:
      - { value: 'It checks if the request includes `If-Modified-Since` or `If-None-Match` headers and if the resource has not been modified, returning a 304 Not Modified response.', correct: true }
      - { value: 'It forces the client to download the full response content.', correct: false }
      - { value: 'It indicates that the response content is identical to a previously cached version.', correct: false }
      - { value: 'It is used to prevent caching of the response.', correct: false }
    help: |
      'https://symfony.com/doc/current/http_cache.html#http-cache-headers'
  - question: 'Which of the following is true about `Response::mustRevalidate()`?'
    answers:
      - { value: 'It sets the `must-revalidate` directive in the `Cache-Control` header, requiring caches to revalidate the response with the origin server before using a stale copy.', correct: true }
      - { value: 'It forces the client to always re-download the resource.', correct: false }
      - { value: 'It indicates that the response is always fresh.', correct: false }
      - { value: 'It is used for conditional GET requests.', correct: false }
    help: |
      'https://symfony.com/doc/current/http_cache.html#http-cache-headers'
  - question: 'What is the purpose of `Response::setPublic()`?'
    answers:
      - { value: 'To mark the response as cacheable by shared (public) caches.', correct: true }
      - { value: 'To make the response content visible to all users.', correct: false }
      - { value: 'To indicate that the response does not contain sensitive information.', correct: false }
      - { value: 'To set the `Cache-Control: public` directive.', correct: true }
    help: |
      'https://symfony.com/doc/current/http_cache.html#http-cache-headers'
  - question: 'Which of the following is true about `Response::setPrivate()`?'
    answers:
      - { value: 'To mark the response as cacheable only by private (browser) caches.', correct: true }
      - { value: 'To make the response content visible only to authenticated users.', correct: false }
      - { value: 'To indicate that the response contains sensitive information.', correct: false }
      - { value: 'To set the `Cache-Control: private` directive.', correct: true }
    help: |
      'https://symfony.com/doc/current/http_cache.html#http-cache-headers'
  - question: 'What is the purpose of `Response::setMaxAge()`?'
    answers:
      - { value: 'To set the `max-age` directive in the `Cache-Control` header, specifying the maximum age for private caches.', correct: true }
      - { value: 'To set the `s-maxage` directive for shared caches.', correct: false }
      - { value: 'To define the overall maximum age for the response.', correct: false }
      - { value: 'To specify the maximum number of times a response can be shared.', correct: false }
    help: |
      'https://symfony.com/doc/current/http_cache.html#http-cache-headers'
  - question: 'Which of the following is true about `Response::setExpires()`?'
    answers:
      - { value: 'To set the `Expires` HTTP header, indicating the date/time after which the response is considered stale.', correct: true }
      - { value: 'To set the maximum age for a cached response.', correct: false }
      - { value: 'To define the lifetime of a session.', correct: false }
      - { value: 'To specify when the server will stop serving the resource.', correct: false }
    help: |
      'https://symfony.com/doc/current/http_cache.html#http-cache-headers'
  - question: 'What is the purpose of `Response::setLastModified()`?'
    answers:
      - { value: 'To set the `Last-Modified` HTTP header, indicating the last time the resource was modified.', correct: true }
      - { value: 'To update the modification timestamp of the file on the server.', correct: false }
      - { value: 'To define the expiration date of the response.', correct: false }
      - { value: 'To mark the response as immutable.', correct: false }
    help: |
      'https://symfony.com/doc/current/http_cache.html#http-cache-headers'
  - question: 'Which of the following is true about `Response::setEtag()`?'
    answers:
      - { value: 'To set the `ETag` HTTP header, a unique identifier for the resource version, used for conditional requests.', correct: true }
      - { value: 'To encrypt the response content.', correct: false }
      - { value: 'To define the character encoding of the response.', correct: false }
      - { value: 'To set a timestamp for the response.', correct: false }
    help: |
      'https://symfony.com/doc/current/http_cache.html#http-cache-headers'
  - question: 'What is the purpose of `Response::setVary()`?'
    answers:
      - { value: 'To set the `Vary` HTTP header, indicating that the response varies depending on the specified request headers.', correct: true }
      - { value: 'To make the response content dynamic based on user input.', correct: false }
      - { value: 'To specify different versions of the response for different browsers.', correct: false }
      - { value: 'To enable A/B testing for the response.', correct: false }
    help: |
      'https://symfony.com/doc/current/http_cache.html#http-cache-headers'
  - question: 'Which of the following is true about `Response::isCacheable()`?'
    answers:
      - { value: 'It determines if the response can be cached based on its headers.', correct: true }
      - { value: 'It forces the response to be cached.', correct: false }
      - { value: 'It checks if the server has enough cache space.', correct: false }
      - { value: 'It is only relevant for private caches.', correct: false }
    help: |
      'https://symfony.com/doc/current/http_cache.html#http-cache-headers'
  - question: 'What is the purpose of `Response::setSharedMaxAge()`?'
    answers:
      - { value: 'To set the `s-maxage` directive in the `Cache-Control` header, specifying the maximum age for shared caches.', correct: true }
      - { value: 'To set the `max-age` directive for private caches.', correct: false }
      - { value: 'To define the overall maximum age for the response.', correct: false }
      - { value: 'To specify the maximum number of times a response can be shared.', correct: false }
    help: |
      'https://symfony.com/doc/current/http_cache.html#http-cache-headers'
  - question: 'Which of the following is true about `Response::setTtl()`?'
    answers:
      - { value: 'It sets the `max-age` directive in the `Cache-Control` header, specifying the maximum age for private caches.', correct: true }
      - { value: 'It sets the `s-maxage` directive for shared caches.', correct: false }
      - { value: 'It defines the time-to-live for the response in seconds.', correct: true }
      - { value: 'It is an alias for `setExpires()`.', correct: false }
    help: |
      'https://symfony.com/doc/current/http_cache.html#http-cache-headers'
  - question: 'What is the purpose of `Response::setClientTtl()`?'
    answers:
      - { value: 'It sets the `max-age` directive in the `Cache-Control` header, specifically for client-side (private) caches.', correct: true }
      - { value: 'It sets the `s-maxage` directive for shared caches.', correct: false }
      - { value: 'It defines the time-to-live for the response on the server.', correct: false }
      - { value: 'It is used for ESI caching.', correct: false }
    help: |
      'https://symfony.com/doc/current/http_cache.html#http-cache-headers'
  - question: 'Which of the following is true about `Response::isFresh()`?'
    answers:
      - { value: 'It checks if the response is still fresh according to its caching headers and the current time.', correct: true }
      - { value: 'It forces the client to revalidate the response.', correct: false }
      - { value: 'It indicates if the response content has been recently updated.', correct: false }
      - { value: 'It is only relevant for responses with an `ETag`.', correct: false }
    help: |
      'https://symfony.com/doc/current/http_cache.html#http-cache-headers'
  - question: 'What is the purpose of `Response::isNotModified()`?'
    answers:
      - { value: 'It checks if the request includes `If-Modified-Since` or `If-None-Match` headers and if the resource has not been modified, returning a 304 Not Modified response.', correct: true }
      - { value: 'It forces the client to download the full response content.', correct: false }
      - { value: 'It indicates that the response content is identical to a previously cached version.', correct: false }
      - { value: 'It is used to prevent caching of the response.', correct: false }
    help: |
      'https://symfony.com/doc/current/http_cache.html#http-cache-headers'
  - question: 'Which of the following is true about `Response::mustRevalidate()`?'
    answers:
      - { value: 'It sets the `must-revalidate` directive in the `Cache-Control` header, requiring caches to revalidate the response with the origin server before using a stale copy.', correct: true }
      - { value: 'It forces the client to always re-download the resource.', correct: false }
      - { value: 'It indicates that the response is always fresh.', correct: false }
      - { value: 'It is used for conditional GET requests.', correct: false }
    help: |
      'https://symfony.com/doc/current/http_cache.html#http-cache-headers'
  - question: 'What is the purpose of `Response::setPublic()`?'
    answers:
      - { value: 'To mark the response as cacheable by shared (public) caches.', correct: true }
      - { value: 'To make the response content visible to all users.', correct: false }
      - { value: 'To indicate that the response does not contain sensitive information.', correct: false }
      - { value: 'To set the `Cache-Control: public` directive.', correct: true }
    help: |
      'https://symfony.com/doc/current/http_cache.html#http-cache-headers'
  - question: 'Which of the following is true about `Response::setPrivate()`?'
    answers:
      - { value: 'To mark the response as cacheable only by private (browser) caches.', correct: true }
      - { value: 'To make the response content visible only to authenticated users.', correct: false }
      - { value: 'To indicate that the response contains sensitive information.', correct: false }
      - { value: 'To set the `Cache-Control: private` directive.', correct: true }
    help: |
      'https://symfony.com/doc/current/http_cache.html#http-cache-headers'
  - question: 'What is the purpose of `Response::setMaxAge()`?'
    answers:
      - { value: 'To set the `max-age` directive in the `Cache-Control` header, specifying the maximum age for private caches.', correct: true }
      - { value: 'To set the `s-maxage` directive for shared caches.', correct: false }
      - { value: 'To define the overall maximum age for the response.', correct: false }
      - { value: 'To specify the maximum number of times a response can be shared.', correct: false }
    help: |
      'https://symfony.com/doc/current/http_cache.html#http-cache-headers'
  - question: 'Which of the following is true about `Response::setExpires()`?'
    answers:
      - { value: 'To set the `Expires` HTTP header, indicating the date/time after which the response is considered stale.', correct: true }
      - { value: 'To set the maximum age for a cached response.', correct: false }
      - { value: 'To define the lifetime of a session.', correct: false }
      - { value: 'To specify when the server will stop serving the resource.', correct: false }
    help: |
      'https://symfony.com/doc/current/http_cache.html#http-cache-headers'
  - question: 'What is the purpose of `Response::setLastModified()`?'
    answers:
      - { value: 'To set the `Last-Modified` HTTP header, indicating the last time the resource was modified.', correct: true }
      - { value: 'To update the modification timestamp of the file on the server.', correct: false }
      - { value: 'To define the expiration date of the response.', correct: false }
      - { value: 'To mark the response as immutable.', correct: false }
    help: |
      'https://symfony.com/doc/current/http_cache.html#http-cache-headers'
  - question: 'Which of the following is true about `Response::setEtag()`?'
    answers:
      - { value: 'To set the `ETag` HTTP header, a unique identifier for the resource version, used for conditional requests.', correct: true }
      - { value: 'To encrypt the response content.', correct: false }
      - { value: 'To define the character encoding of the response.', correct: false }
      - { value: 'To set a timestamp for the response.', correct: false }
    help: |
      'https://symfony.com/doc/current/http_cache.html#http-cache-headers'
  - question: 'What is the purpose of `Response::setVary()`?'
    answers:
      - { value: 'To set the `Vary` HTTP header, indicating that the response varies depending on the specified request headers.', correct: true }
      - { value: 'To make the response content dynamic based on user input.', correct: false }
      - { value: 'To specify different versions of the response for different browsers.', correct: false }
      - { value: 'To enable A/B testing for the response.', correct: false }
    help: |
      'https://symfony.com/doc/current/http_cache.html#http-cache-headers'
  - question: 'Which of the following is true about `Response::isCacheable()`?'
    answers:
      - { value: 'It determines if the response can be cached based on its headers.', correct: true }
      - { value: 'It forces the response to be cached.', correct: false }
      - { value: 'It checks if the server has enough cache space.', correct: false }
      - { value: 'It is only relevant for private caches.', correct: false }
    help: |
      'https://symfony.com/doc/current/http_cache.html#http-cache-headers'
  - question: 'What is the purpose of `Response::setSharedMaxAge()`?'
    answers:
      - { value: 'To set the `s-maxage` directive in the `Cache-Control` header, specifying the maximum age for shared caches.', correct: true }
      - { value: 'To set the `max-age` directive for private caches.', correct: false }
      - { value: 'To define the overall maximum age for the response.', correct: false }
      - { value: 'To specify the maximum number of times a response can be shared.', correct: false }
    help: |
      'https://symfony.com/doc/current/http_cache.html#http-cache-headers'
  - question: 'Which of the following is true about `Response::setTtl()`?'
    answers:
      - { value: 'It sets the `max-age` directive in the `Cache-Control` header, specifying the maximum age for private caches.', correct: true }
      - { value: 'It sets the `s-maxage` directive for shared caches.', correct: false }
      - { value: 'It defines the time-to-live for the response in seconds.', correct: true }
      - { value: 'It is an alias for `setExpires()`.', correct: false }
    help: |
      'https://symfony.com/doc/current/http_cache.html#http-cache-headers'
  - question: 'What is the purpose of `Response::setClientTtl()`?'
    answers:
      - { value: 'It sets the `max-age` directive in the `Cache-Control` header, specifically for client-side (private) caches.', correct: true }
      - { value: 'It sets the `s-maxage` directive for shared caches.', correct: false }
      - { value: 'It defines the time-to-live for the response on the server.', correct: false }
      - { value: 'It is used for ESI caching.', correct: false }
    help: |
      'https://symfony.com/doc/current/http_cache.html#http-cache-headers'
  - question: 'Which of the following is true about `Response::isFresh()`?'
    answers:
      - { value: 'It checks if the response is still fresh according to its caching headers and the current time.', correct: true }
      - { value: 'It forces the client to revalidate the response.', correct: false }
      - { value: 'It indicates if the response content has been recently updated.', correct: false }
      - { value: 'It is only relevant for responses with an `ETag`.', correct: false }
    help: |
      'https://symfony.com/doc/current/http_cache.html#http-cache-headers'
  - question: 'What is the purpose of `Response::isNotModified()`?'
    answers:
      - { value: 'It checks if the request includes `If-Modified-Since` or `If-None-Match` headers and if the resource has not been modified, returning a 304 Not Modified response.', correct: true }
      - { value: 'It forces the client to download the full response content.', correct: false }
      - { value: 'It indicates that the response content is identical to a previously cached version.', correct: false }
      - { value: 'It is used to prevent caching of the response.', correct: false }
    help: |
      'https://symfony.com/doc/current/http_cache.html#http-cache-headers'
  - question: 'Which of the following is true about `Response::mustRevalidate()`?'
    answers:
      - { value: 'It sets the `must-revalidate` directive in the `Cache-Control` header, requiring caches to revalidate the response with the origin server before using a stale copy.', correct: true }
      - { value: 'It forces the client to always re-download the resource.', correct: false }
      - { value: 'It indicates that the response is always fresh.', correct: false }
      - { value: 'It is used for conditional GET requests.', correct: false }
    help: |
      'https://symfony.com/doc/current/http_cache.html#http-cache-headers'
  - question: 'What is the purpose of `Response::setPublic()`?'
    answers:
      - { value: 'To mark the response as cacheable by shared (public) caches.', correct: true }
      - { value: 'To make the response content visible to all users.', correct: false }
      - { value: 'To indicate that the response does not contain sensitive information.', correct: false }
      - { value: 'To set the `Cache-Control: public` directive.', correct: true }
    help: |
      'https://symfony.com/doc/current/http_cache.html#http-cache-headers'
  - question: 'Which of the following is true about `Response::setPrivate()`?'
    answers:
      - { value: 'To mark the response as cacheable only by private (browser) caches.', correct: true }
      - { value: 'To make the response content visible only to authenticated users.', correct: false }
      - { value: 'To indicate that the response contains sensitive information.', correct: false }
      - { value: 'To set the `Cache-Control: private` directive.', correct: true }
    help: |
      'https://symfony.com/doc/current/http_cache.html#http-cache-headers'
  - question: 'What is the purpose of `Response::setMaxAge()`?'
    answers:
      - { value: 'To set the `max-age` directive in the `Cache-Control` header, specifying the maximum age for private caches.', correct: true }
      - { value: 'To set the `s-maxage` directive for shared caches.', correct: false }
      - { value: 'To define the overall maximum age for the response.', correct: false }
      - { value: 'To specify the maximum number of times a response can be shared.', correct: false }
    help: |
      'https://symfony.com/doc/current/http_cache.html#http-cache-headers'
  - question: 'Which of the following is true about `Response::setExpires()`?'
    answers:
      - { value: 'To set the `Expires` HTTP header, indicating the date/time after which the response is considered stale.', correct: true }
      - { value: 'To set the maximum age for a cached response.', correct: false }
      - { value: 'To define the lifetime of a session.', correct: false }
      - { value: 'To specify when the server will stop serving the resource.', correct: false }
    help: |
      'https://symfony.com/doc/current/http_cache.html#http-cache-headers'
  - question: 'What is the purpose of `Response::setLastModified()`?'
    answers:
      - { value: 'To set the `Last-Modified` HTTP header, indicating the last time the resource was modified.', correct: true }
      - { value: 'To update the modification timestamp of the file on the server.', correct: false }
      - { value: 'To define the expiration date of the response.', correct: false }
      - { value: 'To mark the response as immutable.', correct: false }
    help: |
      'https://symfony.com/doc/current/http_cache.html#http-cache-headers'
  - question: 'Which of the following is true about `Response::setEtag()`?'
    answers:
      - { value: 'To set the `ETag` HTTP header, a unique identifier for the resource version, used for conditional requests.', correct: true }
      - { value: 'To encrypt the response content.', correct: false }
      - { value: 'To define the character encoding of the response.', correct: false }
      - { value: 'To set a timestamp for the response.', correct: false }
    help: |
      'https://symfony.com/doc/current/http_cache.html#http-cache-headers'
  - question: 'What is the purpose of `Response::setVary()`?'
    answers:
      - { value: 'To set the `Vary` HTTP header, indicating that the response varies depending on the specified request headers.', correct: true }
      - { value: 'To make the response content dynamic based on user input.', correct: false }
      - { value: 'To specify different versions of the response for different browsers.', correct: false }
      - { value: 'To enable A/B testing for the response.', correct: false }
    help: |
      'https://symfony.com/doc/current/http_cache.html#http-cache-headers'
  - question: 'Which of the following is true about `Response::isCacheable()`?'
    answers:
      - { value: 'It determines if the response can be cached based on its headers.', correct: true }
      - { value: 'It forces the response to be cached.', correct: false }
      - { value: 'It checks if the server has enough cache space.', correct: false }
      - { value: 'It is only relevant for private caches.', correct: false }
    help: |
      'https://symfony.com/doc/current/http_cache.html#http-cache-headers'
  - question: 'What is the purpose of `Response::setSharedMaxAge()`?'
    answers:
      - { value: 'To set the `s-maxage` directive in the `Cache-Control` header, specifying the maximum age for shared caches.', correct: true }
      - { value: 'To set the `max-age` directive for private caches.', correct: false }
      - { value: 'To define the overall maximum age for the response.', correct: false }
      - { value: 'To specify the maximum number of times a response can be shared.', correct: false }
    help: |
      'https://symfony.com/doc/current/http_cache.html#http-cache-headers'
  - question: 'Which of the following is true about `Response::setTtl()`?'
    answers:
      - { value: 'It sets the `max-age` directive in the `Cache-Control` header, specifying the maximum age for private caches.', correct: true }
      - { value: 'It sets the `s-maxage` directive for shared caches.', correct: false }
      - { value: 'It defines the time-to-live for the response in seconds.', correct: true }
      - { value: 'It is an alias for `setExpires()`.', correct: false }
    help: |
      'https://symfony.com/doc/current/http_cache.html#http-cache-headers'
  - question: 'What is the purpose of `Response::setClientTtl()`?'
    answers:
      - { value: 'It sets the `max-age` directive in the `Cache-Control` header, specifically for client-side (private) caches.', correct: true }
      - { value: 'It sets the `s-maxage` directive for shared caches.', correct: false }
      - { value: 'It defines the time-to-live for the response on the server.', correct: false }
      - { value: 'It is used for ESI caching.', correct: false }
    help: |
      'https://symfony.com/doc/current/http_cache.html#http-cache-headers'
  - question: 'Which of the following is true about `Response::isFresh()`?'
    answers:
      - { value: 'It checks if the response is still fresh according to its caching headers and the current time.', correct: true }
      - { value: 'It forces the client to revalidate the response.', correct: false }
      - { value: 'It indicates if the response content has been recently updated.', correct: false }
      - { value: 'It is only relevant for responses with an `ETag`.', correct: false }
    help: |
      'https://symfony.com/doc/current/http_cache.html#http-cache-headers'
  - question: 'What is the purpose of `Response::isNotModified()`?'
    answers:
      - { value: 'It checks if the request includes `If-Modified-Since` or `If-None-Match` headers and if the resource has not been modified, returning a 304 Not Modified response.', correct: true }
      - { value: 'It forces the client to download the full response content.', correct: false }
      - { value: 'It indicates that the response content is identical to a previously cached version.', correct: false }
      - { value: 'It is used to prevent caching of the response.', correct: false }
    help: |
      'https://symfony.com/doc/current/http_cache.html#http-cache-headers'
  - question: 'Which of the following is true about `Response::mustRevalidate()`?'
    answers:
      - { value: 'It sets the `must-revalidate` directive in the `Cache-Control` header, requiring caches to revalidate the response with the origin server before using a stale copy.', correct: true }
      - { value: 'It forces the client to always re-download the resource.', correct: false }
      - { value: 'It indicates that the response is always fresh.', correct: false }
      - { value: 'It is used for conditional GET requests.', correct: false }
    help: |
      'https://symfony.com/doc/current/http_cache.html#http-cache-headers'
```